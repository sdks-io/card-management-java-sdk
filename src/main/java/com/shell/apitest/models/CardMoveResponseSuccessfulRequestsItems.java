/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CardMoveResponseSuccessfulRequestsItems type.
 */
public class CardMoveResponseSuccessfulRequestsItems {
    private OptionalNullable<String> accountNumber;
    private OptionalNullable<Integer> accountId;
    private OptionalNullable<String> pAN;
    private OptionalNullable<Integer> cardId;
    private OptionalNullable<Integer> moveCardReference;

    /**
     * Default constructor.
     */
    public CardMoveResponseSuccessfulRequestsItems() {
    }

    /**
     * Initialization constructor.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountId  Integer value for accountId.
     * @param  pAN  String value for pAN.
     * @param  cardId  Integer value for cardId.
     * @param  moveCardReference  Integer value for moveCardReference.
     */
    public CardMoveResponseSuccessfulRequestsItems(
            String accountNumber,
            Integer accountId,
            String pAN,
            Integer cardId,
            Integer moveCardReference) {
        this.accountNumber = OptionalNullable.of(accountNumber);
        this.accountId = OptionalNullable.of(accountId);
        this.pAN = OptionalNullable.of(pAN);
        this.cardId = OptionalNullable.of(cardId);
        this.moveCardReference = OptionalNullable.of(moveCardReference);
    }

    /**
     * Initialization constructor.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountId  Integer value for accountId.
     * @param  pAN  String value for pAN.
     * @param  cardId  Integer value for cardId.
     * @param  moveCardReference  Integer value for moveCardReference.
     */

    protected CardMoveResponseSuccessfulRequestsItems(OptionalNullable<String> accountNumber,
            OptionalNullable<Integer> accountId, OptionalNullable<String> pAN,
            OptionalNullable<Integer> cardId, OptionalNullable<Integer> moveCardReference) {
        this.accountNumber = accountNumber;
        this.accountId = accountId;
        this.pAN = pAN;
        this.cardId = cardId;
        this.moveCardReference = moveCardReference;
    }

    /**
     * Internal Getter for AccountNumber.
     * @return Returns the Internal String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountNumber() {
        return this.accountNumber;
    }

    /**
     * Getter for AccountNumber.
     * @return Returns the String
     */
    public String getAccountNumber() {
        return OptionalNullable.getFrom(accountNumber);
    }

    /**
     * Setter for AccountNumber.
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = OptionalNullable.of(accountNumber);
    }

    /**
     * UnSetter for AccountNumber.
     */
    public void unsetAccountNumber() {
        accountNumber = null;
    }

    /**
     * Internal Getter for AccountId.
     * @return Returns the Internal Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAccountId() {
        return this.accountId;
    }

    /**
     * Getter for AccountId.
     * @return Returns the Integer
     */
    public Integer getAccountId() {
        return OptionalNullable.getFrom(accountId);
    }

    /**
     * Setter for AccountId.
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = OptionalNullable.of(accountId);
    }

    /**
     * UnSetter for AccountId.
     */
    public void unsetAccountId() {
        accountId = null;
    }

    /**
     * Internal Getter for PAN.
     * @return Returns the Internal String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPAN() {
        return this.pAN;
    }

    /**
     * Getter for PAN.
     * @return Returns the String
     */
    public String getPAN() {
        return OptionalNullable.getFrom(pAN);
    }

    /**
     * Setter for PAN.
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = OptionalNullable.of(pAN);
    }

    /**
     * UnSetter for PAN.
     */
    public void unsetPAN() {
        pAN = null;
    }

    /**
     * Internal Getter for CardId.
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardId() {
        return this.cardId;
    }

    /**
     * Getter for CardId.
     * @return Returns the Integer
     */
    public Integer getCardId() {
        return OptionalNullable.getFrom(cardId);
    }

    /**
     * Setter for CardId.
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = OptionalNullable.of(cardId);
    }

    /**
     * UnSetter for CardId.
     */
    public void unsetCardId() {
        cardId = null;
    }

    /**
     * Internal Getter for MoveCardReference.
     * @return Returns the Internal Integer
     */
    @JsonGetter("MoveCardReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetMoveCardReference() {
        return this.moveCardReference;
    }

    /**
     * Getter for MoveCardReference.
     * @return Returns the Integer
     */
    public Integer getMoveCardReference() {
        return OptionalNullable.getFrom(moveCardReference);
    }

    /**
     * Setter for MoveCardReference.
     * @param moveCardReference Value for Integer
     */
    @JsonSetter("MoveCardReference")
    public void setMoveCardReference(Integer moveCardReference) {
        this.moveCardReference = OptionalNullable.of(moveCardReference);
    }

    /**
     * UnSetter for MoveCardReference.
     */
    public void unsetMoveCardReference() {
        moveCardReference = null;
    }

    /**
     * Converts this CardMoveResponseSuccessfulRequestsItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardMoveResponseSuccessfulRequestsItems [" + "accountNumber=" + accountNumber
                + ", accountId=" + accountId + ", pAN=" + pAN + ", cardId=" + cardId
                + ", moveCardReference=" + moveCardReference + "]";
    }

    /**
     * Builds a new {@link CardMoveResponseSuccessfulRequestsItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardMoveResponseSuccessfulRequestsItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.accountNumber = internalGetAccountNumber();
        builder.accountId = internalGetAccountId();
        builder.pAN = internalGetPAN();
        builder.cardId = internalGetCardId();
        builder.moveCardReference = internalGetMoveCardReference();
        return builder;
    }

    /**
     * Class to build instances of {@link CardMoveResponseSuccessfulRequestsItems}.
     */
    public static class Builder {
        private OptionalNullable<String> accountNumber;
        private OptionalNullable<Integer> accountId;
        private OptionalNullable<String> pAN;
        private OptionalNullable<Integer> cardId;
        private OptionalNullable<Integer> moveCardReference;



        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = OptionalNullable.of(accountNumber);
            return this;
        }

        /**
         * UnSetter for accountNumber.
         * @return Builder
         */
        public Builder unsetAccountNumber() {
            accountNumber = null;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = OptionalNullable.of(accountId);
            return this;
        }

        /**
         * UnSetter for accountId.
         * @return Builder
         */
        public Builder unsetAccountId() {
            accountId = null;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = OptionalNullable.of(pAN);
            return this;
        }

        /**
         * UnSetter for pAN.
         * @return Builder
         */
        public Builder unsetPAN() {
            pAN = null;
            return this;
        }

        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = OptionalNullable.of(cardId);
            return this;
        }

        /**
         * UnSetter for cardId.
         * @return Builder
         */
        public Builder unsetCardId() {
            cardId = null;
            return this;
        }

        /**
         * Setter for moveCardReference.
         * @param  moveCardReference  Integer value for moveCardReference.
         * @return Builder
         */
        public Builder moveCardReference(Integer moveCardReference) {
            this.moveCardReference = OptionalNullable.of(moveCardReference);
            return this;
        }

        /**
         * UnSetter for moveCardReference.
         * @return Builder
         */
        public Builder unsetMoveCardReference() {
            moveCardReference = null;
            return this;
        }

        /**
         * Builds a new {@link CardMoveResponseSuccessfulRequestsItems} object using the set fields.
         * @return {@link CardMoveResponseSuccessfulRequestsItems}
         */
        public CardMoveResponseSuccessfulRequestsItems build() {
            return new CardMoveResponseSuccessfulRequestsItems(accountNumber, accountId, pAN,
                    cardId, moveCardReference);
        }
    }
}
