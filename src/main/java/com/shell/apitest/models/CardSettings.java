/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CardSettings type.
 */
public class CardSettings {
    private OptionalNullable<String> selfSelectedEncryptedPIN;
    private OptionalNullable<String> selfSelectedPINKeyID;
    private OptionalNullable<String> selfSelectedPINSessionKey;
    private Boolean validateFleetId;
    private OptionalNullable<Integer> cardGroupId;
    private Integer cardDeliveryType;
    private OptionalNullable<String> deliveryContactTitle;
    private OptionalNullable<String> deliveryContactName;
    private OptionalNullable<String> deliveryCompanyName;
    private OptionalNullable<String> deliveryAddressLine1;
    private OptionalNullable<String> deliveryAddressLine2;
    private OptionalNullable<String> deliveryAddressLine3;
    private OptionalNullable<String> deliveryZipCode;
    private OptionalNullable<String> deliveryCity;
    private OptionalNullable<Integer> deliveryRegionId;
    private OptionalNullable<String> deliveryRegion;
    private OptionalNullable<String> deliveryCountry;
    private OptionalNullable<Integer> deliveryCountryId;
    private String phoneNumber;
    private OptionalNullable<String> emailAddress;
    private OptionalNullable<Integer> pINDeliveryAddressType;
    private OptionalNullable<Integer> pINAdviceType;
    private OptionalNullable<String> pINDeliveryContactTitle;
    private OptionalNullable<String> pINDeliveryContactName;
    private OptionalNullable<String> pINDeliveryCompanyName;
    private OptionalNullable<String> pINDeliveryAddressLine1;
    private OptionalNullable<String> pINDeliveryAddressLine2;
    private OptionalNullable<String> pINDeliveryAddressLine3;
    private OptionalNullable<String> pINDeliveryZipCode;
    private OptionalNullable<String> pINDeliveryCity;
    private OptionalNullable<Integer> pINDeliveryRegionId;
    private OptionalNullable<String> pINDeliveryRegion;
    private OptionalNullable<String> pINDeliveryCountry;
    private OptionalNullable<Integer> pINDeliveryCountryId;
    private OptionalNullable<String> pINPhoneNumber;
    private OptionalNullable<String> pINEmailAddress;
    private Boolean saveForPINReminder;
    private Boolean saveForCardReissue;
    private OptionalNullable<String> expiryDate;

    /**
     * Default constructor.
     */
    public CardSettings() {
    }

    /**
     * Initialization constructor.
     * @param  cardDeliveryType  Integer value for cardDeliveryType.
     * @param  selfSelectedEncryptedPIN  String value for selfSelectedEncryptedPIN.
     * @param  selfSelectedPINKeyID  String value for selfSelectedPINKeyID.
     * @param  selfSelectedPINSessionKey  String value for selfSelectedPINSessionKey.
     * @param  validateFleetId  Boolean value for validateFleetId.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  deliveryContactTitle  String value for deliveryContactTitle.
     * @param  deliveryContactName  String value for deliveryContactName.
     * @param  deliveryCompanyName  String value for deliveryCompanyName.
     * @param  deliveryAddressLine1  String value for deliveryAddressLine1.
     * @param  deliveryAddressLine2  String value for deliveryAddressLine2.
     * @param  deliveryAddressLine3  String value for deliveryAddressLine3.
     * @param  deliveryZipCode  String value for deliveryZipCode.
     * @param  deliveryCity  String value for deliveryCity.
     * @param  deliveryRegionId  Integer value for deliveryRegionId.
     * @param  deliveryRegion  String value for deliveryRegion.
     * @param  deliveryCountry  String value for deliveryCountry.
     * @param  deliveryCountryId  Integer value for deliveryCountryId.
     * @param  phoneNumber  String value for phoneNumber.
     * @param  emailAddress  String value for emailAddress.
     * @param  pINDeliveryAddressType  Integer value for pINDeliveryAddressType.
     * @param  pINAdviceType  Integer value for pINAdviceType.
     * @param  pINDeliveryContactTitle  String value for pINDeliveryContactTitle.
     * @param  pINDeliveryContactName  String value for pINDeliveryContactName.
     * @param  pINDeliveryCompanyName  String value for pINDeliveryCompanyName.
     * @param  pINDeliveryAddressLine1  String value for pINDeliveryAddressLine1.
     * @param  pINDeliveryAddressLine2  String value for pINDeliveryAddressLine2.
     * @param  pINDeliveryAddressLine3  String value for pINDeliveryAddressLine3.
     * @param  pINDeliveryZipCode  String value for pINDeliveryZipCode.
     * @param  pINDeliveryCity  String value for pINDeliveryCity.
     * @param  pINDeliveryRegionId  Integer value for pINDeliveryRegionId.
     * @param  pINDeliveryRegion  String value for pINDeliveryRegion.
     * @param  pINDeliveryCountry  String value for pINDeliveryCountry.
     * @param  pINDeliveryCountryId  Integer value for pINDeliveryCountryId.
     * @param  pINPhoneNumber  String value for pINPhoneNumber.
     * @param  pINEmailAddress  String value for pINEmailAddress.
     * @param  saveForPINReminder  Boolean value for saveForPINReminder.
     * @param  saveForCardReissue  Boolean value for saveForCardReissue.
     * @param  expiryDate  String value for expiryDate.
     */
    public CardSettings(
            Integer cardDeliveryType,
            String selfSelectedEncryptedPIN,
            String selfSelectedPINKeyID,
            String selfSelectedPINSessionKey,
            Boolean validateFleetId,
            Integer cardGroupId,
            String deliveryContactTitle,
            String deliveryContactName,
            String deliveryCompanyName,
            String deliveryAddressLine1,
            String deliveryAddressLine2,
            String deliveryAddressLine3,
            String deliveryZipCode,
            String deliveryCity,
            Integer deliveryRegionId,
            String deliveryRegion,
            String deliveryCountry,
            Integer deliveryCountryId,
            String phoneNumber,
            String emailAddress,
            Integer pINDeliveryAddressType,
            Integer pINAdviceType,
            String pINDeliveryContactTitle,
            String pINDeliveryContactName,
            String pINDeliveryCompanyName,
            String pINDeliveryAddressLine1,
            String pINDeliveryAddressLine2,
            String pINDeliveryAddressLine3,
            String pINDeliveryZipCode,
            String pINDeliveryCity,
            Integer pINDeliveryRegionId,
            String pINDeliveryRegion,
            String pINDeliveryCountry,
            Integer pINDeliveryCountryId,
            String pINPhoneNumber,
            String pINEmailAddress,
            Boolean saveForPINReminder,
            Boolean saveForCardReissue,
            String expiryDate) {
        this.selfSelectedEncryptedPIN = OptionalNullable.of(selfSelectedEncryptedPIN);
        this.selfSelectedPINKeyID = OptionalNullable.of(selfSelectedPINKeyID);
        this.selfSelectedPINSessionKey = OptionalNullable.of(selfSelectedPINSessionKey);
        this.validateFleetId = validateFleetId;
        this.cardGroupId = OptionalNullable.of(cardGroupId);
        this.cardDeliveryType = cardDeliveryType;
        this.deliveryContactTitle = OptionalNullable.of(deliveryContactTitle);
        this.deliveryContactName = OptionalNullable.of(deliveryContactName);
        this.deliveryCompanyName = OptionalNullable.of(deliveryCompanyName);
        this.deliveryAddressLine1 = OptionalNullable.of(deliveryAddressLine1);
        this.deliveryAddressLine2 = OptionalNullable.of(deliveryAddressLine2);
        this.deliveryAddressLine3 = OptionalNullable.of(deliveryAddressLine3);
        this.deliveryZipCode = OptionalNullable.of(deliveryZipCode);
        this.deliveryCity = OptionalNullable.of(deliveryCity);
        this.deliveryRegionId = OptionalNullable.of(deliveryRegionId);
        this.deliveryRegion = OptionalNullable.of(deliveryRegion);
        this.deliveryCountry = OptionalNullable.of(deliveryCountry);
        this.deliveryCountryId = OptionalNullable.of(deliveryCountryId);
        this.phoneNumber = phoneNumber;
        this.emailAddress = OptionalNullable.of(emailAddress);
        this.pINDeliveryAddressType = OptionalNullable.of(pINDeliveryAddressType);
        this.pINAdviceType = OptionalNullable.of(pINAdviceType);
        this.pINDeliveryContactTitle = OptionalNullable.of(pINDeliveryContactTitle);
        this.pINDeliveryContactName = OptionalNullable.of(pINDeliveryContactName);
        this.pINDeliveryCompanyName = OptionalNullable.of(pINDeliveryCompanyName);
        this.pINDeliveryAddressLine1 = OptionalNullable.of(pINDeliveryAddressLine1);
        this.pINDeliveryAddressLine2 = OptionalNullable.of(pINDeliveryAddressLine2);
        this.pINDeliveryAddressLine3 = OptionalNullable.of(pINDeliveryAddressLine3);
        this.pINDeliveryZipCode = OptionalNullable.of(pINDeliveryZipCode);
        this.pINDeliveryCity = OptionalNullable.of(pINDeliveryCity);
        this.pINDeliveryRegionId = OptionalNullable.of(pINDeliveryRegionId);
        this.pINDeliveryRegion = OptionalNullable.of(pINDeliveryRegion);
        this.pINDeliveryCountry = OptionalNullable.of(pINDeliveryCountry);
        this.pINDeliveryCountryId = OptionalNullable.of(pINDeliveryCountryId);
        this.pINPhoneNumber = OptionalNullable.of(pINPhoneNumber);
        this.pINEmailAddress = OptionalNullable.of(pINEmailAddress);
        this.saveForPINReminder = saveForPINReminder;
        this.saveForCardReissue = saveForCardReissue;
        this.expiryDate = OptionalNullable.of(expiryDate);
    }

    /**
     * Initialization constructor.
     * @param  cardDeliveryType  Integer value for cardDeliveryType.
     * @param  selfSelectedEncryptedPIN  String value for selfSelectedEncryptedPIN.
     * @param  selfSelectedPINKeyID  String value for selfSelectedPINKeyID.
     * @param  selfSelectedPINSessionKey  String value for selfSelectedPINSessionKey.
     * @param  validateFleetId  Boolean value for validateFleetId.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  deliveryContactTitle  String value for deliveryContactTitle.
     * @param  deliveryContactName  String value for deliveryContactName.
     * @param  deliveryCompanyName  String value for deliveryCompanyName.
     * @param  deliveryAddressLine1  String value for deliveryAddressLine1.
     * @param  deliveryAddressLine2  String value for deliveryAddressLine2.
     * @param  deliveryAddressLine3  String value for deliveryAddressLine3.
     * @param  deliveryZipCode  String value for deliveryZipCode.
     * @param  deliveryCity  String value for deliveryCity.
     * @param  deliveryRegionId  Integer value for deliveryRegionId.
     * @param  deliveryRegion  String value for deliveryRegion.
     * @param  deliveryCountry  String value for deliveryCountry.
     * @param  deliveryCountryId  Integer value for deliveryCountryId.
     * @param  phoneNumber  String value for phoneNumber.
     * @param  emailAddress  String value for emailAddress.
     * @param  pINDeliveryAddressType  Integer value for pINDeliveryAddressType.
     * @param  pINAdviceType  Integer value for pINAdviceType.
     * @param  pINDeliveryContactTitle  String value for pINDeliveryContactTitle.
     * @param  pINDeliveryContactName  String value for pINDeliveryContactName.
     * @param  pINDeliveryCompanyName  String value for pINDeliveryCompanyName.
     * @param  pINDeliveryAddressLine1  String value for pINDeliveryAddressLine1.
     * @param  pINDeliveryAddressLine2  String value for pINDeliveryAddressLine2.
     * @param  pINDeliveryAddressLine3  String value for pINDeliveryAddressLine3.
     * @param  pINDeliveryZipCode  String value for pINDeliveryZipCode.
     * @param  pINDeliveryCity  String value for pINDeliveryCity.
     * @param  pINDeliveryRegionId  Integer value for pINDeliveryRegionId.
     * @param  pINDeliveryRegion  String value for pINDeliveryRegion.
     * @param  pINDeliveryCountry  String value for pINDeliveryCountry.
     * @param  pINDeliveryCountryId  Integer value for pINDeliveryCountryId.
     * @param  pINPhoneNumber  String value for pINPhoneNumber.
     * @param  pINEmailAddress  String value for pINEmailAddress.
     * @param  saveForPINReminder  Boolean value for saveForPINReminder.
     * @param  saveForCardReissue  Boolean value for saveForCardReissue.
     * @param  expiryDate  String value for expiryDate.
     */

    protected CardSettings(Integer cardDeliveryType,
            OptionalNullable<String> selfSelectedEncryptedPIN,
            OptionalNullable<String> selfSelectedPINKeyID,
            OptionalNullable<String> selfSelectedPINSessionKey, Boolean validateFleetId,
            OptionalNullable<Integer> cardGroupId, OptionalNullable<String> deliveryContactTitle,
            OptionalNullable<String> deliveryContactName,
            OptionalNullable<String> deliveryCompanyName,
            OptionalNullable<String> deliveryAddressLine1,
            OptionalNullable<String> deliveryAddressLine2,
            OptionalNullable<String> deliveryAddressLine3, OptionalNullable<String> deliveryZipCode,
            OptionalNullable<String> deliveryCity, OptionalNullable<Integer> deliveryRegionId,
            OptionalNullable<String> deliveryRegion, OptionalNullable<String> deliveryCountry,
            OptionalNullable<Integer> deliveryCountryId, String phoneNumber,
            OptionalNullable<String> emailAddress, OptionalNullable<Integer> pINDeliveryAddressType,
            OptionalNullable<Integer> pINAdviceType,
            OptionalNullable<String> pINDeliveryContactTitle,
            OptionalNullable<String> pINDeliveryContactName,
            OptionalNullable<String> pINDeliveryCompanyName,
            OptionalNullable<String> pINDeliveryAddressLine1,
            OptionalNullable<String> pINDeliveryAddressLine2,
            OptionalNullable<String> pINDeliveryAddressLine3,
            OptionalNullable<String> pINDeliveryZipCode, OptionalNullable<String> pINDeliveryCity,
            OptionalNullable<Integer> pINDeliveryRegionId,
            OptionalNullable<String> pINDeliveryRegion, OptionalNullable<String> pINDeliveryCountry,
            OptionalNullable<Integer> pINDeliveryCountryId, OptionalNullable<String> pINPhoneNumber,
            OptionalNullable<String> pINEmailAddress, Boolean saveForPINReminder,
            Boolean saveForCardReissue, OptionalNullable<String> expiryDate) {
        this.selfSelectedEncryptedPIN = selfSelectedEncryptedPIN;
        this.selfSelectedPINKeyID = selfSelectedPINKeyID;
        this.selfSelectedPINSessionKey = selfSelectedPINSessionKey;
        this.validateFleetId = validateFleetId;
        this.cardGroupId = cardGroupId;
        this.cardDeliveryType = cardDeliveryType;
        this.deliveryContactTitle = deliveryContactTitle;
        this.deliveryContactName = deliveryContactName;
        this.deliveryCompanyName = deliveryCompanyName;
        this.deliveryAddressLine1 = deliveryAddressLine1;
        this.deliveryAddressLine2 = deliveryAddressLine2;
        this.deliveryAddressLine3 = deliveryAddressLine3;
        this.deliveryZipCode = deliveryZipCode;
        this.deliveryCity = deliveryCity;
        this.deliveryRegionId = deliveryRegionId;
        this.deliveryRegion = deliveryRegion;
        this.deliveryCountry = deliveryCountry;
        this.deliveryCountryId = deliveryCountryId;
        this.phoneNumber = phoneNumber;
        this.emailAddress = emailAddress;
        this.pINDeliveryAddressType = pINDeliveryAddressType;
        this.pINAdviceType = pINAdviceType;
        this.pINDeliveryContactTitle = pINDeliveryContactTitle;
        this.pINDeliveryContactName = pINDeliveryContactName;
        this.pINDeliveryCompanyName = pINDeliveryCompanyName;
        this.pINDeliveryAddressLine1 = pINDeliveryAddressLine1;
        this.pINDeliveryAddressLine2 = pINDeliveryAddressLine2;
        this.pINDeliveryAddressLine3 = pINDeliveryAddressLine3;
        this.pINDeliveryZipCode = pINDeliveryZipCode;
        this.pINDeliveryCity = pINDeliveryCity;
        this.pINDeliveryRegionId = pINDeliveryRegionId;
        this.pINDeliveryRegion = pINDeliveryRegion;
        this.pINDeliveryCountry = pINDeliveryCountry;
        this.pINDeliveryCountryId = pINDeliveryCountryId;
        this.pINPhoneNumber = pINPhoneNumber;
        this.pINEmailAddress = pINEmailAddress;
        this.saveForPINReminder = saveForPINReminder;
        this.saveForCardReissue = saveForCardReissue;
        this.expiryDate = expiryDate;
    }

    /**
     * Internal Getter for SelfSelectedEncryptedPIN.
     * The encrypted value of self-selected PIN.&lt;br /&gt; Optional – When not provided, the PIN will be
     * auto generated(if the card token type supports PIN) and delivered based on the given PIN
     * delivery option.&lt;br /&gt; Max Length: 256
     * @return Returns the Internal String
     */
    @JsonGetter("SelfSelectedEncryptedPIN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSelfSelectedEncryptedPIN() {
        return this.selfSelectedEncryptedPIN;
    }

    /**
     * Getter for SelfSelectedEncryptedPIN.
     * The encrypted value of self-selected PIN.&lt;br /&gt; Optional – When not provided, the PIN will be
     * auto generated(if the card token type supports PIN) and delivered based on the given PIN
     * delivery option.&lt;br /&gt; Max Length: 256
     * @return Returns the String
     */
    public String getSelfSelectedEncryptedPIN() {
        return OptionalNullable.getFrom(selfSelectedEncryptedPIN);
    }

    /**
     * Setter for SelfSelectedEncryptedPIN.
     * The encrypted value of self-selected PIN.&lt;br /&gt; Optional – When not provided, the PIN will be
     * auto generated(if the card token type supports PIN) and delivered based on the given PIN
     * delivery option.&lt;br /&gt; Max Length: 256
     * @param selfSelectedEncryptedPIN Value for String
     */
    @JsonSetter("SelfSelectedEncryptedPIN")
    public void setSelfSelectedEncryptedPIN(String selfSelectedEncryptedPIN) {
        this.selfSelectedEncryptedPIN = OptionalNullable.of(selfSelectedEncryptedPIN);
    }

    /**
     * UnSetter for SelfSelectedEncryptedPIN.
     * The encrypted value of self-selected PIN.&lt;br /&gt; Optional – When not provided, the PIN will be
     * auto generated(if the card token type supports PIN) and delivered based on the given PIN
     * delivery option.&lt;br /&gt; Max Length: 256
     */
    public void unsetSelfSelectedEncryptedPIN() {
        selfSelectedEncryptedPIN = null;
    }

    /**
     * Internal Getter for SelfSelectedPINKeyID.
     * KeyId of the PIN encrypted value.&lt;br /&gt; Mandatory, if opted for self-selected PIN else
     * optional.&lt;br /&gt; Max Length: 30
     * @return Returns the Internal String
     */
    @JsonGetter("SelfSelectedPINKeyID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSelfSelectedPINKeyID() {
        return this.selfSelectedPINKeyID;
    }

    /**
     * Getter for SelfSelectedPINKeyID.
     * KeyId of the PIN encrypted value.&lt;br /&gt; Mandatory, if opted for self-selected PIN else
     * optional.&lt;br /&gt; Max Length: 30
     * @return Returns the String
     */
    public String getSelfSelectedPINKeyID() {
        return OptionalNullable.getFrom(selfSelectedPINKeyID);
    }

    /**
     * Setter for SelfSelectedPINKeyID.
     * KeyId of the PIN encrypted value.&lt;br /&gt; Mandatory, if opted for self-selected PIN else
     * optional.&lt;br /&gt; Max Length: 30
     * @param selfSelectedPINKeyID Value for String
     */
    @JsonSetter("SelfSelectedPINKeyID")
    public void setSelfSelectedPINKeyID(String selfSelectedPINKeyID) {
        this.selfSelectedPINKeyID = OptionalNullable.of(selfSelectedPINKeyID);
    }

    /**
     * UnSetter for SelfSelectedPINKeyID.
     * KeyId of the PIN encrypted value.&lt;br /&gt; Mandatory, if opted for self-selected PIN else
     * optional.&lt;br /&gt; Max Length: 30
     */
    public void unsetSelfSelectedPINKeyID() {
        selfSelectedPINKeyID = null;
    }

    /**
     * Internal Getter for SelfSelectedPINSessionKey.
     * Encoded message of the TCS form which is used for encrypting the PIN of this card.&lt;br /&gt; The
     * encode message forms are provided to clients by another API (“TCS”).&lt;br /&gt; Instructions to
     * encrypt the PIN is covered in the related API specifications document.&lt;br /&gt; Mandatory –If
     * opted for self-selected PIN else optional. Max Length: 1024
     * @return Returns the Internal String
     */
    @JsonGetter("SelfSelectedPINSessionKey")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSelfSelectedPINSessionKey() {
        return this.selfSelectedPINSessionKey;
    }

    /**
     * Getter for SelfSelectedPINSessionKey.
     * Encoded message of the TCS form which is used for encrypting the PIN of this card.&lt;br /&gt; The
     * encode message forms are provided to clients by another API (“TCS”).&lt;br /&gt; Instructions to
     * encrypt the PIN is covered in the related API specifications document.&lt;br /&gt; Mandatory –If
     * opted for self-selected PIN else optional. Max Length: 1024
     * @return Returns the String
     */
    public String getSelfSelectedPINSessionKey() {
        return OptionalNullable.getFrom(selfSelectedPINSessionKey);
    }

    /**
     * Setter for SelfSelectedPINSessionKey.
     * Encoded message of the TCS form which is used for encrypting the PIN of this card.&lt;br /&gt; The
     * encode message forms are provided to clients by another API (“TCS”).&lt;br /&gt; Instructions to
     * encrypt the PIN is covered in the related API specifications document.&lt;br /&gt; Mandatory –If
     * opted for self-selected PIN else optional. Max Length: 1024
     * @param selfSelectedPINSessionKey Value for String
     */
    @JsonSetter("SelfSelectedPINSessionKey")
    public void setSelfSelectedPINSessionKey(String selfSelectedPINSessionKey) {
        this.selfSelectedPINSessionKey = OptionalNullable.of(selfSelectedPINSessionKey);
    }

    /**
     * UnSetter for SelfSelectedPINSessionKey.
     * Encoded message of the TCS form which is used for encrypting the PIN of this card.&lt;br /&gt; The
     * encode message forms are provided to clients by another API (“TCS”).&lt;br /&gt; Instructions to
     * encrypt the PIN is covered in the related API specifications document.&lt;br /&gt; Mandatory –If
     * opted for self-selected PIN else optional. Max Length: 1024
     */
    public void unsetSelfSelectedPINSessionKey() {
        selfSelectedPINSessionKey = null;
    }

    /**
     * Getter for ValidateFleetId.
     * True/False.&lt;br /&gt; Optional &lt;br /&gt; Default: False&lt;br /&gt; For cards ordered with Validate Fleet
     * Id parameter set to true, CFGW will be notified to enable this validation for the card.&lt;br /&gt;
     * Note: When “FleetIdInputRequired” is not set on the card, validate fleet id will be
     * considered false regardless of the value passed on this parameter.
     * @return Returns the Boolean
     */
    @JsonGetter("ValidateFleetId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getValidateFleetId() {
        return validateFleetId;
    }

    /**
     * Setter for ValidateFleetId.
     * True/False.&lt;br /&gt; Optional &lt;br /&gt; Default: False&lt;br /&gt; For cards ordered with Validate Fleet
     * Id parameter set to true, CFGW will be notified to enable this validation for the card.&lt;br /&gt;
     * Note: When “FleetIdInputRequired” is not set on the card, validate fleet id will be
     * considered false regardless of the value passed on this parameter.
     * @param validateFleetId Value for Boolean
     */
    @JsonSetter("ValidateFleetId")
    public void setValidateFleetId(Boolean validateFleetId) {
        this.validateFleetId = validateFleetId;
    }

    /**
     * Internal Getter for CardGroupId.
     * Existing Card Group ID, under which the replacement card is to be created.&lt;br /&gt; Pass “-1” if
     * the replacement card should not be assigned to any card group.&lt;br /&gt; Optional &lt;br /&gt; If not
     * provided, the replacement card will be created under the same card group as the current card.
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardGroupId() {
        return this.cardGroupId;
    }

    /**
     * Getter for CardGroupId.
     * Existing Card Group ID, under which the replacement card is to be created.&lt;br /&gt; Pass “-1” if
     * the replacement card should not be assigned to any card group.&lt;br /&gt; Optional &lt;br /&gt; If not
     * provided, the replacement card will be created under the same card group as the current card.
     * @return Returns the Integer
     */
    public Integer getCardGroupId() {
        return OptionalNullable.getFrom(cardGroupId);
    }

    /**
     * Setter for CardGroupId.
     * Existing Card Group ID, under which the replacement card is to be created.&lt;br /&gt; Pass “-1” if
     * the replacement card should not be assigned to any card group.&lt;br /&gt; Optional &lt;br /&gt; If not
     * provided, the replacement card will be created under the same card group as the current card.
     * @param cardGroupId Value for Integer
     */
    @JsonSetter("CardGroupId")
    public void setCardGroupId(Integer cardGroupId) {
        this.cardGroupId = OptionalNullable.of(cardGroupId);
    }

    /**
     * UnSetter for CardGroupId.
     * Existing Card Group ID, under which the replacement card is to be created.&lt;br /&gt; Pass “-1” if
     * the replacement card should not be assigned to any card group.&lt;br /&gt; Optional &lt;br /&gt; If not
     * provided, the replacement card will be created under the same card group as the current card.
     */
    public void unsetCardGroupId() {
        cardGroupId = null;
    }

    /**
     * Getter for CardDeliveryType.
     * Card delivery type.&lt;br /&gt; Mandatory &lt;br /&gt; Allowed Value: &lt;br /&gt; 1. Customer Address(Default)
     * &lt;br /&gt; 2. New Delivery Address &lt;br /&gt; 3. Old Card Address
     * @return Returns the Integer
     */
    @JsonGetter("CardDeliveryType")
    public Integer getCardDeliveryType() {
        return cardDeliveryType;
    }

    /**
     * Setter for CardDeliveryType.
     * Card delivery type.&lt;br /&gt; Mandatory &lt;br /&gt; Allowed Value: &lt;br /&gt; 1. Customer Address(Default)
     * &lt;br /&gt; 2. New Delivery Address &lt;br /&gt; 3. Old Card Address
     * @param cardDeliveryType Value for Integer
     */
    @JsonSetter("CardDeliveryType")
    public void setCardDeliveryType(Integer cardDeliveryType) {
        this.cardDeliveryType = cardDeliveryType;
    }

    /**
     * Internal Getter for DeliveryContactTitle.
     * Title of the contact person. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 10
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryContactTitle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryContactTitle() {
        return this.deliveryContactTitle;
    }

    /**
     * Getter for DeliveryContactTitle.
     * Title of the contact person. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 10
     * @return Returns the String
     */
    public String getDeliveryContactTitle() {
        return OptionalNullable.getFrom(deliveryContactTitle);
    }

    /**
     * Setter for DeliveryContactTitle.
     * Title of the contact person. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 10
     * @param deliveryContactTitle Value for String
     */
    @JsonSetter("DeliveryContactTitle")
    public void setDeliveryContactTitle(String deliveryContactTitle) {
        this.deliveryContactTitle = OptionalNullable.of(deliveryContactTitle);
    }

    /**
     * UnSetter for DeliveryContactTitle.
     * Title of the contact person. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 10
     */
    public void unsetDeliveryContactTitle() {
        deliveryContactTitle = null;
    }

    /**
     * Internal Getter for DeliveryContactName.
     * Name of the contact person &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true.&lt;br /&gt; Max field length: 50
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryContactName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryContactName() {
        return this.deliveryContactName;
    }

    /**
     * Getter for DeliveryContactName.
     * Name of the contact person &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true.&lt;br /&gt; Max field length: 50
     * @return Returns the String
     */
    public String getDeliveryContactName() {
        return OptionalNullable.getFrom(deliveryContactName);
    }

    /**
     * Setter for DeliveryContactName.
     * Name of the contact person &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true.&lt;br /&gt; Max field length: 50
     * @param deliveryContactName Value for String
     */
    @JsonSetter("DeliveryContactName")
    public void setDeliveryContactName(String deliveryContactName) {
        this.deliveryContactName = OptionalNullable.of(deliveryContactName);
    }

    /**
     * UnSetter for DeliveryContactName.
     * Name of the contact person &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true.&lt;br /&gt; Max field length: 50
     */
    public void unsetDeliveryContactName() {
        deliveryContactName = null;
    }

    /**
     * Internal Getter for DeliveryCompanyName.
     * Company name &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true. Max field length: 50
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryCompanyName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryCompanyName() {
        return this.deliveryCompanyName;
    }

    /**
     * Getter for DeliveryCompanyName.
     * Company name &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true. Max field length: 50
     * @return Returns the String
     */
    public String getDeliveryCompanyName() {
        return OptionalNullable.getFrom(deliveryCompanyName);
    }

    /**
     * Setter for DeliveryCompanyName.
     * Company name &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true. Max field length: 50
     * @param deliveryCompanyName Value for String
     */
    @JsonSetter("DeliveryCompanyName")
    public void setDeliveryCompanyName(String deliveryCompanyName) {
        this.deliveryCompanyName = OptionalNullable.of(deliveryCompanyName);
    }

    /**
     * UnSetter for DeliveryCompanyName.
     * Company name &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true. Max field length: 50
     */
    public void unsetDeliveryCompanyName() {
        deliveryCompanyName = null;
    }

    /**
     * Internal Getter for DeliveryAddressLine1.
     * Address line 1 &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true.&lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryAddressLine1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryAddressLine1() {
        return this.deliveryAddressLine1;
    }

    /**
     * Getter for DeliveryAddressLine1.
     * Address line 1 &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true.&lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getDeliveryAddressLine1() {
        return OptionalNullable.getFrom(deliveryAddressLine1);
    }

    /**
     * Setter for DeliveryAddressLine1.
     * Address line 1 &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true.&lt;br /&gt; Max field length: 40
     * @param deliveryAddressLine1 Value for String
     */
    @JsonSetter("DeliveryAddressLine1")
    public void setDeliveryAddressLine1(String deliveryAddressLine1) {
        this.deliveryAddressLine1 = OptionalNullable.of(deliveryAddressLine1);
    }

    /**
     * UnSetter for DeliveryAddressLine1.
     * Address line 1 &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed
     * as true.&lt;br /&gt; Max field length: 40
     */
    public void unsetDeliveryAddressLine1() {
        deliveryAddressLine1 = null;
    }

    /**
     * Internal Getter for DeliveryAddressLine2.
     * Address line 2 &lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryAddressLine2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryAddressLine2() {
        return this.deliveryAddressLine2;
    }

    /**
     * Getter for DeliveryAddressLine2.
     * Address line 2 &lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getDeliveryAddressLine2() {
        return OptionalNullable.getFrom(deliveryAddressLine2);
    }

    /**
     * Setter for DeliveryAddressLine2.
     * Address line 2 &lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @param deliveryAddressLine2 Value for String
     */
    @JsonSetter("DeliveryAddressLine2")
    public void setDeliveryAddressLine2(String deliveryAddressLine2) {
        this.deliveryAddressLine2 = OptionalNullable.of(deliveryAddressLine2);
    }

    /**
     * UnSetter for DeliveryAddressLine2.
     * Address line 2 &lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     */
    public void unsetDeliveryAddressLine2() {
        deliveryAddressLine2 = null;
    }

    /**
     * Internal Getter for DeliveryAddressLine3.
     * Address line 3 &lt;br /&gt; Optional&lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryAddressLine3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryAddressLine3() {
        return this.deliveryAddressLine3;
    }

    /**
     * Getter for DeliveryAddressLine3.
     * Address line 3 &lt;br /&gt; Optional&lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getDeliveryAddressLine3() {
        return OptionalNullable.getFrom(deliveryAddressLine3);
    }

    /**
     * Setter for DeliveryAddressLine3.
     * Address line 3 &lt;br /&gt; Optional&lt;br /&gt; Max field length: 40
     * @param deliveryAddressLine3 Value for String
     */
    @JsonSetter("DeliveryAddressLine3")
    public void setDeliveryAddressLine3(String deliveryAddressLine3) {
        this.deliveryAddressLine3 = OptionalNullable.of(deliveryAddressLine3);
    }

    /**
     * UnSetter for DeliveryAddressLine3.
     * Address line 3 &lt;br /&gt; Optional&lt;br /&gt; Max field length: 40
     */
    public void unsetDeliveryAddressLine3() {
        deliveryAddressLine3 = null;
    }

    /**
     * Internal Getter for DeliveryZipCode.
     * ZIP code &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 10
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryZipCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryZipCode() {
        return this.deliveryZipCode;
    }

    /**
     * Getter for DeliveryZipCode.
     * ZIP code &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 10
     * @return Returns the String
     */
    public String getDeliveryZipCode() {
        return OptionalNullable.getFrom(deliveryZipCode);
    }

    /**
     * Setter for DeliveryZipCode.
     * ZIP code &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 10
     * @param deliveryZipCode Value for String
     */
    @JsonSetter("DeliveryZipCode")
    public void setDeliveryZipCode(String deliveryZipCode) {
        this.deliveryZipCode = OptionalNullable.of(deliveryZipCode);
    }

    /**
     * UnSetter for DeliveryZipCode.
     * ZIP code &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 10
     */
    public void unsetDeliveryZipCode() {
        deliveryZipCode = null;
    }

    /**
     * Internal Getter for DeliveryCity.
     * City &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryCity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryCity() {
        return this.deliveryCity;
    }

    /**
     * Getter for DeliveryCity.
     * City &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getDeliveryCity() {
        return OptionalNullable.getFrom(deliveryCity);
    }

    /**
     * Setter for DeliveryCity.
     * City &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 40
     * @param deliveryCity Value for String
     */
    @JsonSetter("DeliveryCity")
    public void setDeliveryCity(String deliveryCity) {
        this.deliveryCity = OptionalNullable.of(deliveryCity);
    }

    /**
     * UnSetter for DeliveryCity.
     * City &lt;br /&gt; Mandatory - If CardDeliveryType is 2 and OrderCardReplacement is passed as
     * true.&lt;br /&gt; Max field length: 40
     */
    public void unsetDeliveryCity() {
        deliveryCity = null;
    }

    /**
     * Internal Getter for DeliveryRegionId.
     * Region Id &lt;br /&gt; Optional
     * @return Returns the Internal Integer
     */
    @JsonGetter("DeliveryRegionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDeliveryRegionId() {
        return this.deliveryRegionId;
    }

    /**
     * Getter for DeliveryRegionId.
     * Region Id &lt;br /&gt; Optional
     * @return Returns the Integer
     */
    public Integer getDeliveryRegionId() {
        return OptionalNullable.getFrom(deliveryRegionId);
    }

    /**
     * Setter for DeliveryRegionId.
     * Region Id &lt;br /&gt; Optional
     * @param deliveryRegionId Value for Integer
     */
    @JsonSetter("DeliveryRegionId")
    public void setDeliveryRegionId(Integer deliveryRegionId) {
        this.deliveryRegionId = OptionalNullable.of(deliveryRegionId);
    }

    /**
     * UnSetter for DeliveryRegionId.
     * Region Id &lt;br /&gt; Optional
     */
    public void unsetDeliveryRegionId() {
        deliveryRegionId = null;
    }

    /**
     * Internal Getter for DeliveryRegion.
     * Region &lt;br /&gt; Optional&lt;br /&gt; When region is passed
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryRegion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryRegion() {
        return this.deliveryRegion;
    }

    /**
     * Getter for DeliveryRegion.
     * Region &lt;br /&gt; Optional&lt;br /&gt; When region is passed
     * @return Returns the String
     */
    public String getDeliveryRegion() {
        return OptionalNullable.getFrom(deliveryRegion);
    }

    /**
     * Setter for DeliveryRegion.
     * Region &lt;br /&gt; Optional&lt;br /&gt; When region is passed
     * @param deliveryRegion Value for String
     */
    @JsonSetter("DeliveryRegion")
    public void setDeliveryRegion(String deliveryRegion) {
        this.deliveryRegion = OptionalNullable.of(deliveryRegion);
    }

    /**
     * UnSetter for DeliveryRegion.
     * Region &lt;br /&gt; Optional&lt;br /&gt; When region is passed
     */
    public void unsetDeliveryRegion() {
        deliveryRegion = null;
    }

    /**
     * Internal Getter for DeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true
     * @return Returns the Internal String
     */
    @JsonGetter("DeliveryCountry")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDeliveryCountry() {
        return this.deliveryCountry;
    }

    /**
     * Getter for DeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true
     * @return Returns the String
     */
    public String getDeliveryCountry() {
        return OptionalNullable.getFrom(deliveryCountry);
    }

    /**
     * Setter for DeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true
     * @param deliveryCountry Value for String
     */
    @JsonSetter("DeliveryCountry")
    public void setDeliveryCountry(String deliveryCountry) {
        this.deliveryCountry = OptionalNullable.of(deliveryCountry);
    }

    /**
     * UnSetter for DeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mandatory - If CardDeliveryType is 2 and
     * OrderCardReplacement is passed as true
     */
    public void unsetDeliveryCountry() {
        deliveryCountry = null;
    }

    /**
     * Internal Getter for DeliveryCountryId.
     * The countryId of gicen country.&lt;br /&gt;
     * @return Returns the Internal Integer
     */
    @JsonGetter("DeliveryCountryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDeliveryCountryId() {
        return this.deliveryCountryId;
    }

    /**
     * Getter for DeliveryCountryId.
     * The countryId of gicen country.&lt;br /&gt;
     * @return Returns the Integer
     */
    public Integer getDeliveryCountryId() {
        return OptionalNullable.getFrom(deliveryCountryId);
    }

    /**
     * Setter for DeliveryCountryId.
     * The countryId of gicen country.&lt;br /&gt;
     * @param deliveryCountryId Value for Integer
     */
    @JsonSetter("DeliveryCountryId")
    public void setDeliveryCountryId(Integer deliveryCountryId) {
        this.deliveryCountryId = OptionalNullable.of(deliveryCountryId);
    }

    /**
     * UnSetter for DeliveryCountryId.
     * The countryId of gicen country.&lt;br /&gt;
     */
    public void unsetDeliveryCountryId() {
        deliveryCountryId = null;
    }

    /**
     * Getter for PhoneNumber.
     * Phone number for to send SMS. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 20
     * @return Returns the String
     */
    @JsonGetter("PhoneNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Setter for PhoneNumber.
     * Phone number for to send SMS. &lt;br /&gt; Optional&lt;br /&gt; Max field length: 20
     * @param phoneNumber Value for String
     */
    @JsonSetter("PhoneNumber")
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Internal Getter for EmailAddress.
     * Email address for to send email.&lt;br /&gt; Mandatory if PINAdviceType is email else optional.&lt;br
     * /&gt; Max field length: 90
     * @return Returns the Internal String
     */
    @JsonGetter("EmailAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmailAddress() {
        return this.emailAddress;
    }

    /**
     * Getter for EmailAddress.
     * Email address for to send email.&lt;br /&gt; Mandatory if PINAdviceType is email else optional.&lt;br
     * /&gt; Max field length: 90
     * @return Returns the String
     */
    public String getEmailAddress() {
        return OptionalNullable.getFrom(emailAddress);
    }

    /**
     * Setter for EmailAddress.
     * Email address for to send email.&lt;br /&gt; Mandatory if PINAdviceType is email else optional.&lt;br
     * /&gt; Max field length: 90
     * @param emailAddress Value for String
     */
    @JsonSetter("EmailAddress")
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = OptionalNullable.of(emailAddress);
    }

    /**
     * UnSetter for EmailAddress.
     * Email address for to send email.&lt;br /&gt; Mandatory if PINAdviceType is email else optional.&lt;br
     * /&gt; Max field length: 90
     */
    public void unsetEmailAddress() {
        emailAddress = null;
    }

    /**
     * Internal Getter for PINDeliveryAddressType.
     * PIN delivery address type selection.&lt;br /&gt; Optional&lt;br /&gt; Allowed Values:&lt;br /&gt; 1. Customer
     * Address(Default)&lt;br /&gt; 2. Card Address&lt;br /&gt; 3. New Delivery Address
     * @return Returns the Internal Integer
     */
    @JsonGetter("PINDeliveryAddressType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPINDeliveryAddressType() {
        return this.pINDeliveryAddressType;
    }

    /**
     * Getter for PINDeliveryAddressType.
     * PIN delivery address type selection.&lt;br /&gt; Optional&lt;br /&gt; Allowed Values:&lt;br /&gt; 1. Customer
     * Address(Default)&lt;br /&gt; 2. Card Address&lt;br /&gt; 3. New Delivery Address
     * @return Returns the Integer
     */
    public Integer getPINDeliveryAddressType() {
        return OptionalNullable.getFrom(pINDeliveryAddressType);
    }

    /**
     * Setter for PINDeliveryAddressType.
     * PIN delivery address type selection.&lt;br /&gt; Optional&lt;br /&gt; Allowed Values:&lt;br /&gt; 1. Customer
     * Address(Default)&lt;br /&gt; 2. Card Address&lt;br /&gt; 3. New Delivery Address
     * @param pINDeliveryAddressType Value for Integer
     */
    @JsonSetter("PINDeliveryAddressType")
    public void setPINDeliveryAddressType(Integer pINDeliveryAddressType) {
        this.pINDeliveryAddressType = OptionalNullable.of(pINDeliveryAddressType);
    }

    /**
     * UnSetter for PINDeliveryAddressType.
     * PIN delivery address type selection.&lt;br /&gt; Optional&lt;br /&gt; Allowed Values:&lt;br /&gt; 1. Customer
     * Address(Default)&lt;br /&gt; 2. Card Address&lt;br /&gt; 3. New Delivery Address
     */
    public void unsetPINDeliveryAddressType() {
        pINDeliveryAddressType = null;
    }

    /**
     * Internal Getter for PINAdviceType.
     * PIN delivery method.&lt;br /&gt; Mandatory when OrderReplacement Is true.&lt;br /&gt; Allowed Values:&lt;br
     * /&gt; 1. Paper&lt;br /&gt; 2. Email&lt;br /&gt; 3. SMS&lt;br /&gt; 4. None
     * @return Returns the Internal Integer
     */
    @JsonGetter("PINAdviceType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPINAdviceType() {
        return this.pINAdviceType;
    }

    /**
     * Getter for PINAdviceType.
     * PIN delivery method.&lt;br /&gt; Mandatory when OrderReplacement Is true.&lt;br /&gt; Allowed Values:&lt;br
     * /&gt; 1. Paper&lt;br /&gt; 2. Email&lt;br /&gt; 3. SMS&lt;br /&gt; 4. None
     * @return Returns the Integer
     */
    public Integer getPINAdviceType() {
        return OptionalNullable.getFrom(pINAdviceType);
    }

    /**
     * Setter for PINAdviceType.
     * PIN delivery method.&lt;br /&gt; Mandatory when OrderReplacement Is true.&lt;br /&gt; Allowed Values:&lt;br
     * /&gt; 1. Paper&lt;br /&gt; 2. Email&lt;br /&gt; 3. SMS&lt;br /&gt; 4. None
     * @param pINAdviceType Value for Integer
     */
    @JsonSetter("PINAdviceType")
    public void setPINAdviceType(Integer pINAdviceType) {
        this.pINAdviceType = OptionalNullable.of(pINAdviceType);
    }

    /**
     * UnSetter for PINAdviceType.
     * PIN delivery method.&lt;br /&gt; Mandatory when OrderReplacement Is true.&lt;br /&gt; Allowed Values:&lt;br
     * /&gt; 1. Paper&lt;br /&gt; 2. Email&lt;br /&gt; 3. SMS&lt;br /&gt; 4. None
     */
    public void unsetPINAdviceType() {
        pINAdviceType = null;
    }

    /**
     * Internal Getter for PINDeliveryContactTitle.
     * Title of the contact person.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 10
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryContactTitle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryContactTitle() {
        return this.pINDeliveryContactTitle;
    }

    /**
     * Getter for PINDeliveryContactTitle.
     * Title of the contact person.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 10
     * @return Returns the String
     */
    public String getPINDeliveryContactTitle() {
        return OptionalNullable.getFrom(pINDeliveryContactTitle);
    }

    /**
     * Setter for PINDeliveryContactTitle.
     * Title of the contact person.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 10
     * @param pINDeliveryContactTitle Value for String
     */
    @JsonSetter("PINDeliveryContactTitle")
    public void setPINDeliveryContactTitle(String pINDeliveryContactTitle) {
        this.pINDeliveryContactTitle = OptionalNullable.of(pINDeliveryContactTitle);
    }

    /**
     * UnSetter for PINDeliveryContactTitle.
     * Title of the contact person.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 10
     */
    public void unsetPINDeliveryContactTitle() {
        pINDeliveryContactTitle = null;
    }

    /**
     * Internal Getter for PINDeliveryContactName.
     * Name of the contact person.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt;
     * Max field length: 50
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryContactName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryContactName() {
        return this.pINDeliveryContactName;
    }

    /**
     * Getter for PINDeliveryContactName.
     * Name of the contact person.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt;
     * Max field length: 50
     * @return Returns the String
     */
    public String getPINDeliveryContactName() {
        return OptionalNullable.getFrom(pINDeliveryContactName);
    }

    /**
     * Setter for PINDeliveryContactName.
     * Name of the contact person.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt;
     * Max field length: 50
     * @param pINDeliveryContactName Value for String
     */
    @JsonSetter("PINDeliveryContactName")
    public void setPINDeliveryContactName(String pINDeliveryContactName) {
        this.pINDeliveryContactName = OptionalNullable.of(pINDeliveryContactName);
    }

    /**
     * UnSetter for PINDeliveryContactName.
     * Name of the contact person.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt;
     * Max field length: 50
     */
    public void unsetPINDeliveryContactName() {
        pINDeliveryContactName = null;
    }

    /**
     * Internal Getter for PINDeliveryCompanyName.
     * Company name.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 50
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryCompanyName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryCompanyName() {
        return this.pINDeliveryCompanyName;
    }

    /**
     * Getter for PINDeliveryCompanyName.
     * Company name.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 50
     * @return Returns the String
     */
    public String getPINDeliveryCompanyName() {
        return OptionalNullable.getFrom(pINDeliveryCompanyName);
    }

    /**
     * Setter for PINDeliveryCompanyName.
     * Company name.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 50
     * @param pINDeliveryCompanyName Value for String
     */
    @JsonSetter("PINDeliveryCompanyName")
    public void setPINDeliveryCompanyName(String pINDeliveryCompanyName) {
        this.pINDeliveryCompanyName = OptionalNullable.of(pINDeliveryCompanyName);
    }

    /**
     * UnSetter for PINDeliveryCompanyName.
     * Company name.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 50
     */
    public void unsetPINDeliveryCompanyName() {
        pINDeliveryCompanyName = null;
    }

    /**
     * Internal Getter for PINDeliveryAddressLine1.
     * Address line 1.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryAddressLine1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryAddressLine1() {
        return this.pINDeliveryAddressLine1;
    }

    /**
     * Getter for PINDeliveryAddressLine1.
     * Address line 1.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 40
     * @return Returns the String
     */
    public String getPINDeliveryAddressLine1() {
        return OptionalNullable.getFrom(pINDeliveryAddressLine1);
    }

    /**
     * Setter for PINDeliveryAddressLine1.
     * Address line 1.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 40
     * @param pINDeliveryAddressLine1 Value for String
     */
    @JsonSetter("PINDeliveryAddressLine1")
    public void setPINDeliveryAddressLine1(String pINDeliveryAddressLine1) {
        this.pINDeliveryAddressLine1 = OptionalNullable.of(pINDeliveryAddressLine1);
    }

    /**
     * UnSetter for PINDeliveryAddressLine1.
     * Address line 1.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional.&lt;br /&gt; Max field
     * length: 40
     */
    public void unsetPINDeliveryAddressLine1() {
        pINDeliveryAddressLine1 = null;
    }

    /**
     * Internal Getter for PINDeliveryAddressLine2.
     * Address line 2.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryAddressLine2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryAddressLine2() {
        return this.pINDeliveryAddressLine2;
    }

    /**
     * Getter for PINDeliveryAddressLine2.
     * Address line 2.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getPINDeliveryAddressLine2() {
        return OptionalNullable.getFrom(pINDeliveryAddressLine2);
    }

    /**
     * Setter for PINDeliveryAddressLine2.
     * Address line 2.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @param pINDeliveryAddressLine2 Value for String
     */
    @JsonSetter("PINDeliveryAddressLine2")
    public void setPINDeliveryAddressLine2(String pINDeliveryAddressLine2) {
        this.pINDeliveryAddressLine2 = OptionalNullable.of(pINDeliveryAddressLine2);
    }

    /**
     * UnSetter for PINDeliveryAddressLine2.
     * Address line 2.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     */
    public void unsetPINDeliveryAddressLine2() {
        pINDeliveryAddressLine2 = null;
    }

    /**
     * Internal Getter for PINDeliveryAddressLine3.
     * Address line 3.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryAddressLine3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryAddressLine3() {
        return this.pINDeliveryAddressLine3;
    }

    /**
     * Getter for PINDeliveryAddressLine3.
     * Address line 3.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getPINDeliveryAddressLine3() {
        return OptionalNullable.getFrom(pINDeliveryAddressLine3);
    }

    /**
     * Setter for PINDeliveryAddressLine3.
     * Address line 3.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     * @param pINDeliveryAddressLine3 Value for String
     */
    @JsonSetter("PINDeliveryAddressLine3")
    public void setPINDeliveryAddressLine3(String pINDeliveryAddressLine3) {
        this.pINDeliveryAddressLine3 = OptionalNullable.of(pINDeliveryAddressLine3);
    }

    /**
     * UnSetter for PINDeliveryAddressLine3.
     * Address line 3.&lt;br /&gt; Optional &lt;br /&gt; Max field length: 40
     */
    public void unsetPINDeliveryAddressLine3() {
        pINDeliveryAddressLine3 = null;
    }

    /**
     * Internal Getter for PINDeliveryZipCode.
     * ZIP code.&lt;br /&gt; Mandatory - if PINAdviceType is paper else optional. &lt;br /&gt; Max field length:
     * 10
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryZipCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryZipCode() {
        return this.pINDeliveryZipCode;
    }

    /**
     * Getter for PINDeliveryZipCode.
     * ZIP code.&lt;br /&gt; Mandatory - if PINAdviceType is paper else optional. &lt;br /&gt; Max field length:
     * 10
     * @return Returns the String
     */
    public String getPINDeliveryZipCode() {
        return OptionalNullable.getFrom(pINDeliveryZipCode);
    }

    /**
     * Setter for PINDeliveryZipCode.
     * ZIP code.&lt;br /&gt; Mandatory - if PINAdviceType is paper else optional. &lt;br /&gt; Max field length:
     * 10
     * @param pINDeliveryZipCode Value for String
     */
    @JsonSetter("PINDeliveryZipCode")
    public void setPINDeliveryZipCode(String pINDeliveryZipCode) {
        this.pINDeliveryZipCode = OptionalNullable.of(pINDeliveryZipCode);
    }

    /**
     * UnSetter for PINDeliveryZipCode.
     * ZIP code.&lt;br /&gt; Mandatory - if PINAdviceType is paper else optional. &lt;br /&gt; Max field length:
     * 10
     */
    public void unsetPINDeliveryZipCode() {
        pINDeliveryZipCode = null;
    }

    /**
     * Internal Getter for PINDeliveryCity.
     * City.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional. &lt;br /&gt; Max field length: 40
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryCity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryCity() {
        return this.pINDeliveryCity;
    }

    /**
     * Getter for PINDeliveryCity.
     * City.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional. &lt;br /&gt; Max field length: 40
     * @return Returns the String
     */
    public String getPINDeliveryCity() {
        return OptionalNullable.getFrom(pINDeliveryCity);
    }

    /**
     * Setter for PINDeliveryCity.
     * City.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional. &lt;br /&gt; Max field length: 40
     * @param pINDeliveryCity Value for String
     */
    @JsonSetter("PINDeliveryCity")
    public void setPINDeliveryCity(String pINDeliveryCity) {
        this.pINDeliveryCity = OptionalNullable.of(pINDeliveryCity);
    }

    /**
     * UnSetter for PINDeliveryCity.
     * City.&lt;br /&gt; Mandatory - If PINAdviceType is paper else optional. &lt;br /&gt; Max field length: 40
     */
    public void unsetPINDeliveryCity() {
        pINDeliveryCity = null;
    }

    /**
     * Internal Getter for PINDeliveryRegionId.
     * Region Id.&lt;br /&gt; Optional
     * @return Returns the Internal Integer
     */
    @JsonGetter("PINDeliveryRegionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPINDeliveryRegionId() {
        return this.pINDeliveryRegionId;
    }

    /**
     * Getter for PINDeliveryRegionId.
     * Region Id.&lt;br /&gt; Optional
     * @return Returns the Integer
     */
    public Integer getPINDeliveryRegionId() {
        return OptionalNullable.getFrom(pINDeliveryRegionId);
    }

    /**
     * Setter for PINDeliveryRegionId.
     * Region Id.&lt;br /&gt; Optional
     * @param pINDeliveryRegionId Value for Integer
     */
    @JsonSetter("PINDeliveryRegionId")
    public void setPINDeliveryRegionId(Integer pINDeliveryRegionId) {
        this.pINDeliveryRegionId = OptionalNullable.of(pINDeliveryRegionId);
    }

    /**
     * UnSetter for PINDeliveryRegionId.
     * Region Id.&lt;br /&gt; Optional
     */
    public void unsetPINDeliveryRegionId() {
        pINDeliveryRegionId = null;
    }

    /**
     * Internal Getter for PINDeliveryRegion.
     * Region.&lt;br /&gt; When region is passed
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryRegion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryRegion() {
        return this.pINDeliveryRegion;
    }

    /**
     * Getter for PINDeliveryRegion.
     * Region.&lt;br /&gt; When region is passed
     * @return Returns the String
     */
    public String getPINDeliveryRegion() {
        return OptionalNullable.getFrom(pINDeliveryRegion);
    }

    /**
     * Setter for PINDeliveryRegion.
     * Region.&lt;br /&gt; When region is passed
     * @param pINDeliveryRegion Value for String
     */
    @JsonSetter("PINDeliveryRegion")
    public void setPINDeliveryRegion(String pINDeliveryRegion) {
        this.pINDeliveryRegion = OptionalNullable.of(pINDeliveryRegion);
    }

    /**
     * UnSetter for PINDeliveryRegion.
     * Region.&lt;br /&gt; When region is passed
     */
    public void unsetPINDeliveryRegion() {
        pINDeliveryRegion = null;
    }

    /**
     * Internal Getter for PINDeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mappings for ISO code &lt;br /&gt; Mandatory if PINAdviceType is
     * paper else optional.
     * @return Returns the Internal String
     */
    @JsonGetter("PINDeliveryCountry")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINDeliveryCountry() {
        return this.pINDeliveryCountry;
    }

    /**
     * Getter for PINDeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mappings for ISO code &lt;br /&gt; Mandatory if PINAdviceType is
     * paper else optional.
     * @return Returns the String
     */
    public String getPINDeliveryCountry() {
        return OptionalNullable.getFrom(pINDeliveryCountry);
    }

    /**
     * Setter for PINDeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mappings for ISO code &lt;br /&gt; Mandatory if PINAdviceType is
     * paper else optional.
     * @param pINDeliveryCountry Value for String
     */
    @JsonSetter("PINDeliveryCountry")
    public void setPINDeliveryCountry(String pINDeliveryCountry) {
        this.pINDeliveryCountry = OptionalNullable.of(pINDeliveryCountry);
    }

    /**
     * UnSetter for PINDeliveryCountry.
     * The ISO code of the country.&lt;br /&gt; Mappings for ISO code &lt;br /&gt; Mandatory if PINAdviceType is
     * paper else optional.
     */
    public void unsetPINDeliveryCountry() {
        pINDeliveryCountry = null;
    }

    /**
     * Internal Getter for PINDeliveryCountryId.
     * The countryId of the country.&lt;br /&gt; Mappings for ISO code&lt;br /&gt; This is not an input
     * parameter.
     * @return Returns the Internal Integer
     */
    @JsonGetter("PINDeliveryCountryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPINDeliveryCountryId() {
        return this.pINDeliveryCountryId;
    }

    /**
     * Getter for PINDeliveryCountryId.
     * The countryId of the country.&lt;br /&gt; Mappings for ISO code&lt;br /&gt; This is not an input
     * parameter.
     * @return Returns the Integer
     */
    public Integer getPINDeliveryCountryId() {
        return OptionalNullable.getFrom(pINDeliveryCountryId);
    }

    /**
     * Setter for PINDeliveryCountryId.
     * The countryId of the country.&lt;br /&gt; Mappings for ISO code&lt;br /&gt; This is not an input
     * parameter.
     * @param pINDeliveryCountryId Value for Integer
     */
    @JsonSetter("PINDeliveryCountryId")
    public void setPINDeliveryCountryId(Integer pINDeliveryCountryId) {
        this.pINDeliveryCountryId = OptionalNullable.of(pINDeliveryCountryId);
    }

    /**
     * UnSetter for PINDeliveryCountryId.
     * The countryId of the country.&lt;br /&gt; Mappings for ISO code&lt;br /&gt; This is not an input
     * parameter.
     */
    public void unsetPINDeliveryCountryId() {
        pINDeliveryCountryId = null;
    }

    /**
     * Internal Getter for PINPhoneNumber.
     * Phone number for to send SMS of the PIN in case PINAdviceType is SMS.&lt;br /&gt; Mandatory if
     * PINAdviceType is SMS else optional.&lt;br /&gt; Max field length: 20
     * @return Returns the Internal String
     */
    @JsonGetter("PINPhoneNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINPhoneNumber() {
        return this.pINPhoneNumber;
    }

    /**
     * Getter for PINPhoneNumber.
     * Phone number for to send SMS of the PIN in case PINAdviceType is SMS.&lt;br /&gt; Mandatory if
     * PINAdviceType is SMS else optional.&lt;br /&gt; Max field length: 20
     * @return Returns the String
     */
    public String getPINPhoneNumber() {
        return OptionalNullable.getFrom(pINPhoneNumber);
    }

    /**
     * Setter for PINPhoneNumber.
     * Phone number for to send SMS of the PIN in case PINAdviceType is SMS.&lt;br /&gt; Mandatory if
     * PINAdviceType is SMS else optional.&lt;br /&gt; Max field length: 20
     * @param pINPhoneNumber Value for String
     */
    @JsonSetter("PINPhoneNumber")
    public void setPINPhoneNumber(String pINPhoneNumber) {
        this.pINPhoneNumber = OptionalNullable.of(pINPhoneNumber);
    }

    /**
     * UnSetter for PINPhoneNumber.
     * Phone number for to send SMS of the PIN in case PINAdviceType is SMS.&lt;br /&gt; Mandatory if
     * PINAdviceType is SMS else optional.&lt;br /&gt; Max field length: 20
     */
    public void unsetPINPhoneNumber() {
        pINPhoneNumber = null;
    }

    /**
     * Internal Getter for PINEmailAddress.
     * Email address for to send email of the PIN in case PINAdviceType is Email.&lt;br /&gt; Mandatory if
     * PINAdviceType is email else optional.&lt;br /&gt; Max field length: 90
     * @return Returns the Internal String
     */
    @JsonGetter("PINEmailAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPINEmailAddress() {
        return this.pINEmailAddress;
    }

    /**
     * Getter for PINEmailAddress.
     * Email address for to send email of the PIN in case PINAdviceType is Email.&lt;br /&gt; Mandatory if
     * PINAdviceType is email else optional.&lt;br /&gt; Max field length: 90
     * @return Returns the String
     */
    public String getPINEmailAddress() {
        return OptionalNullable.getFrom(pINEmailAddress);
    }

    /**
     * Setter for PINEmailAddress.
     * Email address for to send email of the PIN in case PINAdviceType is Email.&lt;br /&gt; Mandatory if
     * PINAdviceType is email else optional.&lt;br /&gt; Max field length: 90
     * @param pINEmailAddress Value for String
     */
    @JsonSetter("PINEmailAddress")
    public void setPINEmailAddress(String pINEmailAddress) {
        this.pINEmailAddress = OptionalNullable.of(pINEmailAddress);
    }

    /**
     * UnSetter for PINEmailAddress.
     * Email address for to send email of the PIN in case PINAdviceType is Email.&lt;br /&gt; Mandatory if
     * PINAdviceType is email else optional.&lt;br /&gt; Max field length: 90
     */
    public void unsetPINEmailAddress() {
        pINEmailAddress = null;
    }

    /**
     * Getter for SaveForPINReminder.
     * The given address will be used for sending PIN reminders in future when requested.&lt;br /&gt; PIN
     * Advice type should be Paper Optional
     * @return Returns the Boolean
     */
    @JsonGetter("SaveForPINReminder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSaveForPINReminder() {
        return saveForPINReminder;
    }

    /**
     * Setter for SaveForPINReminder.
     * The given address will be used for sending PIN reminders in future when requested.&lt;br /&gt; PIN
     * Advice type should be Paper Optional
     * @param saveForPINReminder Value for Boolean
     */
    @JsonSetter("SaveForPINReminder")
    public void setSaveForPINReminder(Boolean saveForPINReminder) {
        this.saveForPINReminder = saveForPINReminder;
    }

    /**
     * Getter for SaveForCardReissue.
     * If this is specified, the contact address will be saved in cards platform for card reissue
     * processing.&lt;br /&gt; Optional
     * @return Returns the Boolean
     */
    @JsonGetter("SaveForCardReissue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSaveForCardReissue() {
        return saveForCardReissue;
    }

    /**
     * Setter for SaveForCardReissue.
     * If this is specified, the contact address will be saved in cards platform for card reissue
     * processing.&lt;br /&gt; Optional
     * @param saveForCardReissue Value for Boolean
     */
    @JsonSetter("SaveForCardReissue")
    public void setSaveForCardReissue(Boolean saveForCardReissue) {
        this.saveForCardReissue = saveForCardReissue;
    }

    /**
     * Internal Getter for ExpiryDate.
     * Expiry Date for newly created card to be update in cards plot form.&lt;br /&gt; Optional &lt;br /&gt;
     * Format: MMyy &lt;br /&gt; Eg:1221 &lt;br /&gt; If not apply the default Expiry Date.&lt;br /&gt; Note:&lt;br /&gt;
     * There is a limit to the ExpiryDate which the user can choose for the Card. If the user
     * chooses a later ExpiryDate than the allowed value for the CardType of the OU, the background
     * service logs the respective error code and description
     * @return Returns the Internal String
     */
    @JsonGetter("ExpiryDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetExpiryDate() {
        return this.expiryDate;
    }

    /**
     * Getter for ExpiryDate.
     * Expiry Date for newly created card to be update in cards plot form.&lt;br /&gt; Optional &lt;br /&gt;
     * Format: MMyy &lt;br /&gt; Eg:1221 &lt;br /&gt; If not apply the default Expiry Date.&lt;br /&gt; Note:&lt;br /&gt;
     * There is a limit to the ExpiryDate which the user can choose for the Card. If the user
     * chooses a later ExpiryDate than the allowed value for the CardType of the OU, the background
     * service logs the respective error code and description
     * @return Returns the String
     */
    public String getExpiryDate() {
        return OptionalNullable.getFrom(expiryDate);
    }

    /**
     * Setter for ExpiryDate.
     * Expiry Date for newly created card to be update in cards plot form.&lt;br /&gt; Optional &lt;br /&gt;
     * Format: MMyy &lt;br /&gt; Eg:1221 &lt;br /&gt; If not apply the default Expiry Date.&lt;br /&gt; Note:&lt;br /&gt;
     * There is a limit to the ExpiryDate which the user can choose for the Card. If the user
     * chooses a later ExpiryDate than the allowed value for the CardType of the OU, the background
     * service logs the respective error code and description
     * @param expiryDate Value for String
     */
    @JsonSetter("ExpiryDate")
    public void setExpiryDate(String expiryDate) {
        this.expiryDate = OptionalNullable.of(expiryDate);
    }

    /**
     * UnSetter for ExpiryDate.
     * Expiry Date for newly created card to be update in cards plot form.&lt;br /&gt; Optional &lt;br /&gt;
     * Format: MMyy &lt;br /&gt; Eg:1221 &lt;br /&gt; If not apply the default Expiry Date.&lt;br /&gt; Note:&lt;br /&gt;
     * There is a limit to the ExpiryDate which the user can choose for the Card. If the user
     * chooses a later ExpiryDate than the allowed value for the CardType of the OU, the background
     * service logs the respective error code and description
     */
    public void unsetExpiryDate() {
        expiryDate = null;
    }

    /**
     * Converts this CardSettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardSettings [" + "cardDeliveryType=" + cardDeliveryType
                + ", selfSelectedEncryptedPIN=" + selfSelectedEncryptedPIN
                + ", selfSelectedPINKeyID=" + selfSelectedPINKeyID + ", selfSelectedPINSessionKey="
                + selfSelectedPINSessionKey + ", validateFleetId=" + validateFleetId
                + ", cardGroupId=" + cardGroupId + ", deliveryContactTitle=" + deliveryContactTitle
                + ", deliveryContactName=" + deliveryContactName + ", deliveryCompanyName="
                + deliveryCompanyName + ", deliveryAddressLine1=" + deliveryAddressLine1
                + ", deliveryAddressLine2=" + deliveryAddressLine2 + ", deliveryAddressLine3="
                + deliveryAddressLine3 + ", deliveryZipCode=" + deliveryZipCode + ", deliveryCity="
                + deliveryCity + ", deliveryRegionId=" + deliveryRegionId + ", deliveryRegion="
                + deliveryRegion + ", deliveryCountry=" + deliveryCountry + ", deliveryCountryId="
                + deliveryCountryId + ", phoneNumber=" + phoneNumber + ", emailAddress="
                + emailAddress + ", pINDeliveryAddressType=" + pINDeliveryAddressType
                + ", pINAdviceType=" + pINAdviceType + ", pINDeliveryContactTitle="
                + pINDeliveryContactTitle + ", pINDeliveryContactName=" + pINDeliveryContactName
                + ", pINDeliveryCompanyName=" + pINDeliveryCompanyName
                + ", pINDeliveryAddressLine1=" + pINDeliveryAddressLine1
                + ", pINDeliveryAddressLine2=" + pINDeliveryAddressLine2
                + ", pINDeliveryAddressLine3=" + pINDeliveryAddressLine3 + ", pINDeliveryZipCode="
                + pINDeliveryZipCode + ", pINDeliveryCity=" + pINDeliveryCity
                + ", pINDeliveryRegionId=" + pINDeliveryRegionId + ", pINDeliveryRegion="
                + pINDeliveryRegion + ", pINDeliveryCountry=" + pINDeliveryCountry
                + ", pINDeliveryCountryId=" + pINDeliveryCountryId + ", pINPhoneNumber="
                + pINPhoneNumber + ", pINEmailAddress=" + pINEmailAddress + ", saveForPINReminder="
                + saveForPINReminder + ", saveForCardReissue=" + saveForCardReissue
                + ", expiryDate=" + expiryDate + "]";
    }

    /**
     * Builds a new {@link CardSettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardSettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(cardDeliveryType)
                .validateFleetId(getValidateFleetId())
                .phoneNumber(getPhoneNumber())
                .saveForPINReminder(getSaveForPINReminder())
                .saveForCardReissue(getSaveForCardReissue());
        builder.selfSelectedEncryptedPIN = internalGetSelfSelectedEncryptedPIN();
        builder.selfSelectedPINKeyID = internalGetSelfSelectedPINKeyID();
        builder.selfSelectedPINSessionKey = internalGetSelfSelectedPINSessionKey();
        builder.cardGroupId = internalGetCardGroupId();
        builder.deliveryContactTitle = internalGetDeliveryContactTitle();
        builder.deliveryContactName = internalGetDeliveryContactName();
        builder.deliveryCompanyName = internalGetDeliveryCompanyName();
        builder.deliveryAddressLine1 = internalGetDeliveryAddressLine1();
        builder.deliveryAddressLine2 = internalGetDeliveryAddressLine2();
        builder.deliveryAddressLine3 = internalGetDeliveryAddressLine3();
        builder.deliveryZipCode = internalGetDeliveryZipCode();
        builder.deliveryCity = internalGetDeliveryCity();
        builder.deliveryRegionId = internalGetDeliveryRegionId();
        builder.deliveryRegion = internalGetDeliveryRegion();
        builder.deliveryCountry = internalGetDeliveryCountry();
        builder.deliveryCountryId = internalGetDeliveryCountryId();
        builder.emailAddress = internalGetEmailAddress();
        builder.pINDeliveryAddressType = internalGetPINDeliveryAddressType();
        builder.pINAdviceType = internalGetPINAdviceType();
        builder.pINDeliveryContactTitle = internalGetPINDeliveryContactTitle();
        builder.pINDeliveryContactName = internalGetPINDeliveryContactName();
        builder.pINDeliveryCompanyName = internalGetPINDeliveryCompanyName();
        builder.pINDeliveryAddressLine1 = internalGetPINDeliveryAddressLine1();
        builder.pINDeliveryAddressLine2 = internalGetPINDeliveryAddressLine2();
        builder.pINDeliveryAddressLine3 = internalGetPINDeliveryAddressLine3();
        builder.pINDeliveryZipCode = internalGetPINDeliveryZipCode();
        builder.pINDeliveryCity = internalGetPINDeliveryCity();
        builder.pINDeliveryRegionId = internalGetPINDeliveryRegionId();
        builder.pINDeliveryRegion = internalGetPINDeliveryRegion();
        builder.pINDeliveryCountry = internalGetPINDeliveryCountry();
        builder.pINDeliveryCountryId = internalGetPINDeliveryCountryId();
        builder.pINPhoneNumber = internalGetPINPhoneNumber();
        builder.pINEmailAddress = internalGetPINEmailAddress();
        builder.expiryDate = internalGetExpiryDate();
        return builder;
    }

    /**
     * Class to build instances of {@link CardSettings}.
     */
    public static class Builder {
        private Integer cardDeliveryType;
        private OptionalNullable<String> selfSelectedEncryptedPIN;
        private OptionalNullable<String> selfSelectedPINKeyID;
        private OptionalNullable<String> selfSelectedPINSessionKey;
        private Boolean validateFleetId;
        private OptionalNullable<Integer> cardGroupId;
        private OptionalNullable<String> deliveryContactTitle;
        private OptionalNullable<String> deliveryContactName;
        private OptionalNullable<String> deliveryCompanyName;
        private OptionalNullable<String> deliveryAddressLine1;
        private OptionalNullable<String> deliveryAddressLine2;
        private OptionalNullable<String> deliveryAddressLine3;
        private OptionalNullable<String> deliveryZipCode;
        private OptionalNullable<String> deliveryCity;
        private OptionalNullable<Integer> deliveryRegionId;
        private OptionalNullable<String> deliveryRegion;
        private OptionalNullable<String> deliveryCountry;
        private OptionalNullable<Integer> deliveryCountryId;
        private String phoneNumber;
        private OptionalNullable<String> emailAddress;
        private OptionalNullable<Integer> pINDeliveryAddressType;
        private OptionalNullable<Integer> pINAdviceType;
        private OptionalNullable<String> pINDeliveryContactTitle;
        private OptionalNullable<String> pINDeliveryContactName;
        private OptionalNullable<String> pINDeliveryCompanyName;
        private OptionalNullable<String> pINDeliveryAddressLine1;
        private OptionalNullable<String> pINDeliveryAddressLine2;
        private OptionalNullable<String> pINDeliveryAddressLine3;
        private OptionalNullable<String> pINDeliveryZipCode;
        private OptionalNullable<String> pINDeliveryCity;
        private OptionalNullable<Integer> pINDeliveryRegionId;
        private OptionalNullable<String> pINDeliveryRegion;
        private OptionalNullable<String> pINDeliveryCountry;
        private OptionalNullable<Integer> pINDeliveryCountryId;
        private OptionalNullable<String> pINPhoneNumber;
        private OptionalNullable<String> pINEmailAddress;
        private Boolean saveForPINReminder;
        private Boolean saveForCardReissue;
        private OptionalNullable<String> expiryDate;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  cardDeliveryType  Integer value for cardDeliveryType.
         */
        public Builder(Integer cardDeliveryType) {
            this.cardDeliveryType = cardDeliveryType;
        }

        /**
         * Setter for cardDeliveryType.
         * @param  cardDeliveryType  Integer value for cardDeliveryType.
         * @return Builder
         */
        public Builder cardDeliveryType(Integer cardDeliveryType) {
            this.cardDeliveryType = cardDeliveryType;
            return this;
        }

        /**
         * Setter for selfSelectedEncryptedPIN.
         * @param  selfSelectedEncryptedPIN  String value for selfSelectedEncryptedPIN.
         * @return Builder
         */
        public Builder selfSelectedEncryptedPIN(String selfSelectedEncryptedPIN) {
            this.selfSelectedEncryptedPIN = OptionalNullable.of(selfSelectedEncryptedPIN);
            return this;
        }

        /**
         * UnSetter for selfSelectedEncryptedPIN.
         * @return Builder
         */
        public Builder unsetSelfSelectedEncryptedPIN() {
            selfSelectedEncryptedPIN = null;
            return this;
        }

        /**
         * Setter for selfSelectedPINKeyID.
         * @param  selfSelectedPINKeyID  String value for selfSelectedPINKeyID.
         * @return Builder
         */
        public Builder selfSelectedPINKeyID(String selfSelectedPINKeyID) {
            this.selfSelectedPINKeyID = OptionalNullable.of(selfSelectedPINKeyID);
            return this;
        }

        /**
         * UnSetter for selfSelectedPINKeyID.
         * @return Builder
         */
        public Builder unsetSelfSelectedPINKeyID() {
            selfSelectedPINKeyID = null;
            return this;
        }

        /**
         * Setter for selfSelectedPINSessionKey.
         * @param  selfSelectedPINSessionKey  String value for selfSelectedPINSessionKey.
         * @return Builder
         */
        public Builder selfSelectedPINSessionKey(String selfSelectedPINSessionKey) {
            this.selfSelectedPINSessionKey = OptionalNullable.of(selfSelectedPINSessionKey);
            return this;
        }

        /**
         * UnSetter for selfSelectedPINSessionKey.
         * @return Builder
         */
        public Builder unsetSelfSelectedPINSessionKey() {
            selfSelectedPINSessionKey = null;
            return this;
        }

        /**
         * Setter for validateFleetId.
         * @param  validateFleetId  Boolean value for validateFleetId.
         * @return Builder
         */
        public Builder validateFleetId(Boolean validateFleetId) {
            this.validateFleetId = validateFleetId;
            return this;
        }

        /**
         * Setter for cardGroupId.
         * @param  cardGroupId  Integer value for cardGroupId.
         * @return Builder
         */
        public Builder cardGroupId(Integer cardGroupId) {
            this.cardGroupId = OptionalNullable.of(cardGroupId);
            return this;
        }

        /**
         * UnSetter for cardGroupId.
         * @return Builder
         */
        public Builder unsetCardGroupId() {
            cardGroupId = null;
            return this;
        }

        /**
         * Setter for deliveryContactTitle.
         * @param  deliveryContactTitle  String value for deliveryContactTitle.
         * @return Builder
         */
        public Builder deliveryContactTitle(String deliveryContactTitle) {
            this.deliveryContactTitle = OptionalNullable.of(deliveryContactTitle);
            return this;
        }

        /**
         * UnSetter for deliveryContactTitle.
         * @return Builder
         */
        public Builder unsetDeliveryContactTitle() {
            deliveryContactTitle = null;
            return this;
        }

        /**
         * Setter for deliveryContactName.
         * @param  deliveryContactName  String value for deliveryContactName.
         * @return Builder
         */
        public Builder deliveryContactName(String deliveryContactName) {
            this.deliveryContactName = OptionalNullable.of(deliveryContactName);
            return this;
        }

        /**
         * UnSetter for deliveryContactName.
         * @return Builder
         */
        public Builder unsetDeliveryContactName() {
            deliveryContactName = null;
            return this;
        }

        /**
         * Setter for deliveryCompanyName.
         * @param  deliveryCompanyName  String value for deliveryCompanyName.
         * @return Builder
         */
        public Builder deliveryCompanyName(String deliveryCompanyName) {
            this.deliveryCompanyName = OptionalNullable.of(deliveryCompanyName);
            return this;
        }

        /**
         * UnSetter for deliveryCompanyName.
         * @return Builder
         */
        public Builder unsetDeliveryCompanyName() {
            deliveryCompanyName = null;
            return this;
        }

        /**
         * Setter for deliveryAddressLine1.
         * @param  deliveryAddressLine1  String value for deliveryAddressLine1.
         * @return Builder
         */
        public Builder deliveryAddressLine1(String deliveryAddressLine1) {
            this.deliveryAddressLine1 = OptionalNullable.of(deliveryAddressLine1);
            return this;
        }

        /**
         * UnSetter for deliveryAddressLine1.
         * @return Builder
         */
        public Builder unsetDeliveryAddressLine1() {
            deliveryAddressLine1 = null;
            return this;
        }

        /**
         * Setter for deliveryAddressLine2.
         * @param  deliveryAddressLine2  String value for deliveryAddressLine2.
         * @return Builder
         */
        public Builder deliveryAddressLine2(String deliveryAddressLine2) {
            this.deliveryAddressLine2 = OptionalNullable.of(deliveryAddressLine2);
            return this;
        }

        /**
         * UnSetter for deliveryAddressLine2.
         * @return Builder
         */
        public Builder unsetDeliveryAddressLine2() {
            deliveryAddressLine2 = null;
            return this;
        }

        /**
         * Setter for deliveryAddressLine3.
         * @param  deliveryAddressLine3  String value for deliveryAddressLine3.
         * @return Builder
         */
        public Builder deliveryAddressLine3(String deliveryAddressLine3) {
            this.deliveryAddressLine3 = OptionalNullable.of(deliveryAddressLine3);
            return this;
        }

        /**
         * UnSetter for deliveryAddressLine3.
         * @return Builder
         */
        public Builder unsetDeliveryAddressLine3() {
            deliveryAddressLine3 = null;
            return this;
        }

        /**
         * Setter for deliveryZipCode.
         * @param  deliveryZipCode  String value for deliveryZipCode.
         * @return Builder
         */
        public Builder deliveryZipCode(String deliveryZipCode) {
            this.deliveryZipCode = OptionalNullable.of(deliveryZipCode);
            return this;
        }

        /**
         * UnSetter for deliveryZipCode.
         * @return Builder
         */
        public Builder unsetDeliveryZipCode() {
            deliveryZipCode = null;
            return this;
        }

        /**
         * Setter for deliveryCity.
         * @param  deliveryCity  String value for deliveryCity.
         * @return Builder
         */
        public Builder deliveryCity(String deliveryCity) {
            this.deliveryCity = OptionalNullable.of(deliveryCity);
            return this;
        }

        /**
         * UnSetter for deliveryCity.
         * @return Builder
         */
        public Builder unsetDeliveryCity() {
            deliveryCity = null;
            return this;
        }

        /**
         * Setter for deliveryRegionId.
         * @param  deliveryRegionId  Integer value for deliveryRegionId.
         * @return Builder
         */
        public Builder deliveryRegionId(Integer deliveryRegionId) {
            this.deliveryRegionId = OptionalNullable.of(deliveryRegionId);
            return this;
        }

        /**
         * UnSetter for deliveryRegionId.
         * @return Builder
         */
        public Builder unsetDeliveryRegionId() {
            deliveryRegionId = null;
            return this;
        }

        /**
         * Setter for deliveryRegion.
         * @param  deliveryRegion  String value for deliveryRegion.
         * @return Builder
         */
        public Builder deliveryRegion(String deliveryRegion) {
            this.deliveryRegion = OptionalNullable.of(deliveryRegion);
            return this;
        }

        /**
         * UnSetter for deliveryRegion.
         * @return Builder
         */
        public Builder unsetDeliveryRegion() {
            deliveryRegion = null;
            return this;
        }

        /**
         * Setter for deliveryCountry.
         * @param  deliveryCountry  String value for deliveryCountry.
         * @return Builder
         */
        public Builder deliveryCountry(String deliveryCountry) {
            this.deliveryCountry = OptionalNullable.of(deliveryCountry);
            return this;
        }

        /**
         * UnSetter for deliveryCountry.
         * @return Builder
         */
        public Builder unsetDeliveryCountry() {
            deliveryCountry = null;
            return this;
        }

        /**
         * Setter for deliveryCountryId.
         * @param  deliveryCountryId  Integer value for deliveryCountryId.
         * @return Builder
         */
        public Builder deliveryCountryId(Integer deliveryCountryId) {
            this.deliveryCountryId = OptionalNullable.of(deliveryCountryId);
            return this;
        }

        /**
         * UnSetter for deliveryCountryId.
         * @return Builder
         */
        public Builder unsetDeliveryCountryId() {
            deliveryCountryId = null;
            return this;
        }

        /**
         * Setter for phoneNumber.
         * @param  phoneNumber  String value for phoneNumber.
         * @return Builder
         */
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * Setter for emailAddress.
         * @param  emailAddress  String value for emailAddress.
         * @return Builder
         */
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = OptionalNullable.of(emailAddress);
            return this;
        }

        /**
         * UnSetter for emailAddress.
         * @return Builder
         */
        public Builder unsetEmailAddress() {
            emailAddress = null;
            return this;
        }

        /**
         * Setter for pINDeliveryAddressType.
         * @param  pINDeliveryAddressType  Integer value for pINDeliveryAddressType.
         * @return Builder
         */
        public Builder pINDeliveryAddressType(Integer pINDeliveryAddressType) {
            this.pINDeliveryAddressType = OptionalNullable.of(pINDeliveryAddressType);
            return this;
        }

        /**
         * UnSetter for pINDeliveryAddressType.
         * @return Builder
         */
        public Builder unsetPINDeliveryAddressType() {
            pINDeliveryAddressType = null;
            return this;
        }

        /**
         * Setter for pINAdviceType.
         * @param  pINAdviceType  Integer value for pINAdviceType.
         * @return Builder
         */
        public Builder pINAdviceType(Integer pINAdviceType) {
            this.pINAdviceType = OptionalNullable.of(pINAdviceType);
            return this;
        }

        /**
         * UnSetter for pINAdviceType.
         * @return Builder
         */
        public Builder unsetPINAdviceType() {
            pINAdviceType = null;
            return this;
        }

        /**
         * Setter for pINDeliveryContactTitle.
         * @param  pINDeliveryContactTitle  String value for pINDeliveryContactTitle.
         * @return Builder
         */
        public Builder pINDeliveryContactTitle(String pINDeliveryContactTitle) {
            this.pINDeliveryContactTitle = OptionalNullable.of(pINDeliveryContactTitle);
            return this;
        }

        /**
         * UnSetter for pINDeliveryContactTitle.
         * @return Builder
         */
        public Builder unsetPINDeliveryContactTitle() {
            pINDeliveryContactTitle = null;
            return this;
        }

        /**
         * Setter for pINDeliveryContactName.
         * @param  pINDeliveryContactName  String value for pINDeliveryContactName.
         * @return Builder
         */
        public Builder pINDeliveryContactName(String pINDeliveryContactName) {
            this.pINDeliveryContactName = OptionalNullable.of(pINDeliveryContactName);
            return this;
        }

        /**
         * UnSetter for pINDeliveryContactName.
         * @return Builder
         */
        public Builder unsetPINDeliveryContactName() {
            pINDeliveryContactName = null;
            return this;
        }

        /**
         * Setter for pINDeliveryCompanyName.
         * @param  pINDeliveryCompanyName  String value for pINDeliveryCompanyName.
         * @return Builder
         */
        public Builder pINDeliveryCompanyName(String pINDeliveryCompanyName) {
            this.pINDeliveryCompanyName = OptionalNullable.of(pINDeliveryCompanyName);
            return this;
        }

        /**
         * UnSetter for pINDeliveryCompanyName.
         * @return Builder
         */
        public Builder unsetPINDeliveryCompanyName() {
            pINDeliveryCompanyName = null;
            return this;
        }

        /**
         * Setter for pINDeliveryAddressLine1.
         * @param  pINDeliveryAddressLine1  String value for pINDeliveryAddressLine1.
         * @return Builder
         */
        public Builder pINDeliveryAddressLine1(String pINDeliveryAddressLine1) {
            this.pINDeliveryAddressLine1 = OptionalNullable.of(pINDeliveryAddressLine1);
            return this;
        }

        /**
         * UnSetter for pINDeliveryAddressLine1.
         * @return Builder
         */
        public Builder unsetPINDeliveryAddressLine1() {
            pINDeliveryAddressLine1 = null;
            return this;
        }

        /**
         * Setter for pINDeliveryAddressLine2.
         * @param  pINDeliveryAddressLine2  String value for pINDeliveryAddressLine2.
         * @return Builder
         */
        public Builder pINDeliveryAddressLine2(String pINDeliveryAddressLine2) {
            this.pINDeliveryAddressLine2 = OptionalNullable.of(pINDeliveryAddressLine2);
            return this;
        }

        /**
         * UnSetter for pINDeliveryAddressLine2.
         * @return Builder
         */
        public Builder unsetPINDeliveryAddressLine2() {
            pINDeliveryAddressLine2 = null;
            return this;
        }

        /**
         * Setter for pINDeliveryAddressLine3.
         * @param  pINDeliveryAddressLine3  String value for pINDeliveryAddressLine3.
         * @return Builder
         */
        public Builder pINDeliveryAddressLine3(String pINDeliveryAddressLine3) {
            this.pINDeliveryAddressLine3 = OptionalNullable.of(pINDeliveryAddressLine3);
            return this;
        }

        /**
         * UnSetter for pINDeliveryAddressLine3.
         * @return Builder
         */
        public Builder unsetPINDeliveryAddressLine3() {
            pINDeliveryAddressLine3 = null;
            return this;
        }

        /**
         * Setter for pINDeliveryZipCode.
         * @param  pINDeliveryZipCode  String value for pINDeliveryZipCode.
         * @return Builder
         */
        public Builder pINDeliveryZipCode(String pINDeliveryZipCode) {
            this.pINDeliveryZipCode = OptionalNullable.of(pINDeliveryZipCode);
            return this;
        }

        /**
         * UnSetter for pINDeliveryZipCode.
         * @return Builder
         */
        public Builder unsetPINDeliveryZipCode() {
            pINDeliveryZipCode = null;
            return this;
        }

        /**
         * Setter for pINDeliveryCity.
         * @param  pINDeliveryCity  String value for pINDeliveryCity.
         * @return Builder
         */
        public Builder pINDeliveryCity(String pINDeliveryCity) {
            this.pINDeliveryCity = OptionalNullable.of(pINDeliveryCity);
            return this;
        }

        /**
         * UnSetter for pINDeliveryCity.
         * @return Builder
         */
        public Builder unsetPINDeliveryCity() {
            pINDeliveryCity = null;
            return this;
        }

        /**
         * Setter for pINDeliveryRegionId.
         * @param  pINDeliveryRegionId  Integer value for pINDeliveryRegionId.
         * @return Builder
         */
        public Builder pINDeliveryRegionId(Integer pINDeliveryRegionId) {
            this.pINDeliveryRegionId = OptionalNullable.of(pINDeliveryRegionId);
            return this;
        }

        /**
         * UnSetter for pINDeliveryRegionId.
         * @return Builder
         */
        public Builder unsetPINDeliveryRegionId() {
            pINDeliveryRegionId = null;
            return this;
        }

        /**
         * Setter for pINDeliveryRegion.
         * @param  pINDeliveryRegion  String value for pINDeliveryRegion.
         * @return Builder
         */
        public Builder pINDeliveryRegion(String pINDeliveryRegion) {
            this.pINDeliveryRegion = OptionalNullable.of(pINDeliveryRegion);
            return this;
        }

        /**
         * UnSetter for pINDeliveryRegion.
         * @return Builder
         */
        public Builder unsetPINDeliveryRegion() {
            pINDeliveryRegion = null;
            return this;
        }

        /**
         * Setter for pINDeliveryCountry.
         * @param  pINDeliveryCountry  String value for pINDeliveryCountry.
         * @return Builder
         */
        public Builder pINDeliveryCountry(String pINDeliveryCountry) {
            this.pINDeliveryCountry = OptionalNullable.of(pINDeliveryCountry);
            return this;
        }

        /**
         * UnSetter for pINDeliveryCountry.
         * @return Builder
         */
        public Builder unsetPINDeliveryCountry() {
            pINDeliveryCountry = null;
            return this;
        }

        /**
         * Setter for pINDeliveryCountryId.
         * @param  pINDeliveryCountryId  Integer value for pINDeliveryCountryId.
         * @return Builder
         */
        public Builder pINDeliveryCountryId(Integer pINDeliveryCountryId) {
            this.pINDeliveryCountryId = OptionalNullable.of(pINDeliveryCountryId);
            return this;
        }

        /**
         * UnSetter for pINDeliveryCountryId.
         * @return Builder
         */
        public Builder unsetPINDeliveryCountryId() {
            pINDeliveryCountryId = null;
            return this;
        }

        /**
         * Setter for pINPhoneNumber.
         * @param  pINPhoneNumber  String value for pINPhoneNumber.
         * @return Builder
         */
        public Builder pINPhoneNumber(String pINPhoneNumber) {
            this.pINPhoneNumber = OptionalNullable.of(pINPhoneNumber);
            return this;
        }

        /**
         * UnSetter for pINPhoneNumber.
         * @return Builder
         */
        public Builder unsetPINPhoneNumber() {
            pINPhoneNumber = null;
            return this;
        }

        /**
         * Setter for pINEmailAddress.
         * @param  pINEmailAddress  String value for pINEmailAddress.
         * @return Builder
         */
        public Builder pINEmailAddress(String pINEmailAddress) {
            this.pINEmailAddress = OptionalNullable.of(pINEmailAddress);
            return this;
        }

        /**
         * UnSetter for pINEmailAddress.
         * @return Builder
         */
        public Builder unsetPINEmailAddress() {
            pINEmailAddress = null;
            return this;
        }

        /**
         * Setter for saveForPINReminder.
         * @param  saveForPINReminder  Boolean value for saveForPINReminder.
         * @return Builder
         */
        public Builder saveForPINReminder(Boolean saveForPINReminder) {
            this.saveForPINReminder = saveForPINReminder;
            return this;
        }

        /**
         * Setter for saveForCardReissue.
         * @param  saveForCardReissue  Boolean value for saveForCardReissue.
         * @return Builder
         */
        public Builder saveForCardReissue(Boolean saveForCardReissue) {
            this.saveForCardReissue = saveForCardReissue;
            return this;
        }

        /**
         * Setter for expiryDate.
         * @param  expiryDate  String value for expiryDate.
         * @return Builder
         */
        public Builder expiryDate(String expiryDate) {
            this.expiryDate = OptionalNullable.of(expiryDate);
            return this;
        }

        /**
         * UnSetter for expiryDate.
         * @return Builder
         */
        public Builder unsetExpiryDate() {
            expiryDate = null;
            return this;
        }

        /**
         * Builds a new {@link CardSettings} object using the set fields.
         * @return {@link CardSettings}
         */
        public CardSettings build() {
            return new CardSettings(cardDeliveryType, selfSelectedEncryptedPIN,
                    selfSelectedPINKeyID, selfSelectedPINSessionKey, validateFleetId, cardGroupId,
                    deliveryContactTitle, deliveryContactName, deliveryCompanyName,
                    deliveryAddressLine1, deliveryAddressLine2, deliveryAddressLine3,
                    deliveryZipCode, deliveryCity, deliveryRegionId, deliveryRegion,
                    deliveryCountry, deliveryCountryId, phoneNumber, emailAddress,
                    pINDeliveryAddressType, pINAdviceType, pINDeliveryContactTitle,
                    pINDeliveryContactName, pINDeliveryCompanyName, pINDeliveryAddressLine1,
                    pINDeliveryAddressLine2, pINDeliveryAddressLine3, pINDeliveryZipCode,
                    pINDeliveryCity, pINDeliveryRegionId, pINDeliveryRegion, pINDeliveryCountry,
                    pINDeliveryCountryId, pINPhoneNumber, pINEmailAddress, saveForPINReminder,
                    saveForCardReissue, expiryDate);
        }
    }
}
