/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UpdateCardStatusResponse type.
 */
public class UpdateCardStatusResponse {
    private String requestId;
    private String status;
    private List<SubmittedCard> data;
    private Integer mainReference;
    private Integer orderReplacementReference;
    private List<ErrorDetails> errors;

    /**
     * Default constructor.
     */
    public UpdateCardStatusResponse() {
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  status  String value for status.
     * @param  data  List of SubmittedCard value for data.
     * @param  mainReference  Integer value for mainReference.
     * @param  orderReplacementReference  Integer value for orderReplacementReference.
     * @param  errors  List of ErrorDetails value for errors.
     */
    public UpdateCardStatusResponse(
            String requestId,
            String status,
            List<SubmittedCard> data,
            Integer mainReference,
            Integer orderReplacementReference,
            List<ErrorDetails> errors) {
        this.requestId = requestId;
        this.status = status;
        this.data = data;
        this.mainReference = mainReference;
        this.orderReplacementReference = orderReplacementReference;
        this.errors = errors;
    }

    /**
     * Getter for RequestId.
     * Unique request identifier passed from end user. This identifier helps in tracing a
     * transaction
     * @return Returns the String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * Unique request identifier passed from end user. This identifier helps in tracing a
     * transaction
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Getter for Status.
     * Indicates overall status of the request. Allowed values: SUCCESS, FAILED, PARTIAL_SUCCESS
     * @return Returns the String
     */
    @JsonGetter("Status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Indicates overall status of the request. Allowed values: SUCCESS, FAILED, PARTIAL_SUCCESS
     * @param status Value for String
     */
    @JsonSetter("Status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Data.
     * @return Returns the List of SubmittedCard
     */
    @JsonGetter("Data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SubmittedCard> getData() {
        return data;
    }

    /**
     * Setter for Data.
     * @param data Value for List of SubmittedCard
     */
    @JsonSetter("Data")
    public void setData(List<SubmittedCard> data) {
        this.data = data;
    }

    /**
     * Getter for MainReference.
     * Update status reference number for tracking the execution of the request. &lt;br&gt;Note: Reference
     * will be empty for status 9006 and 9012 i.e., request for all the cards failed.
     * @return Returns the Integer
     */
    @JsonGetter("MainReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMainReference() {
        return mainReference;
    }

    /**
     * Setter for MainReference.
     * Update status reference number for tracking the execution of the request. &lt;br&gt;Note: Reference
     * will be empty for status 9006 and 9012 i.e., request for all the cards failed.
     * @param mainReference Value for Integer
     */
    @JsonSetter("MainReference")
    public void setMainReference(Integer mainReference) {
        this.mainReference = mainReference;
    }

    /**
     * Getter for OrderReplacementReference.
     * Order replacement reference number for tracking the execution of the order replacement cards
     * request. &lt;br/&gt;Note: Reference will be empty for status 9006 and 9012 i.e., request for all
     * the cards failed or if there were no order replacement requested in the input.
     * @return Returns the Integer
     */
    @JsonGetter("OrderReplacementReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOrderReplacementReference() {
        return orderReplacementReference;
    }

    /**
     * Setter for OrderReplacementReference.
     * Order replacement reference number for tracking the execution of the order replacement cards
     * request. &lt;br/&gt;Note: Reference will be empty for status 9006 and 9012 i.e., request for all
     * the cards failed or if there were no order replacement requested in the input.
     * @param orderReplacementReference Value for Integer
     */
    @JsonSetter("OrderReplacementReference")
    public void setOrderReplacementReference(Integer orderReplacementReference) {
        this.orderReplacementReference = orderReplacementReference;
    }

    /**
     * Getter for Errors.
     * @return Returns the List of ErrorDetails
     */
    @JsonGetter("Errors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ErrorDetails> getErrors() {
        return errors;
    }

    /**
     * Setter for Errors.
     * @param errors Value for List of ErrorDetails
     */
    @JsonSetter("Errors")
    public void setErrors(List<ErrorDetails> errors) {
        this.errors = errors;
    }

    /**
     * Converts this UpdateCardStatusResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdateCardStatusResponse [" + "requestId=" + requestId + ", status=" + status
                + ", data=" + data + ", mainReference=" + mainReference
                + ", orderReplacementReference=" + orderReplacementReference + ", errors=" + errors
                + "]";
    }

    /**
     * Builds a new {@link UpdateCardStatusResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdateCardStatusResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .requestId(getRequestId())
                .status(getStatus())
                .data(getData())
                .mainReference(getMainReference())
                .orderReplacementReference(getOrderReplacementReference())
                .errors(getErrors());
        return builder;
    }

    /**
     * Class to build instances of {@link UpdateCardStatusResponse}.
     */
    public static class Builder {
        private String requestId;
        private String status;
        private List<SubmittedCard> data;
        private Integer mainReference;
        private Integer orderReplacementReference;
        private List<ErrorDetails> errors;



        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for data.
         * @param  data  List of SubmittedCard value for data.
         * @return Builder
         */
        public Builder data(List<SubmittedCard> data) {
            this.data = data;
            return this;
        }

        /**
         * Setter for mainReference.
         * @param  mainReference  Integer value for mainReference.
         * @return Builder
         */
        public Builder mainReference(Integer mainReference) {
            this.mainReference = mainReference;
            return this;
        }

        /**
         * Setter for orderReplacementReference.
         * @param  orderReplacementReference  Integer value for orderReplacementReference.
         * @return Builder
         */
        public Builder orderReplacementReference(Integer orderReplacementReference) {
            this.orderReplacementReference = orderReplacementReference;
            return this;
        }

        /**
         * Setter for errors.
         * @param  errors  List of ErrorDetails value for errors.
         * @return Builder
         */
        public Builder errors(List<ErrorDetails> errors) {
            this.errors = errors;
            return this;
        }

        /**
         * Builds a new {@link UpdateCardStatusResponse} object using the set fields.
         * @return {@link UpdateCardStatusResponse}
         */
        public UpdateCardStatusResponse build() {
            return new UpdateCardStatusResponse(requestId, status, data, mainReference,
                    orderReplacementReference, errors);
        }
    }
}
