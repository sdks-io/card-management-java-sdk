/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for BundleRestriction type.
 */
public class BundleRestriction {
    private OptionalNullable<String> dayTimeRestrictionAction;
    private OptionalNullable<String> locationRestrictionAction;
    private OptionalNullable<UsageRestrictionsCard> usageRestrictions;
    private DayTimeRestriction dayTimeRestrictions;
    private OptionalNullable<ProductRestrictionCard> productRestrictions;
    private LocationRestriction locationRestrictions;

    /**
     * Default constructor.
     */
    public BundleRestriction() {
    }

    /**
     * Initialization constructor.
     * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
     * @param  locationRestrictionAction  String value for locationRestrictionAction.
     * @param  usageRestrictions  UsageRestrictionsCard value for usageRestrictions.
     * @param  dayTimeRestrictions  DayTimeRestriction value for dayTimeRestrictions.
     * @param  productRestrictions  ProductRestrictionCard value for productRestrictions.
     * @param  locationRestrictions  LocationRestriction value for locationRestrictions.
     */
    public BundleRestriction(
            String dayTimeRestrictionAction,
            String locationRestrictionAction,
            UsageRestrictionsCard usageRestrictions,
            DayTimeRestriction dayTimeRestrictions,
            ProductRestrictionCard productRestrictions,
            LocationRestriction locationRestrictions) {
        this.dayTimeRestrictionAction = OptionalNullable.of(dayTimeRestrictionAction);
        this.locationRestrictionAction = OptionalNullable.of(locationRestrictionAction);
        this.usageRestrictions = OptionalNullable.of(usageRestrictions);
        this.dayTimeRestrictions = dayTimeRestrictions;
        this.productRestrictions = OptionalNullable.of(productRestrictions);
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Initialization constructor.
     * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
     * @param  locationRestrictionAction  String value for locationRestrictionAction.
     * @param  usageRestrictions  UsageRestrictionsCard value for usageRestrictions.
     * @param  dayTimeRestrictions  DayTimeRestriction value for dayTimeRestrictions.
     * @param  productRestrictions  ProductRestrictionCard value for productRestrictions.
     * @param  locationRestrictions  LocationRestriction value for locationRestrictions.
     */

    protected BundleRestriction(OptionalNullable<String> dayTimeRestrictionAction,
            OptionalNullable<String> locationRestrictionAction,
            OptionalNullable<UsageRestrictionsCard> usageRestrictions,
            DayTimeRestriction dayTimeRestrictions,
            OptionalNullable<ProductRestrictionCard> productRestrictions,
            LocationRestriction locationRestrictions) {
        this.dayTimeRestrictionAction = dayTimeRestrictionAction;
        this.locationRestrictionAction = locationRestrictionAction;
        this.usageRestrictions = usageRestrictions;
        this.dayTimeRestrictions = dayTimeRestrictions;
        this.productRestrictions = productRestrictions;
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Internal Getter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     * @return Returns the Internal String
     */
    @JsonGetter("DayTimeRestrictionAction")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDayTimeRestrictionAction() {
        return this.dayTimeRestrictionAction;
    }

    /**
     * Getter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     * @return Returns the String
     */
    public String getDayTimeRestrictionAction() {
        return OptionalNullable.getFrom(dayTimeRestrictionAction);
    }

    /**
     * Setter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     * @param dayTimeRestrictionAction Value for String
     */
    @JsonSetter("DayTimeRestrictionAction")
    public void setDayTimeRestrictionAction(String dayTimeRestrictionAction) {
        this.dayTimeRestrictionAction = OptionalNullable.of(dayTimeRestrictionAction);
    }

    /**
     * UnSetter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     */
    public void unsetDayTimeRestrictionAction() {
        dayTimeRestrictionAction = null;
    }

    /**
     * Internal Getter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     * @return Returns the Internal String
     */
    @JsonGetter("LocationRestrictionAction")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLocationRestrictionAction() {
        return this.locationRestrictionAction;
    }

    /**
     * Getter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     * @return Returns the String
     */
    public String getLocationRestrictionAction() {
        return OptionalNullable.getFrom(locationRestrictionAction);
    }

    /**
     * Setter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     * @param locationRestrictionAction Value for String
     */
    @JsonSetter("LocationRestrictionAction")
    public void setLocationRestrictionAction(String locationRestrictionAction) {
        this.locationRestrictionAction = OptionalNullable.of(locationRestrictionAction);
    }

    /**
     * UnSetter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     */
    public void unsetLocationRestrictionAction() {
        locationRestrictionAction = null;
    }

    /**
     * Internal Getter for UsageRestrictions.
     * @return Returns the Internal UsageRestrictionsCard
     */
    @JsonGetter("UsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<UsageRestrictionsCard> internalGetUsageRestrictions() {
        return this.usageRestrictions;
    }

    /**
     * Getter for UsageRestrictions.
     * @return Returns the UsageRestrictionsCard
     */
    public UsageRestrictionsCard getUsageRestrictions() {
        return OptionalNullable.getFrom(usageRestrictions);
    }

    /**
     * Setter for UsageRestrictions.
     * @param usageRestrictions Value for UsageRestrictionsCard
     */
    @JsonSetter("UsageRestrictions")
    public void setUsageRestrictions(UsageRestrictionsCard usageRestrictions) {
        this.usageRestrictions = OptionalNullable.of(usageRestrictions);
    }

    /**
     * UnSetter for UsageRestrictions.
     */
    public void unsetUsageRestrictions() {
        usageRestrictions = null;
    }

    /**
     * Getter for DayTimeRestrictions.
     * Details of the day/time restrictions such as weekdays and time range in which transactions
     * should be allowed on the card.
     * @return Returns the DayTimeRestriction
     */
    @JsonGetter("DayTimeRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DayTimeRestriction getDayTimeRestrictions() {
        return dayTimeRestrictions;
    }

    /**
     * Setter for DayTimeRestrictions.
     * Details of the day/time restrictions such as weekdays and time range in which transactions
     * should be allowed on the card.
     * @param dayTimeRestrictions Value for DayTimeRestriction
     */
    @JsonSetter("DayTimeRestrictions")
    public void setDayTimeRestrictions(DayTimeRestriction dayTimeRestrictions) {
        this.dayTimeRestrictions = dayTimeRestrictions;
    }

    /**
     * Internal Getter for ProductRestrictions.
     * @return Returns the Internal ProductRestrictionCard
     */
    @JsonGetter("ProductRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<ProductRestrictionCard> internalGetProductRestrictions() {
        return this.productRestrictions;
    }

    /**
     * Getter for ProductRestrictions.
     * @return Returns the ProductRestrictionCard
     */
    public ProductRestrictionCard getProductRestrictions() {
        return OptionalNullable.getFrom(productRestrictions);
    }

    /**
     * Setter for ProductRestrictions.
     * @param productRestrictions Value for ProductRestrictionCard
     */
    @JsonSetter("ProductRestrictions")
    public void setProductRestrictions(ProductRestrictionCard productRestrictions) {
        this.productRestrictions = OptionalNullable.of(productRestrictions);
    }

    /**
     * UnSetter for ProductRestrictions.
     */
    public void unsetProductRestrictions() {
        productRestrictions = null;
    }

    /**
     * Getter for LocationRestrictions.
     * @return Returns the LocationRestriction
     */
    @JsonGetter("LocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationRestriction getLocationRestrictions() {
        return locationRestrictions;
    }

    /**
     * Setter for LocationRestrictions.
     * @param locationRestrictions Value for LocationRestriction
     */
    @JsonSetter("LocationRestrictions")
    public void setLocationRestrictions(LocationRestriction locationRestrictions) {
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Converts this BundleRestriction into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BundleRestriction [" + "dayTimeRestrictionAction=" + dayTimeRestrictionAction
                + ", locationRestrictionAction=" + locationRestrictionAction
                + ", usageRestrictions=" + usageRestrictions + ", dayTimeRestrictions="
                + dayTimeRestrictions + ", productRestrictions=" + productRestrictions
                + ", locationRestrictions=" + locationRestrictions + "]";
    }

    /**
     * Builds a new {@link BundleRestriction.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BundleRestriction.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dayTimeRestrictions(getDayTimeRestrictions())
                .locationRestrictions(getLocationRestrictions());
        builder.dayTimeRestrictionAction = internalGetDayTimeRestrictionAction();
        builder.locationRestrictionAction = internalGetLocationRestrictionAction();
        builder.usageRestrictions = internalGetUsageRestrictions();
        builder.productRestrictions = internalGetProductRestrictions();
        return builder;
    }

    /**
     * Class to build instances of {@link BundleRestriction}.
     */
    public static class Builder {
        private OptionalNullable<String> dayTimeRestrictionAction;
        private OptionalNullable<String> locationRestrictionAction;
        private OptionalNullable<UsageRestrictionsCard> usageRestrictions;
        private DayTimeRestriction dayTimeRestrictions;
        private OptionalNullable<ProductRestrictionCard> productRestrictions;
        private LocationRestriction locationRestrictions;



        /**
         * Setter for dayTimeRestrictionAction.
         * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
         * @return Builder
         */
        public Builder dayTimeRestrictionAction(String dayTimeRestrictionAction) {
            this.dayTimeRestrictionAction = OptionalNullable.of(dayTimeRestrictionAction);
            return this;
        }

        /**
         * UnSetter for dayTimeRestrictionAction.
         * @return Builder
         */
        public Builder unsetDayTimeRestrictionAction() {
            dayTimeRestrictionAction = null;
            return this;
        }

        /**
         * Setter for locationRestrictionAction.
         * @param  locationRestrictionAction  String value for locationRestrictionAction.
         * @return Builder
         */
        public Builder locationRestrictionAction(String locationRestrictionAction) {
            this.locationRestrictionAction = OptionalNullable.of(locationRestrictionAction);
            return this;
        }

        /**
         * UnSetter for locationRestrictionAction.
         * @return Builder
         */
        public Builder unsetLocationRestrictionAction() {
            locationRestrictionAction = null;
            return this;
        }

        /**
         * Setter for usageRestrictions.
         * @param  usageRestrictions  UsageRestrictionsCard value for usageRestrictions.
         * @return Builder
         */
        public Builder usageRestrictions(UsageRestrictionsCard usageRestrictions) {
            this.usageRestrictions = OptionalNullable.of(usageRestrictions);
            return this;
        }

        /**
         * UnSetter for usageRestrictions.
         * @return Builder
         */
        public Builder unsetUsageRestrictions() {
            usageRestrictions = null;
            return this;
        }

        /**
         * Setter for dayTimeRestrictions.
         * @param  dayTimeRestrictions  DayTimeRestriction value for dayTimeRestrictions.
         * @return Builder
         */
        public Builder dayTimeRestrictions(DayTimeRestriction dayTimeRestrictions) {
            this.dayTimeRestrictions = dayTimeRestrictions;
            return this;
        }

        /**
         * Setter for productRestrictions.
         * @param  productRestrictions  ProductRestrictionCard value for productRestrictions.
         * @return Builder
         */
        public Builder productRestrictions(ProductRestrictionCard productRestrictions) {
            this.productRestrictions = OptionalNullable.of(productRestrictions);
            return this;
        }

        /**
         * UnSetter for productRestrictions.
         * @return Builder
         */
        public Builder unsetProductRestrictions() {
            productRestrictions = null;
            return this;
        }

        /**
         * Setter for locationRestrictions.
         * @param  locationRestrictions  LocationRestriction value for locationRestrictions.
         * @return Builder
         */
        public Builder locationRestrictions(LocationRestriction locationRestrictions) {
            this.locationRestrictions = locationRestrictions;
            return this;
        }

        /**
         * Builds a new {@link BundleRestriction} object using the set fields.
         * @return {@link BundleRestriction}
         */
        public BundleRestriction build() {
            return new BundleRestriction(dayTimeRestrictionAction, locationRestrictionAction,
                    usageRestrictions, dayTimeRestrictions, productRestrictions,
                    locationRestrictions);
        }
    }
}
