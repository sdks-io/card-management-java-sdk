/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for AccountRestrictionRequest type.
 */
public class AccountRestrictionRequest {
    private Integer colCoId;
    private Integer colCoCode;
    private OptionalNullable<Integer> payerId;
    private String payerNumber;
    private String accountNumber;
    private Boolean resetUsageRestrictions;
    private UsageRestrictions usageRestrictions;

    /**
     * Default constructor.
     */
    public AccountRestrictionRequest() {
        resetUsageRestrictions = false;
    }

    /**
     * Initialization constructor.
     * @param  colCoId  Integer value for colCoId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  accountNumber  String value for accountNumber.
     * @param  resetUsageRestrictions  Boolean value for resetUsageRestrictions.
     * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
     */
    public AccountRestrictionRequest(
            Integer colCoId,
            Integer colCoCode,
            Integer payerId,
            String payerNumber,
            String accountNumber,
            Boolean resetUsageRestrictions,
            UsageRestrictions usageRestrictions) {
        this.colCoId = colCoId;
        this.colCoCode = colCoCode;
        this.payerId = OptionalNullable.of(payerId);
        this.payerNumber = payerNumber;
        this.accountNumber = accountNumber;
        this.resetUsageRestrictions = resetUsageRestrictions;
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Initialization constructor.
     * @param  colCoId  Integer value for colCoId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  accountNumber  String value for accountNumber.
     * @param  resetUsageRestrictions  Boolean value for resetUsageRestrictions.
     * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
     */

    protected AccountRestrictionRequest(Integer colCoId, Integer colCoCode,
            OptionalNullable<Integer> payerId, String payerNumber, String accountNumber,
            Boolean resetUsageRestrictions, UsageRestrictions usageRestrictions) {
        this.colCoId = colCoId;
        this.colCoCode = colCoCode;
        this.payerId = payerId;
        this.payerNumber = payerNumber;
        this.accountNumber = accountNumber;
        this.resetUsageRestrictions = resetUsageRestrictions;
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Getter for ColCoId.
     * Collecting Company Id of the selected payer. Optional if ColCoCode is passed else Mandatory.
     * Example: 1 for Philippines 5 for UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoId() {
        return colCoId;
    }

    /**
     * Setter for ColCoId.
     * Collecting Company Id of the selected payer. Optional if ColCoCode is passed else Mandatory.
     * Example: 1 for Philippines 5 for UK
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = colCoId;
    }

    /**
     * Getter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86 for Philippines 5 for UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoCode() {
        return colCoCode;
    }

    /**
     * Setter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86 for Philippines 5 for UK
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = colCoCode;
    }

    /**
     * Internal Getter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory Example:
     * GB000000123
     * @return Returns the String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPayerNumber() {
        return payerNumber;
    }

    /**
     * Setter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory Example:
     * GB000000123
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = payerNumber;
    }

    /**
     * Getter for AccountNumber.
     * Account Number of the customer on which the restrictions will be applied. Optional if
     * AccountId is passed, else Mandatory.
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account Number of the customer on which the restrictions will be applied. Optional if
     * AccountId is passed, else Mandatory.
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for ResetUsageRestrictions.
     * If true, the usage restrictions applied on the account will be removed. Optional Default:
     * False
     * @return Returns the Boolean
     */
    @JsonGetter("ResetUsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getResetUsageRestrictions() {
        return resetUsageRestrictions;
    }

    /**
     * Setter for ResetUsageRestrictions.
     * If true, the usage restrictions applied on the account will be removed. Optional Default:
     * False
     * @param resetUsageRestrictions Value for Boolean
     */
    @JsonSetter("ResetUsageRestrictions")
    public void setResetUsageRestrictions(Boolean resetUsageRestrictions) {
        this.resetUsageRestrictions = resetUsageRestrictions;
    }

    /**
     * Getter for UsageRestrictions.
     * @return Returns the UsageRestrictions
     */
    @JsonGetter("UsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageRestrictions getUsageRestrictions() {
        return usageRestrictions;
    }

    /**
     * Setter for UsageRestrictions.
     * @param usageRestrictions Value for UsageRestrictions
     */
    @JsonSetter("UsageRestrictions")
    public void setUsageRestrictions(UsageRestrictions usageRestrictions) {
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Converts this AccountRestrictionRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AccountRestrictionRequest [" + "colCoId=" + colCoId + ", colCoCode=" + colCoCode
                + ", payerId=" + payerId + ", payerNumber=" + payerNumber + ", accountNumber="
                + accountNumber + ", resetUsageRestrictions=" + resetUsageRestrictions
                + ", usageRestrictions=" + usageRestrictions + "]";
    }

    /**
     * Builds a new {@link AccountRestrictionRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AccountRestrictionRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .colCoId(getColCoId())
                .colCoCode(getColCoCode())
                .payerNumber(getPayerNumber())
                .accountNumber(getAccountNumber())
                .resetUsageRestrictions(getResetUsageRestrictions())
                .usageRestrictions(getUsageRestrictions());
        builder.payerId = internalGetPayerId();
        return builder;
    }

    /**
     * Class to build instances of {@link AccountRestrictionRequest}.
     */
    public static class Builder {
        private Integer colCoId;
        private Integer colCoCode;
        private OptionalNullable<Integer> payerId;
        private String payerNumber;
        private String accountNumber;
        private Boolean resetUsageRestrictions = false;
        private UsageRestrictions usageRestrictions;



        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = colCoId;
            return this;
        }

        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = colCoCode;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = payerNumber;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for resetUsageRestrictions.
         * @param  resetUsageRestrictions  Boolean value for resetUsageRestrictions.
         * @return Builder
         */
        public Builder resetUsageRestrictions(Boolean resetUsageRestrictions) {
            this.resetUsageRestrictions = resetUsageRestrictions;
            return this;
        }

        /**
         * Setter for usageRestrictions.
         * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
         * @return Builder
         */
        public Builder usageRestrictions(UsageRestrictions usageRestrictions) {
            this.usageRestrictions = usageRestrictions;
            return this;
        }

        /**
         * Builds a new {@link AccountRestrictionRequest} object using the set fields.
         * @return {@link AccountRestrictionRequest}
         */
        public AccountRestrictionRequest build() {
            return new AccountRestrictionRequest(colCoId, colCoCode, payerId, payerNumber,
                    accountNumber, resetUsageRestrictions, usageRestrictions);
        }
    }
}
