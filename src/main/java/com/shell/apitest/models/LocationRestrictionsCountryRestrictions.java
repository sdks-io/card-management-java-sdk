/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for LocationRestrictionsCountryRestrictions type.
 */
public class LocationRestrictionsCountryRestrictions {
    private boolean exclusive;
    private List<String> countries;

    /**
     * Default constructor.
     */
    public LocationRestrictionsCountryRestrictions() {
    }

    /**
     * Initialization constructor.
     * @param  exclusive  boolean value for exclusive.
     * @param  countries  List of String value for countries.
     */
    public LocationRestrictionsCountryRestrictions(
            boolean exclusive,
            List<String> countries) {
        this.exclusive = exclusive;
        this.countries = countries;
    }

    /**
     * Getter for Exclusive.
     * Boolean	Flag indicates whether the profile is inclusive or exclusive. Mandatory Example:
     * False - (inclusive), i.e. the “Countries” property lists the countries where the transactions
     * will be allowed. True - (exclusive), i.e. the “Countries” property lists the countries where
     * the transactions will be declined.
     * @return Returns the boolean
     */
    @JsonGetter("Exclusive")
    public boolean getExclusive() {
        return exclusive;
    }

    /**
     * Setter for Exclusive.
     * Boolean	Flag indicates whether the profile is inclusive or exclusive. Mandatory Example:
     * False - (inclusive), i.e. the “Countries” property lists the countries where the transactions
     * will be allowed. True - (exclusive), i.e. the “Countries” property lists the countries where
     * the transactions will be declined.
     * @param exclusive Value for boolean
     */
    @JsonSetter("Exclusive")
    public void setExclusive(boolean exclusive) {
        this.exclusive = exclusive;
    }

    /**
     * Getter for Countries.
     * ISO 3166-1 Numeric-3 code of the country where the network restriction is applied. Example:
     * 826 for United Kingdom. Mandatory
     * @return Returns the List of String
     */
    @JsonGetter("Countries")
    public List<String> getCountries() {
        return countries;
    }

    /**
     * Setter for Countries.
     * ISO 3166-1 Numeric-3 code of the country where the network restriction is applied. Example:
     * 826 for United Kingdom. Mandatory
     * @param countries Value for List of String
     */
    @JsonSetter("Countries")
    public void setCountries(List<String> countries) {
        this.countries = countries;
    }

    /**
     * Converts this LocationRestrictionsCountryRestrictions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LocationRestrictionsCountryRestrictions [" + "exclusive=" + exclusive
                + ", countries=" + countries + "]";
    }

    /**
     * Builds a new {@link LocationRestrictionsCountryRestrictions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LocationRestrictionsCountryRestrictions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(exclusive, countries);
        return builder;
    }

    /**
     * Class to build instances of {@link LocationRestrictionsCountryRestrictions}.
     */
    public static class Builder {
        private boolean exclusive;
        private List<String> countries;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  exclusive  boolean value for exclusive.
         * @param  countries  List of String value for countries.
         */
        public Builder(boolean exclusive, List<String> countries) {
            this.exclusive = exclusive;
            this.countries = countries;
        }

        /**
         * Setter for exclusive.
         * @param  exclusive  boolean value for exclusive.
         * @return Builder
         */
        public Builder exclusive(boolean exclusive) {
            this.exclusive = exclusive;
            return this;
        }

        /**
         * Setter for countries.
         * @param  countries  List of String value for countries.
         * @return Builder
         */
        public Builder countries(List<String> countries) {
            this.countries = countries;
            return this;
        }

        /**
         * Builds a new {@link LocationRestrictionsCountryRestrictions} object using the set fields.
         * @return {@link LocationRestrictionsCountryRestrictions}
         */
        public LocationRestrictionsCountryRestrictions build() {
            return new LocationRestrictionsCountryRestrictions(exclusive, countries);
        }
    }
}
