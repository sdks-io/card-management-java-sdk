/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for PurchaseCategoryRequest type.
 */
public class PurchaseCategoryRequest {
    private String requestId;
    private OptionalNullable<Integer> colCoCode;
    private OptionalNullable<Integer> colCoId;
    private OptionalNullable<Integer> cardTypeId;
    private Integer purchaseCategoryId;
    private String languageCode;

    /**
     * Default constructor.
     */
    public PurchaseCategoryRequest() {
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  cardTypeId  Integer value for cardTypeId.
     * @param  purchaseCategoryId  Integer value for purchaseCategoryId.
     * @param  languageCode  String value for languageCode.
     */
    public PurchaseCategoryRequest(
            String requestId,
            Integer colCoCode,
            Integer colCoId,
            Integer cardTypeId,
            Integer purchaseCategoryId,
            String languageCode) {
        this.requestId = requestId;
        this.colCoCode = OptionalNullable.of(colCoCode);
        this.colCoId = OptionalNullable.of(colCoId);
        this.cardTypeId = OptionalNullable.of(cardTypeId);
        this.purchaseCategoryId = purchaseCategoryId;
        this.languageCode = languageCode;
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  cardTypeId  Integer value for cardTypeId.
     * @param  purchaseCategoryId  Integer value for purchaseCategoryId.
     * @param  languageCode  String value for languageCode.
     */

    protected PurchaseCategoryRequest(String requestId, OptionalNullable<Integer> colCoCode,
            OptionalNullable<Integer> colCoId, OptionalNullable<Integer> cardTypeId,
            Integer purchaseCategoryId, String languageCode) {
        this.requestId = requestId;
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.cardTypeId = cardTypeId;
        this.purchaseCategoryId = purchaseCategoryId;
        this.languageCode = languageCode;
    }

    /**
     * Getter for RequestId.
     * Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be
     * played back in the response from the request.
     * @return Returns the String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be
     * played back in the response from the request.
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Internal Getter for ColCoCode.
     * Collecting Company Code (Shell Code).
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoCode() {
        return this.colCoCode;
    }

    /**
     * Getter for ColCoCode.
     * Collecting Company Code (Shell Code).
     * @return Returns the Integer
     */
    public Integer getColCoCode() {
        return OptionalNullable.getFrom(colCoCode);
    }

    /**
     * Setter for ColCoCode.
     * Collecting Company Code (Shell Code).
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = OptionalNullable.of(colCoCode);
    }

    /**
     * UnSetter for ColCoCode.
     * Collecting Company Code (Shell Code).
     */
    public void unsetColCoCode() {
        colCoCode = null;
    }

    /**
     * Internal Getter for ColCoId.
     * Collecting Company Id (in Shell Cards Platform).
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoId() {
        return this.colCoId;
    }

    /**
     * Getter for ColCoId.
     * Collecting Company Id (in Shell Cards Platform).
     * @return Returns the Integer
     */
    public Integer getColCoId() {
        return OptionalNullable.getFrom(colCoId);
    }

    /**
     * Setter for ColCoId.
     * Collecting Company Id (in Shell Cards Platform).
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = OptionalNullable.of(colCoId);
    }

    /**
     * UnSetter for ColCoId.
     * Collecting Company Id (in Shell Cards Platform).
     */
    public void unsetColCoId() {
        colCoId = null;
    }

    /**
     * Internal Getter for CardTypeId.
     * Card type Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardTypeId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardTypeId() {
        return this.cardTypeId;
    }

    /**
     * Getter for CardTypeId.
     * Card type Id
     * @return Returns the Integer
     */
    public Integer getCardTypeId() {
        return OptionalNullable.getFrom(cardTypeId);
    }

    /**
     * Setter for CardTypeId.
     * Card type Id
     * @param cardTypeId Value for Integer
     */
    @JsonSetter("CardTypeId")
    public void setCardTypeId(Integer cardTypeId) {
        this.cardTypeId = OptionalNullable.of(cardTypeId);
    }

    /**
     * UnSetter for CardTypeId.
     * Card type Id
     */
    public void unsetCardTypeId() {
        cardTypeId = null;
    }

    /**
     * Getter for PurchaseCategoryId.
     * Purchase category Id Optional. Example: 123, 124, etc.,
     * @return Returns the Integer
     */
    @JsonGetter("PurchaseCategoryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPurchaseCategoryId() {
        return purchaseCategoryId;
    }

    /**
     * Setter for PurchaseCategoryId.
     * Purchase category Id Optional. Example: 123, 124, etc.,
     * @param purchaseCategoryId Value for Integer
     */
    @JsonSetter("PurchaseCategoryId")
    public void setPurchaseCategoryId(Integer purchaseCategoryId) {
        this.purchaseCategoryId = purchaseCategoryId;
    }

    /**
     * Getter for LanguageCode.
     * Language code for the Title and Description. Language codes should be same as SFH supported
     * language Optional. Default: en-GB Example: en-GB – English (UK) nl-NL – Dutch (Netherlands)
     * @return Returns the String
     */
    @JsonGetter("LanguageCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLanguageCode() {
        return languageCode;
    }

    /**
     * Setter for LanguageCode.
     * Language code for the Title and Description. Language codes should be same as SFH supported
     * language Optional. Default: en-GB Example: en-GB – English (UK) nl-NL – Dutch (Netherlands)
     * @param languageCode Value for String
     */
    @JsonSetter("LanguageCode")
    public void setLanguageCode(String languageCode) {
        this.languageCode = languageCode;
    }

    /**
     * Converts this PurchaseCategoryRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PurchaseCategoryRequest [" + "requestId=" + requestId + ", colCoCode=" + colCoCode
                + ", colCoId=" + colCoId + ", cardTypeId=" + cardTypeId + ", purchaseCategoryId="
                + purchaseCategoryId + ", languageCode=" + languageCode + "]";
    }

    /**
     * Builds a new {@link PurchaseCategoryRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PurchaseCategoryRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .requestId(getRequestId())
                .purchaseCategoryId(getPurchaseCategoryId())
                .languageCode(getLanguageCode());
        builder.colCoCode = internalGetColCoCode();
        builder.colCoId = internalGetColCoId();
        builder.cardTypeId = internalGetCardTypeId();
        return builder;
    }

    /**
     * Class to build instances of {@link PurchaseCategoryRequest}.
     */
    public static class Builder {
        private String requestId;
        private OptionalNullable<Integer> colCoCode;
        private OptionalNullable<Integer> colCoId;
        private OptionalNullable<Integer> cardTypeId;
        private Integer purchaseCategoryId;
        private String languageCode;



        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = OptionalNullable.of(colCoCode);
            return this;
        }

        /**
         * UnSetter for colCoCode.
         * @return Builder
         */
        public Builder unsetColCoCode() {
            colCoCode = null;
            return this;
        }

        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = OptionalNullable.of(colCoId);
            return this;
        }

        /**
         * UnSetter for colCoId.
         * @return Builder
         */
        public Builder unsetColCoId() {
            colCoId = null;
            return this;
        }

        /**
         * Setter for cardTypeId.
         * @param  cardTypeId  Integer value for cardTypeId.
         * @return Builder
         */
        public Builder cardTypeId(Integer cardTypeId) {
            this.cardTypeId = OptionalNullable.of(cardTypeId);
            return this;
        }

        /**
         * UnSetter for cardTypeId.
         * @return Builder
         */
        public Builder unsetCardTypeId() {
            cardTypeId = null;
            return this;
        }

        /**
         * Setter for purchaseCategoryId.
         * @param  purchaseCategoryId  Integer value for purchaseCategoryId.
         * @return Builder
         */
        public Builder purchaseCategoryId(Integer purchaseCategoryId) {
            this.purchaseCategoryId = purchaseCategoryId;
            return this;
        }

        /**
         * Setter for languageCode.
         * @param  languageCode  String value for languageCode.
         * @return Builder
         */
        public Builder languageCode(String languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        /**
         * Builds a new {@link PurchaseCategoryRequest} object using the set fields.
         * @return {@link PurchaseCategoryRequest}
         */
        public PurchaseCategoryRequest build() {
            return new PurchaseCategoryRequest(requestId, colCoCode, colCoId, cardTypeId,
                    purchaseCategoryId, languageCode);
        }
    }
}
