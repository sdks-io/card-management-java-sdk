/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for SearchCardResponseRestrictions type.
 */
public class SearchCardResponseRestrictions {
    private DayTimeRestrictions dayTimeRestrictions;
    private LocationRestrictions locationRestrictions;
    private SearchProductRestriction productRestrictions;
    private UsageRestrictions usageRestrictions;

    /**
     * Default constructor.
     */
    public SearchCardResponseRestrictions() {
    }

    /**
     * Initialization constructor.
     * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
     * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
     * @param  productRestrictions  SearchProductRestriction value for productRestrictions.
     * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
     */
    public SearchCardResponseRestrictions(
            DayTimeRestrictions dayTimeRestrictions,
            LocationRestrictions locationRestrictions,
            SearchProductRestriction productRestrictions,
            UsageRestrictions usageRestrictions) {
        this.dayTimeRestrictions = dayTimeRestrictions;
        this.locationRestrictions = locationRestrictions;
        this.productRestrictions = productRestrictions;
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Getter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @return Returns the DayTimeRestrictions
     */
    @JsonGetter("DayTimeRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DayTimeRestrictions getDayTimeRestrictions() {
        return dayTimeRestrictions;
    }

    /**
     * Setter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @param dayTimeRestrictions Value for DayTimeRestrictions
     */
    @JsonSetter("DayTimeRestrictions")
    public void setDayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
        this.dayTimeRestrictions = dayTimeRestrictions;
    }

    /**
     * Getter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @return Returns the LocationRestrictions
     */
    @JsonGetter("LocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationRestrictions getLocationRestrictions() {
        return locationRestrictions;
    }

    /**
     * Setter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @param locationRestrictions Value for LocationRestrictions
     */
    @JsonSetter("LocationRestrictions")
    public void setLocationRestrictions(LocationRestrictions locationRestrictions) {
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Getter for ProductRestrictions.
     * @return Returns the SearchProductRestriction
     */
    @JsonGetter("ProductRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SearchProductRestriction getProductRestrictions() {
        return productRestrictions;
    }

    /**
     * Setter for ProductRestrictions.
     * @param productRestrictions Value for SearchProductRestriction
     */
    @JsonSetter("ProductRestrictions")
    public void setProductRestrictions(SearchProductRestriction productRestrictions) {
        this.productRestrictions = productRestrictions;
    }

    /**
     * Getter for UsageRestrictions.
     * @return Returns the UsageRestrictions
     */
    @JsonGetter("UsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageRestrictions getUsageRestrictions() {
        return usageRestrictions;
    }

    /**
     * Setter for UsageRestrictions.
     * @param usageRestrictions Value for UsageRestrictions
     */
    @JsonSetter("UsageRestrictions")
    public void setUsageRestrictions(UsageRestrictions usageRestrictions) {
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Converts this SearchCardResponseRestrictions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SearchCardResponseRestrictions [" + "dayTimeRestrictions=" + dayTimeRestrictions
                + ", locationRestrictions=" + locationRestrictions + ", productRestrictions="
                + productRestrictions + ", usageRestrictions=" + usageRestrictions + "]";
    }

    /**
     * Builds a new {@link SearchCardResponseRestrictions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SearchCardResponseRestrictions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dayTimeRestrictions(getDayTimeRestrictions())
                .locationRestrictions(getLocationRestrictions())
                .productRestrictions(getProductRestrictions())
                .usageRestrictions(getUsageRestrictions());
        return builder;
    }

    /**
     * Class to build instances of {@link SearchCardResponseRestrictions}.
     */
    public static class Builder {
        private DayTimeRestrictions dayTimeRestrictions;
        private LocationRestrictions locationRestrictions;
        private SearchProductRestriction productRestrictions;
        private UsageRestrictions usageRestrictions;



        /**
         * Setter for dayTimeRestrictions.
         * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
         * @return Builder
         */
        public Builder dayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
            this.dayTimeRestrictions = dayTimeRestrictions;
            return this;
        }

        /**
         * Setter for locationRestrictions.
         * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
         * @return Builder
         */
        public Builder locationRestrictions(LocationRestrictions locationRestrictions) {
            this.locationRestrictions = locationRestrictions;
            return this;
        }

        /**
         * Setter for productRestrictions.
         * @param  productRestrictions  SearchProductRestriction value for productRestrictions.
         * @return Builder
         */
        public Builder productRestrictions(SearchProductRestriction productRestrictions) {
            this.productRestrictions = productRestrictions;
            return this;
        }

        /**
         * Setter for usageRestrictions.
         * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
         * @return Builder
         */
        public Builder usageRestrictions(UsageRestrictions usageRestrictions) {
            this.usageRestrictions = usageRestrictions;
            return this;
        }

        /**
         * Builds a new {@link SearchCardResponseRestrictions} object using the set fields.
         * @return {@link SearchCardResponseRestrictions}
         */
        public SearchCardResponseRestrictions build() {
            return new SearchCardResponseRestrictions(dayTimeRestrictions, locationRestrictions,
                    productRestrictions, usageRestrictions);
        }
    }
}
