/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for CardMoveRequest type.
 */
public class CardMoveRequest {
    private OptionalNullable<Integer> colCoCode;
    private OptionalNullable<Integer> colCoId;
    private OptionalNullable<String> colCoCountryCode;
    private OptionalNullable<String> payerNumber;
    private OptionalNullable<Integer> payerId;
    private List<CardMoveRequestCardsItems> cards;
    private Integer targetAccountId;
    private String targetAccountNumber;
    private Integer targetCardGroupId;
    private String targetNewCardGroupName;

    /**
     * Default constructor.
     */
    public CardMoveRequest() {
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  colCoCountryCode  String value for colCoCountryCode.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  cards  List of CardMoveRequestCardsItems value for cards.
     * @param  targetAccountId  Integer value for targetAccountId.
     * @param  targetAccountNumber  String value for targetAccountNumber.
     * @param  targetCardGroupId  Integer value for targetCardGroupId.
     * @param  targetNewCardGroupName  String value for targetNewCardGroupName.
     */
    public CardMoveRequest(
            Integer colCoCode,
            Integer colCoId,
            String colCoCountryCode,
            String payerNumber,
            Integer payerId,
            List<CardMoveRequestCardsItems> cards,
            Integer targetAccountId,
            String targetAccountNumber,
            Integer targetCardGroupId,
            String targetNewCardGroupName) {
        this.colCoCode = OptionalNullable.of(colCoCode);
        this.colCoId = OptionalNullable.of(colCoId);
        this.colCoCountryCode = OptionalNullable.of(colCoCountryCode);
        this.payerNumber = OptionalNullable.of(payerNumber);
        this.payerId = OptionalNullable.of(payerId);
        this.cards = cards;
        this.targetAccountId = targetAccountId;
        this.targetAccountNumber = targetAccountNumber;
        this.targetCardGroupId = targetCardGroupId;
        this.targetNewCardGroupName = targetNewCardGroupName;
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  colCoCountryCode  String value for colCoCountryCode.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  cards  List of CardMoveRequestCardsItems value for cards.
     * @param  targetAccountId  Integer value for targetAccountId.
     * @param  targetAccountNumber  String value for targetAccountNumber.
     * @param  targetCardGroupId  Integer value for targetCardGroupId.
     * @param  targetNewCardGroupName  String value for targetNewCardGroupName.
     */

    protected CardMoveRequest(OptionalNullable<Integer> colCoCode,
            OptionalNullable<Integer> colCoId, OptionalNullable<String> colCoCountryCode,
            OptionalNullable<String> payerNumber, OptionalNullable<Integer> payerId,
            List<CardMoveRequestCardsItems> cards, Integer targetAccountId,
            String targetAccountNumber, Integer targetCardGroupId,
            String targetNewCardGroupName) {
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.colCoCountryCode = colCoCountryCode;
        this.payerNumber = payerNumber;
        this.payerId = payerId;
        this.cards = cards;
        this.targetAccountId = targetAccountId;
        this.targetAccountNumber = targetAccountNumber;
        this.targetCardGroupId = targetCardGroupId;
        this.targetNewCardGroupName = targetNewCardGroupName;
    }

    /**
     * Internal Getter for ColCoCode.
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoCode() {
        return this.colCoCode;
    }

    /**
     * Getter for ColCoCode.
     * @return Returns the Integer
     */
    public Integer getColCoCode() {
        return OptionalNullable.getFrom(colCoCode);
    }

    /**
     * Setter for ColCoCode.
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = OptionalNullable.of(colCoCode);
    }

    /**
     * UnSetter for ColCoCode.
     */
    public void unsetColCoCode() {
        colCoCode = null;
    }

    /**
     * Internal Getter for ColCoId.
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoId() {
        return this.colCoId;
    }

    /**
     * Getter for ColCoId.
     * @return Returns the Integer
     */
    public Integer getColCoId() {
        return OptionalNullable.getFrom(colCoId);
    }

    /**
     * Setter for ColCoId.
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = OptionalNullable.of(colCoId);
    }

    /**
     * UnSetter for ColCoId.
     */
    public void unsetColCoId() {
        colCoId = null;
    }

    /**
     * Internal Getter for ColCoCountryCode.
     * @return Returns the Internal String
     */
    @JsonGetter("ColCoCountryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetColCoCountryCode() {
        return this.colCoCountryCode;
    }

    /**
     * Getter for ColCoCountryCode.
     * @return Returns the String
     */
    public String getColCoCountryCode() {
        return OptionalNullable.getFrom(colCoCountryCode);
    }

    /**
     * Setter for ColCoCountryCode.
     * @param colCoCountryCode Value for String
     */
    @JsonSetter("ColCoCountryCode")
    public void setColCoCountryCode(String colCoCountryCode) {
        this.colCoCountryCode = OptionalNullable.of(colCoCountryCode);
    }

    /**
     * UnSetter for ColCoCountryCode.
     */
    public void unsetColCoCountryCode() {
        colCoCountryCode = null;
    }

    /**
     * Internal Getter for PayerNumber.
     * @return Returns the Internal String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerNumber() {
        return this.payerNumber;
    }

    /**
     * Getter for PayerNumber.
     * @return Returns the String
     */
    public String getPayerNumber() {
        return OptionalNullable.getFrom(payerNumber);
    }

    /**
     * Setter for PayerNumber.
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = OptionalNullable.of(payerNumber);
    }

    /**
     * UnSetter for PayerNumber.
     */
    public void unsetPayerNumber() {
        payerNumber = null;
    }

    /**
     * Internal Getter for PayerId.
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Getter for Cards.
     * @return Returns the List of CardMoveRequestCardsItems
     */
    @JsonGetter("Cards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CardMoveRequestCardsItems> getCards() {
        return cards;
    }

    /**
     * Setter for Cards.
     * @param cards Value for List of CardMoveRequestCardsItems
     */
    @JsonSetter("Cards")
    public void setCards(List<CardMoveRequestCardsItems> cards) {
        this.cards = cards;
    }

    /**
     * Getter for TargetAccountId.
     * @return Returns the Integer
     */
    @JsonGetter("TargetAccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTargetAccountId() {
        return targetAccountId;
    }

    /**
     * Setter for TargetAccountId.
     * @param targetAccountId Value for Integer
     */
    @JsonSetter("TargetAccountId")
    public void setTargetAccountId(Integer targetAccountId) {
        this.targetAccountId = targetAccountId;
    }

    /**
     * Getter for TargetAccountNumber.
     * @return Returns the String
     */
    @JsonGetter("TargetAccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTargetAccountNumber() {
        return targetAccountNumber;
    }

    /**
     * Setter for TargetAccountNumber.
     * @param targetAccountNumber Value for String
     */
    @JsonSetter("TargetAccountNumber")
    public void setTargetAccountNumber(String targetAccountNumber) {
        this.targetAccountNumber = targetAccountNumber;
    }

    /**
     * Getter for TargetCardGroupId.
     * @return Returns the Integer
     */
    @JsonGetter("TargetCardGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTargetCardGroupId() {
        return targetCardGroupId;
    }

    /**
     * Setter for TargetCardGroupId.
     * @param targetCardGroupId Value for Integer
     */
    @JsonSetter("TargetCardGroupId")
    public void setTargetCardGroupId(Integer targetCardGroupId) {
        this.targetCardGroupId = targetCardGroupId;
    }

    /**
     * Getter for TargetNewCardGroupName.
     * @return Returns the String
     */
    @JsonGetter("TargetNewCardGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTargetNewCardGroupName() {
        return targetNewCardGroupName;
    }

    /**
     * Setter for TargetNewCardGroupName.
     * @param targetNewCardGroupName Value for String
     */
    @JsonSetter("TargetNewCardGroupName")
    public void setTargetNewCardGroupName(String targetNewCardGroupName) {
        this.targetNewCardGroupName = targetNewCardGroupName;
    }

    /**
     * Converts this CardMoveRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardMoveRequest [" + "colCoCode=" + colCoCode + ", colCoId=" + colCoId
                + ", colCoCountryCode=" + colCoCountryCode + ", payerNumber=" + payerNumber
                + ", payerId=" + payerId + ", cards=" + cards + ", targetAccountId="
                + targetAccountId + ", targetAccountNumber=" + targetAccountNumber
                + ", targetCardGroupId=" + targetCardGroupId + ", targetNewCardGroupName="
                + targetNewCardGroupName + "]";
    }

    /**
     * Builds a new {@link CardMoveRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardMoveRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .cards(getCards())
                .targetAccountId(getTargetAccountId())
                .targetAccountNumber(getTargetAccountNumber())
                .targetCardGroupId(getTargetCardGroupId())
                .targetNewCardGroupName(getTargetNewCardGroupName());
        builder.colCoCode = internalGetColCoCode();
        builder.colCoId = internalGetColCoId();
        builder.colCoCountryCode = internalGetColCoCountryCode();
        builder.payerNumber = internalGetPayerNumber();
        builder.payerId = internalGetPayerId();
        return builder;
    }

    /**
     * Class to build instances of {@link CardMoveRequest}.
     */
    public static class Builder {
        private OptionalNullable<Integer> colCoCode;
        private OptionalNullable<Integer> colCoId;
        private OptionalNullable<String> colCoCountryCode;
        private OptionalNullable<String> payerNumber;
        private OptionalNullable<Integer> payerId;
        private List<CardMoveRequestCardsItems> cards;
        private Integer targetAccountId;
        private String targetAccountNumber;
        private Integer targetCardGroupId;
        private String targetNewCardGroupName;



        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = OptionalNullable.of(colCoCode);
            return this;
        }

        /**
         * UnSetter for colCoCode.
         * @return Builder
         */
        public Builder unsetColCoCode() {
            colCoCode = null;
            return this;
        }

        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = OptionalNullable.of(colCoId);
            return this;
        }

        /**
         * UnSetter for colCoId.
         * @return Builder
         */
        public Builder unsetColCoId() {
            colCoId = null;
            return this;
        }

        /**
         * Setter for colCoCountryCode.
         * @param  colCoCountryCode  String value for colCoCountryCode.
         * @return Builder
         */
        public Builder colCoCountryCode(String colCoCountryCode) {
            this.colCoCountryCode = OptionalNullable.of(colCoCountryCode);
            return this;
        }

        /**
         * UnSetter for colCoCountryCode.
         * @return Builder
         */
        public Builder unsetColCoCountryCode() {
            colCoCountryCode = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = OptionalNullable.of(payerNumber);
            return this;
        }

        /**
         * UnSetter for payerNumber.
         * @return Builder
         */
        public Builder unsetPayerNumber() {
            payerNumber = null;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for cards.
         * @param  cards  List of CardMoveRequestCardsItems value for cards.
         * @return Builder
         */
        public Builder cards(List<CardMoveRequestCardsItems> cards) {
            this.cards = cards;
            return this;
        }

        /**
         * Setter for targetAccountId.
         * @param  targetAccountId  Integer value for targetAccountId.
         * @return Builder
         */
        public Builder targetAccountId(Integer targetAccountId) {
            this.targetAccountId = targetAccountId;
            return this;
        }

        /**
         * Setter for targetAccountNumber.
         * @param  targetAccountNumber  String value for targetAccountNumber.
         * @return Builder
         */
        public Builder targetAccountNumber(String targetAccountNumber) {
            this.targetAccountNumber = targetAccountNumber;
            return this;
        }

        /**
         * Setter for targetCardGroupId.
         * @param  targetCardGroupId  Integer value for targetCardGroupId.
         * @return Builder
         */
        public Builder targetCardGroupId(Integer targetCardGroupId) {
            this.targetCardGroupId = targetCardGroupId;
            return this;
        }

        /**
         * Setter for targetNewCardGroupName.
         * @param  targetNewCardGroupName  String value for targetNewCardGroupName.
         * @return Builder
         */
        public Builder targetNewCardGroupName(String targetNewCardGroupName) {
            this.targetNewCardGroupName = targetNewCardGroupName;
            return this;
        }

        /**
         * Builds a new {@link CardMoveRequest} object using the set fields.
         * @return {@link CardMoveRequest}
         */
        public CardMoveRequest build() {
            return new CardMoveRequest(colCoCode, colCoId, colCoCountryCode, payerNumber, payerId,
                    cards, targetAccountId, targetAccountNumber, targetCardGroupId,
                    targetNewCardGroupName);
        }
    }
}
