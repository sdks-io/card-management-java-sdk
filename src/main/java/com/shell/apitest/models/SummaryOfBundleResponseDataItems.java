/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for SummaryOfBundleResponseDataItems type.
 */
public class SummaryOfBundleResponseDataItems {
    private OptionalNullable<Integer> payerId;
    private OptionalNullable<String> payerNumber;
    private OptionalNullable<Integer> accountId;
    private OptionalNullable<String> accountNumber;
    private OptionalNullable<Integer> countOfCardsNotInBundle;
    private List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles;

    /**
     * Default constructor.
     */
    public SummaryOfBundleResponseDataItems() {
    }

    /**
     * Initialization constructor.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  countOfCardsNotInBundle  Integer value for countOfCardsNotInBundle.
     * @param  cardBundles  List of SummaryOfBundleResponseDataItemsCardBundlesItems value for
     *         cardBundles.
     */
    public SummaryOfBundleResponseDataItems(
            Integer payerId,
            String payerNumber,
            Integer accountId,
            String accountNumber,
            Integer countOfCardsNotInBundle,
            List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles) {
        this.payerId = OptionalNullable.of(payerId);
        this.payerNumber = OptionalNullable.of(payerNumber);
        this.accountId = OptionalNullable.of(accountId);
        this.accountNumber = OptionalNullable.of(accountNumber);
        this.countOfCardsNotInBundle = OptionalNullable.of(countOfCardsNotInBundle);
        this.cardBundles = cardBundles;
    }

    /**
     * Initialization constructor.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  countOfCardsNotInBundle  Integer value for countOfCardsNotInBundle.
     * @param  cardBundles  List of SummaryOfBundleResponseDataItemsCardBundlesItems value for
     *         cardBundles.
     */

    protected SummaryOfBundleResponseDataItems(OptionalNullable<Integer> payerId,
            OptionalNullable<String> payerNumber, OptionalNullable<Integer> accountId,
            OptionalNullable<String> accountNumber,
            OptionalNullable<Integer> countOfCardsNotInBundle,
            List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles) {
        this.payerId = payerId;
        this.payerNumber = payerNumber;
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.countOfCardsNotInBundle = countOfCardsNotInBundle;
        this.cardBundles = cardBundles;
    }

    /**
     * Internal Getter for PayerId.
     * Payer Id of the bundles and cards. Example: 123456
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * Payer Id of the bundles and cards. Example: 123456
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * Payer Id of the bundles and cards. Example: 123456
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     * Payer Id of the bundles and cards. Example: 123456
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Internal Getter for PayerNumber.
     * Payer Number of the bundles and cards. Example: GB000000123
     * @return Returns the Internal String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerNumber() {
        return this.payerNumber;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number of the bundles and cards. Example: GB000000123
     * @return Returns the String
     */
    public String getPayerNumber() {
        return OptionalNullable.getFrom(payerNumber);
    }

    /**
     * Setter for PayerNumber.
     * Payer Number of the bundles and cards. Example: GB000000123
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = OptionalNullable.of(payerNumber);
    }

    /**
     * UnSetter for PayerNumber.
     * Payer Number of the bundles and cards. Example: GB000000123
     */
    public void unsetPayerNumber() {
        payerNumber = null;
    }

    /**
     * Internal Getter for AccountId.
     * Account ID of the bundle. Example: 123456
     * @return Returns the Internal Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAccountId() {
        return this.accountId;
    }

    /**
     * Getter for AccountId.
     * Account ID of the bundle. Example: 123456
     * @return Returns the Integer
     */
    public Integer getAccountId() {
        return OptionalNullable.getFrom(accountId);
    }

    /**
     * Setter for AccountId.
     * Account ID of the bundle. Example: 123456
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = OptionalNullable.of(accountId);
    }

    /**
     * UnSetter for AccountId.
     * Account ID of the bundle. Example: 123456
     */
    public void unsetAccountId() {
        accountId = null;
    }

    /**
     * Internal Getter for AccountNumber.
     * Account Number of the bundle. Example: GB000000123
     * @return Returns the Internal String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountNumber() {
        return this.accountNumber;
    }

    /**
     * Getter for AccountNumber.
     * Account Number of the bundle. Example: GB000000123
     * @return Returns the String
     */
    public String getAccountNumber() {
        return OptionalNullable.getFrom(accountNumber);
    }

    /**
     * Setter for AccountNumber.
     * Account Number of the bundle. Example: GB000000123
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = OptionalNullable.of(accountNumber);
    }

    /**
     * UnSetter for AccountNumber.
     * Account Number of the bundle. Example: GB000000123
     */
    public void unsetAccountNumber() {
        accountNumber = null;
    }

    /**
     * Internal Getter for CountOfCardsNotInBundle.
     * Count of cards that are not part of the bundle in a given account.
     * @return Returns the Internal Integer
     */
    @JsonGetter("CountOfCardsNotInBundle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCountOfCardsNotInBundle() {
        return this.countOfCardsNotInBundle;
    }

    /**
     * Getter for CountOfCardsNotInBundle.
     * Count of cards that are not part of the bundle in a given account.
     * @return Returns the Integer
     */
    public Integer getCountOfCardsNotInBundle() {
        return OptionalNullable.getFrom(countOfCardsNotInBundle);
    }

    /**
     * Setter for CountOfCardsNotInBundle.
     * Count of cards that are not part of the bundle in a given account.
     * @param countOfCardsNotInBundle Value for Integer
     */
    @JsonSetter("CountOfCardsNotInBundle")
    public void setCountOfCardsNotInBundle(Integer countOfCardsNotInBundle) {
        this.countOfCardsNotInBundle = OptionalNullable.of(countOfCardsNotInBundle);
    }

    /**
     * UnSetter for CountOfCardsNotInBundle.
     * Count of cards that are not part of the bundle in a given account.
     */
    public void unsetCountOfCardsNotInBundle() {
        countOfCardsNotInBundle = null;
    }

    /**
     * Getter for CardBundles.
     * List of Card Bundles
     * @return Returns the List of SummaryOfBundleResponseDataItemsCardBundlesItems
     */
    @JsonGetter("CardBundles")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SummaryOfBundleResponseDataItemsCardBundlesItems> getCardBundles() {
        return cardBundles;
    }

    /**
     * Setter for CardBundles.
     * List of Card Bundles
     * @param cardBundles Value for List of SummaryOfBundleResponseDataItemsCardBundlesItems
     */
    @JsonSetter("CardBundles")
    public void setCardBundles(List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles) {
        this.cardBundles = cardBundles;
    }

    /**
     * Converts this SummaryOfBundleResponseDataItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SummaryOfBundleResponseDataItems [" + "payerId=" + payerId + ", payerNumber="
                + payerNumber + ", accountId=" + accountId + ", accountNumber=" + accountNumber
                + ", countOfCardsNotInBundle=" + countOfCardsNotInBundle + ", cardBundles="
                + cardBundles + "]";
    }

    /**
     * Builds a new {@link SummaryOfBundleResponseDataItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SummaryOfBundleResponseDataItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .cardBundles(getCardBundles());
        builder.payerId = internalGetPayerId();
        builder.payerNumber = internalGetPayerNumber();
        builder.accountId = internalGetAccountId();
        builder.accountNumber = internalGetAccountNumber();
        builder.countOfCardsNotInBundle = internalGetCountOfCardsNotInBundle();
        return builder;
    }

    /**
     * Class to build instances of {@link SummaryOfBundleResponseDataItems}.
     */
    public static class Builder {
        private OptionalNullable<Integer> payerId;
        private OptionalNullable<String> payerNumber;
        private OptionalNullable<Integer> accountId;
        private OptionalNullable<String> accountNumber;
        private OptionalNullable<Integer> countOfCardsNotInBundle;
        private List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles;



        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = OptionalNullable.of(payerNumber);
            return this;
        }

        /**
         * UnSetter for payerNumber.
         * @return Builder
         */
        public Builder unsetPayerNumber() {
            payerNumber = null;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = OptionalNullable.of(accountId);
            return this;
        }

        /**
         * UnSetter for accountId.
         * @return Builder
         */
        public Builder unsetAccountId() {
            accountId = null;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = OptionalNullable.of(accountNumber);
            return this;
        }

        /**
         * UnSetter for accountNumber.
         * @return Builder
         */
        public Builder unsetAccountNumber() {
            accountNumber = null;
            return this;
        }

        /**
         * Setter for countOfCardsNotInBundle.
         * @param  countOfCardsNotInBundle  Integer value for countOfCardsNotInBundle.
         * @return Builder
         */
        public Builder countOfCardsNotInBundle(Integer countOfCardsNotInBundle) {
            this.countOfCardsNotInBundle = OptionalNullable.of(countOfCardsNotInBundle);
            return this;
        }

        /**
         * UnSetter for countOfCardsNotInBundle.
         * @return Builder
         */
        public Builder unsetCountOfCardsNotInBundle() {
            countOfCardsNotInBundle = null;
            return this;
        }

        /**
         * Setter for cardBundles.
         * @param  cardBundles  List of SummaryOfBundleResponseDataItemsCardBundlesItems value for
         *         cardBundles.
         * @return Builder
         */
        public Builder cardBundles(
                List<SummaryOfBundleResponseDataItemsCardBundlesItems> cardBundles) {
            this.cardBundles = cardBundles;
            return this;
        }

        /**
         * Builds a new {@link SummaryOfBundleResponseDataItems} object using the set fields.
         * @return {@link SummaryOfBundleResponseDataItems}
         */
        public SummaryOfBundleResponseDataItems build() {
            return new SummaryOfBundleResponseDataItems(payerId, payerNumber, accountId,
                    accountNumber, countOfCardsNotInBundle, cardBundles);
        }
    }
}
