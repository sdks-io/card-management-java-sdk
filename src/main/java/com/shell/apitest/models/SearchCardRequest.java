/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for SearchCardRequest type.
 */
public class SearchCardRequest {
    private SearchRequest filters;
    private String pageSize;
    private String page;

    /**
     * Default constructor.
     */
    public SearchCardRequest() {
    }

    /**
     * Initialization constructor.
     * @param  filters  SearchRequest value for filters.
     * @param  pageSize  String value for pageSize.
     * @param  page  String value for page.
     */
    public SearchCardRequest(
            SearchRequest filters,
            String pageSize,
            String page) {
        this.filters = filters;
        this.pageSize = pageSize;
        this.page = page;
    }

    /**
     * Getter for Filters.
     * Encapsulate the Search details request.
     * @return Returns the SearchRequest
     */
    @JsonGetter("Filters")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SearchRequest getFilters() {
        return filters;
    }

    /**
     * Setter for Filters.
     * Encapsulate the Search details request.
     * @param filters Value for SearchRequest
     */
    @JsonSetter("Filters")
    public void setFilters(SearchRequest filters) {
        this.filters = filters;
    }

    /**
     * Getter for PageSize.
     * Page Size – Number of records to show on a page Optional Default value 50
     * @return Returns the String
     */
    @JsonGetter("PageSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPageSize() {
        return pageSize;
    }

    /**
     * Setter for PageSize.
     * Page Size – Number of records to show on a page Optional Default value 50
     * @param pageSize Value for String
     */
    @JsonSetter("PageSize")
    public void setPageSize(String pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * Getter for Page.
     * Page Number
     * @return Returns the String
     */
    @JsonGetter("Page")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPage() {
        return page;
    }

    /**
     * Setter for Page.
     * Page Number
     * @param page Value for String
     */
    @JsonSetter("Page")
    public void setPage(String page) {
        this.page = page;
    }

    /**
     * Converts this SearchCardRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SearchCardRequest [" + "filters=" + filters + ", pageSize=" + pageSize + ", page="
                + page + "]";
    }

    /**
     * Builds a new {@link SearchCardRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SearchCardRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .filters(getFilters())
                .pageSize(getPageSize())
                .page(getPage());
        return builder;
    }

    /**
     * Class to build instances of {@link SearchCardRequest}.
     */
    public static class Builder {
        private SearchRequest filters;
        private String pageSize;
        private String page;



        /**
         * Setter for filters.
         * @param  filters  SearchRequest value for filters.
         * @return Builder
         */
        public Builder filters(SearchRequest filters) {
            this.filters = filters;
            return this;
        }

        /**
         * Setter for pageSize.
         * @param  pageSize  String value for pageSize.
         * @return Builder
         */
        public Builder pageSize(String pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        /**
         * Setter for page.
         * @param  page  String value for page.
         * @return Builder
         */
        public Builder page(String page) {
            this.page = page;
            return this;
        }

        /**
         * Builds a new {@link SearchCardRequest} object using the set fields.
         * @return {@link SearchCardRequest}
         */
        public SearchCardRequest build() {
            return new SearchCardRequest(filters, pageSize, page);
        }
    }
}
