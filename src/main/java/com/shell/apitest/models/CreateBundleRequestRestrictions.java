/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CreateBundleRequestRestrictions type.
 */
public class CreateBundleRequestRestrictions {
    private String usageRestrictionAction;
    private String dayTimeRestrictionAction;
    private String locationRestrictionAction;
    private DayTimeRestrictions dayTimeRestrictions;
    private LocationRestrictions locationRestrictions;
    private ProductRestrictions productRestrictions;
    private UsageRestrictions usageRestrictions;

    /**
     * Default constructor.
     */
    public CreateBundleRequestRestrictions() {
    }

    /**
     * Initialization constructor.
     * @param  usageRestrictionAction  String value for usageRestrictionAction.
     * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
     * @param  locationRestrictionAction  String value for locationRestrictionAction.
     * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
     * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
     * @param  productRestrictions  ProductRestrictions value for productRestrictions.
     * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
     */
    public CreateBundleRequestRestrictions(
            String usageRestrictionAction,
            String dayTimeRestrictionAction,
            String locationRestrictionAction,
            DayTimeRestrictions dayTimeRestrictions,
            LocationRestrictions locationRestrictions,
            ProductRestrictions productRestrictions,
            UsageRestrictions usageRestrictions) {
        this.usageRestrictionAction = usageRestrictionAction;
        this.dayTimeRestrictionAction = dayTimeRestrictionAction;
        this.locationRestrictionAction = locationRestrictionAction;
        this.dayTimeRestrictions = dayTimeRestrictions;
        this.locationRestrictions = locationRestrictions;
        this.productRestrictions = productRestrictions;
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Getter for UsageRestrictionAction.
     * Usage restrictions such as value, volume and transaction count restricted per day, week,
     * month, annum, lifetime and transaction to be applied on the bundle. Mandatory
     * @return Returns the String
     */
    @JsonGetter("UsageRestrictionAction")
    public String getUsageRestrictionAction() {
        return usageRestrictionAction;
    }

    /**
     * Setter for UsageRestrictionAction.
     * Usage restrictions such as value, volume and transaction count restricted per day, week,
     * month, annum, lifetime and transaction to be applied on the bundle. Mandatory
     * @param usageRestrictionAction Value for String
     */
    @JsonSetter("UsageRestrictionAction")
    public void setUsageRestrictionAction(String usageRestrictionAction) {
        this.usageRestrictionAction = usageRestrictionAction;
    }

    /**
     * Getter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     * @return Returns the String
     */
    @JsonGetter("DayTimeRestrictionAction")
    public String getDayTimeRestrictionAction() {
        return dayTimeRestrictionAction;
    }

    /**
     * Setter for DayTimeRestrictionAction.
     * The value indicates what actions to be performed with respect to day time restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * Day/Time restriction will be applied on the bundle in Gateway.
     * @param dayTimeRestrictionAction Value for String
     */
    @JsonSetter("DayTimeRestrictionAction")
    public void setDayTimeRestrictionAction(String dayTimeRestrictionAction) {
        this.dayTimeRestrictionAction = dayTimeRestrictionAction;
    }

    /**
     * Getter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     * @return Returns the String
     */
    @JsonGetter("LocationRestrictionAction")
    public String getLocationRestrictionAction() {
        return locationRestrictionAction;
    }

    /**
     * Setter for LocationRestrictionAction.
     * The value indicates what actions to be performed with respect to location restriction.
     * Mandatory Allowed values – •	Add: Apply the given restriction on the bundle. •	Default: No
     * location restriction will be applied on the bundle in Gateway.
     * @param locationRestrictionAction Value for String
     */
    @JsonSetter("LocationRestrictionAction")
    public void setLocationRestrictionAction(String locationRestrictionAction) {
        this.locationRestrictionAction = locationRestrictionAction;
    }

    /**
     * Getter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @return Returns the DayTimeRestrictions
     */
    @JsonGetter("DayTimeRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DayTimeRestrictions getDayTimeRestrictions() {
        return dayTimeRestrictions;
    }

    /**
     * Setter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @param dayTimeRestrictions Value for DayTimeRestrictions
     */
    @JsonSetter("DayTimeRestrictions")
    public void setDayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
        this.dayTimeRestrictions = dayTimeRestrictions;
    }

    /**
     * Getter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @return Returns the LocationRestrictions
     */
    @JsonGetter("LocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationRestrictions getLocationRestrictions() {
        return locationRestrictions;
    }

    /**
     * Setter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @param locationRestrictions Value for LocationRestrictions
     */
    @JsonSetter("LocationRestrictions")
    public void setLocationRestrictions(LocationRestrictions locationRestrictions) {
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Getter for ProductRestrictions.
     * @return Returns the ProductRestrictions
     */
    @JsonGetter("ProductRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProductRestrictions getProductRestrictions() {
        return productRestrictions;
    }

    /**
     * Setter for ProductRestrictions.
     * @param productRestrictions Value for ProductRestrictions
     */
    @JsonSetter("ProductRestrictions")
    public void setProductRestrictions(ProductRestrictions productRestrictions) {
        this.productRestrictions = productRestrictions;
    }

    /**
     * Getter for UsageRestrictions.
     * @return Returns the UsageRestrictions
     */
    @JsonGetter("UsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageRestrictions getUsageRestrictions() {
        return usageRestrictions;
    }

    /**
     * Setter for UsageRestrictions.
     * @param usageRestrictions Value for UsageRestrictions
     */
    @JsonSetter("UsageRestrictions")
    public void setUsageRestrictions(UsageRestrictions usageRestrictions) {
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Converts this CreateBundleRequestRestrictions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateBundleRequestRestrictions [" + "usageRestrictionAction="
                + usageRestrictionAction + ", dayTimeRestrictionAction=" + dayTimeRestrictionAction
                + ", locationRestrictionAction=" + locationRestrictionAction
                + ", dayTimeRestrictions=" + dayTimeRestrictions + ", locationRestrictions="
                + locationRestrictions + ", productRestrictions=" + productRestrictions
                + ", usageRestrictions=" + usageRestrictions + "]";
    }

    /**
     * Builds a new {@link CreateBundleRequestRestrictions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateBundleRequestRestrictions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(usageRestrictionAction, dayTimeRestrictionAction,
                locationRestrictionAction)
                .dayTimeRestrictions(getDayTimeRestrictions())
                .locationRestrictions(getLocationRestrictions())
                .productRestrictions(getProductRestrictions())
                .usageRestrictions(getUsageRestrictions());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateBundleRequestRestrictions}.
     */
    public static class Builder {
        private String usageRestrictionAction;
        private String dayTimeRestrictionAction;
        private String locationRestrictionAction;
        private DayTimeRestrictions dayTimeRestrictions;
        private LocationRestrictions locationRestrictions;
        private ProductRestrictions productRestrictions;
        private UsageRestrictions usageRestrictions;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  usageRestrictionAction  String value for usageRestrictionAction.
         * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
         * @param  locationRestrictionAction  String value for locationRestrictionAction.
         */
        public Builder(String usageRestrictionAction, String dayTimeRestrictionAction,
                String locationRestrictionAction) {
            this.usageRestrictionAction = usageRestrictionAction;
            this.dayTimeRestrictionAction = dayTimeRestrictionAction;
            this.locationRestrictionAction = locationRestrictionAction;
        }

        /**
         * Setter for usageRestrictionAction.
         * @param  usageRestrictionAction  String value for usageRestrictionAction.
         * @return Builder
         */
        public Builder usageRestrictionAction(String usageRestrictionAction) {
            this.usageRestrictionAction = usageRestrictionAction;
            return this;
        }

        /**
         * Setter for dayTimeRestrictionAction.
         * @param  dayTimeRestrictionAction  String value for dayTimeRestrictionAction.
         * @return Builder
         */
        public Builder dayTimeRestrictionAction(String dayTimeRestrictionAction) {
            this.dayTimeRestrictionAction = dayTimeRestrictionAction;
            return this;
        }

        /**
         * Setter for locationRestrictionAction.
         * @param  locationRestrictionAction  String value for locationRestrictionAction.
         * @return Builder
         */
        public Builder locationRestrictionAction(String locationRestrictionAction) {
            this.locationRestrictionAction = locationRestrictionAction;
            return this;
        }

        /**
         * Setter for dayTimeRestrictions.
         * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
         * @return Builder
         */
        public Builder dayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
            this.dayTimeRestrictions = dayTimeRestrictions;
            return this;
        }

        /**
         * Setter for locationRestrictions.
         * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
         * @return Builder
         */
        public Builder locationRestrictions(LocationRestrictions locationRestrictions) {
            this.locationRestrictions = locationRestrictions;
            return this;
        }

        /**
         * Setter for productRestrictions.
         * @param  productRestrictions  ProductRestrictions value for productRestrictions.
         * @return Builder
         */
        public Builder productRestrictions(ProductRestrictions productRestrictions) {
            this.productRestrictions = productRestrictions;
            return this;
        }

        /**
         * Setter for usageRestrictions.
         * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
         * @return Builder
         */
        public Builder usageRestrictions(UsageRestrictions usageRestrictions) {
            this.usageRestrictions = usageRestrictions;
            return this;
        }

        /**
         * Builds a new {@link CreateBundleRequestRestrictions} object using the set fields.
         * @return {@link CreateBundleRequestRestrictions}
         */
        public CreateBundleRequestRestrictions build() {
            return new CreateBundleRequestRestrictions(usageRestrictionAction,
                    dayTimeRestrictionAction, locationRestrictionAction, dayTimeRestrictions,
                    locationRestrictions, productRestrictions, usageRestrictions);
        }
    }
}
