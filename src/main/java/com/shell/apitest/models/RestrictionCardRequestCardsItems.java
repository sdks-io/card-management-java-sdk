/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RestrictionCardRequestCardsItems type.
 */
public class RestrictionCardRequestCardsItems {
    private String accountNumber;
    private Integer accountId;
    private String pAN;
    private Integer cardId;
    private Boolean resetUsageRestrictions;
    private Boolean resetDayTimeRestrictions;
    private Boolean resetProductRestrictions;
    private Boolean resetLocationRestrictions;
    private DayTimeRestrictions dayTimeRestrictions;
    private LocationRestrictions locationRestrictions;
    private ProductRestrictions productRestrictions;
    private UsageRestrictions usageRestrictions;

    /**
     * Default constructor.
     */
    public RestrictionCardRequestCardsItems() {
    }

    /**
     * Initialization constructor.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountId  Integer value for accountId.
     * @param  pAN  String value for pAN.
     * @param  cardId  Integer value for cardId.
     * @param  resetUsageRestrictions  Boolean value for resetUsageRestrictions.
     * @param  resetDayTimeRestrictions  Boolean value for resetDayTimeRestrictions.
     * @param  resetProductRestrictions  Boolean value for resetProductRestrictions.
     * @param  resetLocationRestrictions  Boolean value for resetLocationRestrictions.
     * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
     * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
     * @param  productRestrictions  ProductRestrictions value for productRestrictions.
     * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
     */
    public RestrictionCardRequestCardsItems(
            String accountNumber,
            Integer accountId,
            String pAN,
            Integer cardId,
            Boolean resetUsageRestrictions,
            Boolean resetDayTimeRestrictions,
            Boolean resetProductRestrictions,
            Boolean resetLocationRestrictions,
            DayTimeRestrictions dayTimeRestrictions,
            LocationRestrictions locationRestrictions,
            ProductRestrictions productRestrictions,
            UsageRestrictions usageRestrictions) {
        this.accountNumber = accountNumber;
        this.accountId = accountId;
        this.pAN = pAN;
        this.cardId = cardId;
        this.resetUsageRestrictions = resetUsageRestrictions;
        this.resetDayTimeRestrictions = resetDayTimeRestrictions;
        this.resetProductRestrictions = resetProductRestrictions;
        this.resetLocationRestrictions = resetLocationRestrictions;
        this.dayTimeRestrictions = dayTimeRestrictions;
        this.locationRestrictions = locationRestrictions;
        this.productRestrictions = productRestrictions;
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Getter for AccountNumber.
     * Account Number of the customer. Optional if AccountId is passed, else Mandatory. This input
     * is a search criterion, if given. Example: GB000000123
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account Number of the customer. Optional if AccountId is passed, else Mandatory. This input
     * is a search criterion, if given. Example: GB000000123
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountId.
     * Account ID of the customer. Optional if AccountNumber is passed, else Mandatory. This input
     * is a search criterion, if given. Example: 123456
     * @return Returns the Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * Account ID of the customer. Optional if AccountNumber is passed, else Mandatory. This input
     * is a search criterion, if given. Example: 123456
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for PAN.
     * Card PAN. Optional if CardId is given, else mandatory. Example: 7002051006629890645 Note:
     * •	PAN is ignored if CardId is given. When PAN matches with multiple cards, the restriction
     * will be applied on the latest issued card.
     * @return Returns the String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPAN() {
        return pAN;
    }

    /**
     * Setter for PAN.
     * Card PAN. Optional if CardId is given, else mandatory. Example: 7002051006629890645 Note:
     * •	PAN is ignored if CardId is given. When PAN matches with multiple cards, the restriction
     * will be applied on the latest issued card.
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = pAN;
    }

    /**
     * Getter for CardId.
     * Unique Card Id Optional if PAN is given, else mandatory. Example: 275549
     * @return Returns the Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCardId() {
        return cardId;
    }

    /**
     * Setter for CardId.
     * Unique Card Id Optional if PAN is given, else mandatory. Example: 275549
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = cardId;
    }

    /**
     * Getter for ResetUsageRestrictions.
     * True/False. If true, the usage restrictions applied on the card in Gateway will be reset to
     * Customer Card Type level max limits, if there are no customer level overrides available then
     * OU card type max limits. Else, the card restrictions will be updated with the usage
     * restrictions provided in the API.
     * @return Returns the Boolean
     */
    @JsonGetter("ResetUsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getResetUsageRestrictions() {
        return resetUsageRestrictions;
    }

    /**
     * Setter for ResetUsageRestrictions.
     * True/False. If true, the usage restrictions applied on the card in Gateway will be reset to
     * Customer Card Type level max limits, if there are no customer level overrides available then
     * OU card type max limits. Else, the card restrictions will be updated with the usage
     * restrictions provided in the API.
     * @param resetUsageRestrictions Value for Boolean
     */
    @JsonSetter("ResetUsageRestrictions")
    public void setResetUsageRestrictions(Boolean resetUsageRestrictions) {
        this.resetUsageRestrictions = resetUsageRestrictions;
    }

    /**
     * Getter for ResetDayTimeRestrictions.
     * True/False. If true, the Day/Time restrictions applied on the card will be deleted. Else, the
     * card restrictions will be updated with the day/time restrictions provided in the API.
     * @return Returns the Boolean
     */
    @JsonGetter("ResetDayTimeRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getResetDayTimeRestrictions() {
        return resetDayTimeRestrictions;
    }

    /**
     * Setter for ResetDayTimeRestrictions.
     * True/False. If true, the Day/Time restrictions applied on the card will be deleted. Else, the
     * card restrictions will be updated with the day/time restrictions provided in the API.
     * @param resetDayTimeRestrictions Value for Boolean
     */
    @JsonSetter("ResetDayTimeRestrictions")
    public void setResetDayTimeRestrictions(Boolean resetDayTimeRestrictions) {
        this.resetDayTimeRestrictions = resetDayTimeRestrictions;
    }

    /**
     * Getter for ResetProductRestrictions.
     * True/False. If true, Default fuel/non-fuel sets configured at the purchase category level
     * will be applied to the card. Else, the card will be applied with product restrictions
     * provided in the API.
     * @return Returns the Boolean
     */
    @JsonGetter("ResetProductRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getResetProductRestrictions() {
        return resetProductRestrictions;
    }

    /**
     * Setter for ResetProductRestrictions.
     * True/False. If true, Default fuel/non-fuel sets configured at the purchase category level
     * will be applied to the card. Else, the card will be applied with product restrictions
     * provided in the API.
     * @param resetProductRestrictions Value for Boolean
     */
    @JsonSetter("ResetProductRestrictions")
    public void setResetProductRestrictions(Boolean resetProductRestrictions) {
        this.resetProductRestrictions = resetProductRestrictions;
    }

    /**
     * Getter for ResetLocationRestrictions.
     * True/False. If true, the location restrictions applied on the card will be deleted. Else, the
     * card restrictions will be updated with the location restrictions provided in the API.
     * @return Returns the Boolean
     */
    @JsonGetter("ResetLocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getResetLocationRestrictions() {
        return resetLocationRestrictions;
    }

    /**
     * Setter for ResetLocationRestrictions.
     * True/False. If true, the location restrictions applied on the card will be deleted. Else, the
     * card restrictions will be updated with the location restrictions provided in the API.
     * @param resetLocationRestrictions Value for Boolean
     */
    @JsonSetter("ResetLocationRestrictions")
    public void setResetLocationRestrictions(Boolean resetLocationRestrictions) {
        this.resetLocationRestrictions = resetLocationRestrictions;
    }

    /**
     * Getter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @return Returns the DayTimeRestrictions
     */
    @JsonGetter("DayTimeRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DayTimeRestrictions getDayTimeRestrictions() {
        return dayTimeRestrictions;
    }

    /**
     * Setter for DayTimeRestrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle. Mandatory
     * if respective action is set as “Add”. The details of DayTimeRestriction entity is given
     * below.
     * @param dayTimeRestrictions Value for DayTimeRestrictions
     */
    @JsonSetter("DayTimeRestrictions")
    public void setDayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
        this.dayTimeRestrictions = dayTimeRestrictions;
    }

    /**
     * Getter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @return Returns the LocationRestrictions
     */
    @JsonGetter("LocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationRestrictions getLocationRestrictions() {
        return locationRestrictions;
    }

    /**
     * Setter for LocationRestrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the
     * cards, which are under the bundle, in the specified locations. Mandatory if respective action
     * is set as “Add”. Details of location restrictions are given below.
     * @param locationRestrictions Value for LocationRestrictions
     */
    @JsonSetter("LocationRestrictions")
    public void setLocationRestrictions(LocationRestrictions locationRestrictions) {
        this.locationRestrictions = locationRestrictions;
    }

    /**
     * Getter for ProductRestrictions.
     * @return Returns the ProductRestrictions
     */
    @JsonGetter("ProductRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProductRestrictions getProductRestrictions() {
        return productRestrictions;
    }

    /**
     * Setter for ProductRestrictions.
     * @param productRestrictions Value for ProductRestrictions
     */
    @JsonSetter("ProductRestrictions")
    public void setProductRestrictions(ProductRestrictions productRestrictions) {
        this.productRestrictions = productRestrictions;
    }

    /**
     * Getter for UsageRestrictions.
     * @return Returns the UsageRestrictions
     */
    @JsonGetter("UsageRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageRestrictions getUsageRestrictions() {
        return usageRestrictions;
    }

    /**
     * Setter for UsageRestrictions.
     * @param usageRestrictions Value for UsageRestrictions
     */
    @JsonSetter("UsageRestrictions")
    public void setUsageRestrictions(UsageRestrictions usageRestrictions) {
        this.usageRestrictions = usageRestrictions;
    }

    /**
     * Converts this RestrictionCardRequestCardsItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RestrictionCardRequestCardsItems [" + "accountNumber=" + accountNumber
                + ", accountId=" + accountId + ", pAN=" + pAN + ", cardId=" + cardId
                + ", resetUsageRestrictions=" + resetUsageRestrictions
                + ", resetDayTimeRestrictions=" + resetDayTimeRestrictions
                + ", resetProductRestrictions=" + resetProductRestrictions
                + ", resetLocationRestrictions=" + resetLocationRestrictions
                + ", dayTimeRestrictions=" + dayTimeRestrictions + ", locationRestrictions="
                + locationRestrictions + ", productRestrictions=" + productRestrictions
                + ", usageRestrictions=" + usageRestrictions + "]";
    }

    /**
     * Builds a new {@link RestrictionCardRequestCardsItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RestrictionCardRequestCardsItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountNumber(getAccountNumber())
                .accountId(getAccountId())
                .pAN(getPAN())
                .cardId(getCardId())
                .resetUsageRestrictions(getResetUsageRestrictions())
                .resetDayTimeRestrictions(getResetDayTimeRestrictions())
                .resetProductRestrictions(getResetProductRestrictions())
                .resetLocationRestrictions(getResetLocationRestrictions())
                .dayTimeRestrictions(getDayTimeRestrictions())
                .locationRestrictions(getLocationRestrictions())
                .productRestrictions(getProductRestrictions())
                .usageRestrictions(getUsageRestrictions());
        return builder;
    }

    /**
     * Class to build instances of {@link RestrictionCardRequestCardsItems}.
     */
    public static class Builder {
        private String accountNumber;
        private Integer accountId;
        private String pAN;
        private Integer cardId;
        private Boolean resetUsageRestrictions;
        private Boolean resetDayTimeRestrictions;
        private Boolean resetProductRestrictions;
        private Boolean resetLocationRestrictions;
        private DayTimeRestrictions dayTimeRestrictions;
        private LocationRestrictions locationRestrictions;
        private ProductRestrictions productRestrictions;
        private UsageRestrictions usageRestrictions;



        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = pAN;
            return this;
        }

        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = cardId;
            return this;
        }

        /**
         * Setter for resetUsageRestrictions.
         * @param  resetUsageRestrictions  Boolean value for resetUsageRestrictions.
         * @return Builder
         */
        public Builder resetUsageRestrictions(Boolean resetUsageRestrictions) {
            this.resetUsageRestrictions = resetUsageRestrictions;
            return this;
        }

        /**
         * Setter for resetDayTimeRestrictions.
         * @param  resetDayTimeRestrictions  Boolean value for resetDayTimeRestrictions.
         * @return Builder
         */
        public Builder resetDayTimeRestrictions(Boolean resetDayTimeRestrictions) {
            this.resetDayTimeRestrictions = resetDayTimeRestrictions;
            return this;
        }

        /**
         * Setter for resetProductRestrictions.
         * @param  resetProductRestrictions  Boolean value for resetProductRestrictions.
         * @return Builder
         */
        public Builder resetProductRestrictions(Boolean resetProductRestrictions) {
            this.resetProductRestrictions = resetProductRestrictions;
            return this;
        }

        /**
         * Setter for resetLocationRestrictions.
         * @param  resetLocationRestrictions  Boolean value for resetLocationRestrictions.
         * @return Builder
         */
        public Builder resetLocationRestrictions(Boolean resetLocationRestrictions) {
            this.resetLocationRestrictions = resetLocationRestrictions;
            return this;
        }

        /**
         * Setter for dayTimeRestrictions.
         * @param  dayTimeRestrictions  DayTimeRestrictions value for dayTimeRestrictions.
         * @return Builder
         */
        public Builder dayTimeRestrictions(DayTimeRestrictions dayTimeRestrictions) {
            this.dayTimeRestrictions = dayTimeRestrictions;
            return this;
        }

        /**
         * Setter for locationRestrictions.
         * @param  locationRestrictions  LocationRestrictions value for locationRestrictions.
         * @return Builder
         */
        public Builder locationRestrictions(LocationRestrictions locationRestrictions) {
            this.locationRestrictions = locationRestrictions;
            return this;
        }

        /**
         * Setter for productRestrictions.
         * @param  productRestrictions  ProductRestrictions value for productRestrictions.
         * @return Builder
         */
        public Builder productRestrictions(ProductRestrictions productRestrictions) {
            this.productRestrictions = productRestrictions;
            return this;
        }

        /**
         * Setter for usageRestrictions.
         * @param  usageRestrictions  UsageRestrictions value for usageRestrictions.
         * @return Builder
         */
        public Builder usageRestrictions(UsageRestrictions usageRestrictions) {
            this.usageRestrictions = usageRestrictions;
            return this;
        }

        /**
         * Builds a new {@link RestrictionCardRequestCardsItems} object using the set fields.
         * @return {@link RestrictionCardRequestCardsItems}
         */
        public RestrictionCardRequestCardsItems build() {
            return new RestrictionCardRequestCardsItems(accountNumber, accountId, pAN, cardId,
                    resetUsageRestrictions, resetDayTimeRestrictions, resetProductRestrictions,
                    resetLocationRestrictions, dayTimeRestrictions, locationRestrictions,
                    productRestrictions, usageRestrictions);
        }
    }
}
