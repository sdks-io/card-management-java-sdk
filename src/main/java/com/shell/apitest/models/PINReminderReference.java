/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for PINReminderReference type.
 */
public class PINReminderReference {
    private OptionalNullable<Integer> cardId;
    private OptionalNullable<Integer> pANID;
    private OptionalNullable<Integer> pAN;
    private OptionalNullable<String> cardExpiryDate;
    private Integer referenceId;

    /**
     * Default constructor.
     */
    public PINReminderReference() {
    }

    /**
     * Initialization constructor.
     * @param  cardId  Integer value for cardId.
     * @param  pANID  Integer value for pANID.
     * @param  pAN  Integer value for pAN.
     * @param  cardExpiryDate  String value for cardExpiryDate.
     * @param  referenceId  Integer value for referenceId.
     */
    public PINReminderReference(
            Integer cardId,
            Integer pANID,
            Integer pAN,
            String cardExpiryDate,
            Integer referenceId) {
        this.cardId = OptionalNullable.of(cardId);
        this.pANID = OptionalNullable.of(pANID);
        this.pAN = OptionalNullable.of(pAN);
        this.cardExpiryDate = OptionalNullable.of(cardExpiryDate);
        this.referenceId = referenceId;
    }

    /**
     * Initialization constructor.
     * @param  cardId  Integer value for cardId.
     * @param  pANID  Integer value for pANID.
     * @param  pAN  Integer value for pAN.
     * @param  cardExpiryDate  String value for cardExpiryDate.
     * @param  referenceId  Integer value for referenceId.
     */

    protected PINReminderReference(OptionalNullable<Integer> cardId,
            OptionalNullable<Integer> pANID, OptionalNullable<Integer> pAN,
            OptionalNullable<String> cardExpiryDate, Integer referenceId) {
        this.cardId = cardId;
        this.pANID = pANID;
        this.pAN = pAN;
        this.cardExpiryDate = cardExpiryDate;
        this.referenceId = referenceId;
    }

    /**
     * Internal Getter for CardId.
     * Card Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardId() {
        return this.cardId;
    }

    /**
     * Getter for CardId.
     * Card Id
     * @return Returns the Integer
     */
    public Integer getCardId() {
        return OptionalNullable.getFrom(cardId);
    }

    /**
     * Setter for CardId.
     * Card Id
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = OptionalNullable.of(cardId);
    }

    /**
     * UnSetter for CardId.
     * Card Id
     */
    public void unsetCardId() {
        cardId = null;
    }

    /**
     * Internal Getter for PANID.
     * PAN ID
     * @return Returns the Internal Integer
     */
    @JsonGetter("PANID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPANID() {
        return this.pANID;
    }

    /**
     * Getter for PANID.
     * PAN ID
     * @return Returns the Integer
     */
    public Integer getPANID() {
        return OptionalNullable.getFrom(pANID);
    }

    /**
     * Setter for PANID.
     * PAN ID
     * @param pANID Value for Integer
     */
    @JsonSetter("PANID")
    public void setPANID(Integer pANID) {
        this.pANID = OptionalNullable.of(pANID);
    }

    /**
     * UnSetter for PANID.
     * PAN ID
     */
    public void unsetPANID() {
        pANID = null;
    }

    /**
     * Internal Getter for PAN.
     * PAN
     * @return Returns the Internal Integer
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPAN() {
        return this.pAN;
    }

    /**
     * Getter for PAN.
     * PAN
     * @return Returns the Integer
     */
    public Integer getPAN() {
        return OptionalNullable.getFrom(pAN);
    }

    /**
     * Setter for PAN.
     * PAN
     * @param pAN Value for Integer
     */
    @JsonSetter("PAN")
    public void setPAN(Integer pAN) {
        this.pAN = OptionalNullable.of(pAN);
    }

    /**
     * UnSetter for PAN.
     * PAN
     */
    public void unsetPAN() {
        pAN = null;
    }

    /**
     * Internal Getter for CardExpiryDate.
     * Expiry date of the card. Mandatory if Either PAN or PANID is passed, else optional. Format:
     * yyyyMMdd
     * @return Returns the Internal String
     */
    @JsonGetter("CardExpiryDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCardExpiryDate() {
        return this.cardExpiryDate;
    }

    /**
     * Getter for CardExpiryDate.
     * Expiry date of the card. Mandatory if Either PAN or PANID is passed, else optional. Format:
     * yyyyMMdd
     * @return Returns the String
     */
    public String getCardExpiryDate() {
        return OptionalNullable.getFrom(cardExpiryDate);
    }

    /**
     * Setter for CardExpiryDate.
     * Expiry date of the card. Mandatory if Either PAN or PANID is passed, else optional. Format:
     * yyyyMMdd
     * @param cardExpiryDate Value for String
     */
    @JsonSetter("CardExpiryDate")
    public void setCardExpiryDate(String cardExpiryDate) {
        this.cardExpiryDate = OptionalNullable.of(cardExpiryDate);
    }

    /**
     * UnSetter for CardExpiryDate.
     * Expiry date of the card. Mandatory if Either PAN or PANID is passed, else optional. Format:
     * yyyyMMdd
     */
    public void unsetCardExpiryDate() {
        cardExpiryDate = null;
    }

    /**
     * Getter for ReferenceId.
     * Individual card pin reminder reference number for the Pin Reminder request.
     * @return Returns the Integer
     */
    @JsonGetter("ReferenceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReferenceId() {
        return referenceId;
    }

    /**
     * Setter for ReferenceId.
     * Individual card pin reminder reference number for the Pin Reminder request.
     * @param referenceId Value for Integer
     */
    @JsonSetter("ReferenceId")
    public void setReferenceId(Integer referenceId) {
        this.referenceId = referenceId;
    }

    /**
     * Converts this PINReminderReference into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PINReminderReference [" + "cardId=" + cardId + ", pANID=" + pANID + ", pAN=" + pAN
                + ", cardExpiryDate=" + cardExpiryDate + ", referenceId=" + referenceId + "]";
    }

    /**
     * Builds a new {@link PINReminderReference.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PINReminderReference.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .referenceId(getReferenceId());
        builder.cardId = internalGetCardId();
        builder.pANID = internalGetPANID();
        builder.pAN = internalGetPAN();
        builder.cardExpiryDate = internalGetCardExpiryDate();
        return builder;
    }

    /**
     * Class to build instances of {@link PINReminderReference}.
     */
    public static class Builder {
        private OptionalNullable<Integer> cardId;
        private OptionalNullable<Integer> pANID;
        private OptionalNullable<Integer> pAN;
        private OptionalNullable<String> cardExpiryDate;
        private Integer referenceId;



        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = OptionalNullable.of(cardId);
            return this;
        }

        /**
         * UnSetter for cardId.
         * @return Builder
         */
        public Builder unsetCardId() {
            cardId = null;
            return this;
        }

        /**
         * Setter for pANID.
         * @param  pANID  Integer value for pANID.
         * @return Builder
         */
        public Builder pANID(Integer pANID) {
            this.pANID = OptionalNullable.of(pANID);
            return this;
        }

        /**
         * UnSetter for pANID.
         * @return Builder
         */
        public Builder unsetPANID() {
            pANID = null;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  Integer value for pAN.
         * @return Builder
         */
        public Builder pAN(Integer pAN) {
            this.pAN = OptionalNullable.of(pAN);
            return this;
        }

        /**
         * UnSetter for pAN.
         * @return Builder
         */
        public Builder unsetPAN() {
            pAN = null;
            return this;
        }

        /**
         * Setter for cardExpiryDate.
         * @param  cardExpiryDate  String value for cardExpiryDate.
         * @return Builder
         */
        public Builder cardExpiryDate(String cardExpiryDate) {
            this.cardExpiryDate = OptionalNullable.of(cardExpiryDate);
            return this;
        }

        /**
         * UnSetter for cardExpiryDate.
         * @return Builder
         */
        public Builder unsetCardExpiryDate() {
            cardExpiryDate = null;
            return this;
        }

        /**
         * Setter for referenceId.
         * @param  referenceId  Integer value for referenceId.
         * @return Builder
         */
        public Builder referenceId(Integer referenceId) {
            this.referenceId = referenceId;
            return this;
        }

        /**
         * Builds a new {@link PINReminderReference} object using the set fields.
         * @return {@link PINReminderReference}
         */
        public PINReminderReference build() {
            return new PINReminderReference(cardId, pANID, pAN, cardExpiryDate, referenceId);
        }
    }
}
