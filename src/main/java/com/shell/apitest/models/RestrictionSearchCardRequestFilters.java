/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for RestrictionSearchCardRequestFilters type.
 */
public class RestrictionSearchCardRequestFilters {
    private Integer colCoCode;
    private Integer colCoId;
    private String payerNumber;
    private Integer payerId;
    private Accounts accounts;
    private OptionalNullable<String> bundleId;
    private List<RestrictionSearchCardRequestFiltersCardsItems> cards;
    private Boolean includeLocationRestrictions;
    private Boolean includeInheritedLimits;
    private Boolean includeBundleDetails;

    /**
     * Default constructor.
     */
    public RestrictionSearchCardRequestFilters() {
        includeLocationRestrictions = false;
        includeInheritedLimits = false;
        includeBundleDetails = false;
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  accounts  Accounts value for accounts.
     * @param  bundleId  String value for bundleId.
     * @param  cards  List of RestrictionSearchCardRequestFiltersCardsItems value for cards.
     * @param  includeLocationRestrictions  Boolean value for includeLocationRestrictions.
     * @param  includeInheritedLimits  Boolean value for includeInheritedLimits.
     * @param  includeBundleDetails  Boolean value for includeBundleDetails.
     */
    public RestrictionSearchCardRequestFilters(
            Integer colCoCode,
            Integer colCoId,
            String payerNumber,
            Integer payerId,
            Accounts accounts,
            String bundleId,
            List<RestrictionSearchCardRequestFiltersCardsItems> cards,
            Boolean includeLocationRestrictions,
            Boolean includeInheritedLimits,
            Boolean includeBundleDetails) {
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.payerNumber = payerNumber;
        this.payerId = payerId;
        this.accounts = accounts;
        this.bundleId = OptionalNullable.of(bundleId);
        this.cards = cards;
        this.includeLocationRestrictions = includeLocationRestrictions;
        this.includeInheritedLimits = includeInheritedLimits;
        this.includeBundleDetails = includeBundleDetails;
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  accounts  Accounts value for accounts.
     * @param  bundleId  String value for bundleId.
     * @param  cards  List of RestrictionSearchCardRequestFiltersCardsItems value for cards.
     * @param  includeLocationRestrictions  Boolean value for includeLocationRestrictions.
     * @param  includeInheritedLimits  Boolean value for includeInheritedLimits.
     * @param  includeBundleDetails  Boolean value for includeBundleDetails.
     */

    protected RestrictionSearchCardRequestFilters(Integer colCoCode, Integer colCoId,
            String payerNumber, Integer payerId, Accounts accounts,
            OptionalNullable<String> bundleId,
            List<RestrictionSearchCardRequestFiltersCardsItems> cards,
            Boolean includeLocationRestrictions, Boolean includeInheritedLimits,
            Boolean includeBundleDetails) {
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.payerNumber = payerNumber;
        this.payerId = payerId;
        this.accounts = accounts;
        this.bundleId = bundleId;
        this.cards = cards;
        this.includeLocationRestrictions = includeLocationRestrictions;
        this.includeInheritedLimits = includeInheritedLimits;
        this.includeBundleDetails = includeBundleDetails;
    }

    /**
     * Getter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86 for Philippines 5 for UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoCode() {
        return colCoCode;
    }

    /**
     * Setter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86 for Philippines 5 for UK
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = colCoCode;
    }

    /**
     * Getter for ColCoId.
     * Collecting Company Id (in GFN) of the selected payer. Optional if ColCoCode is passed else
     * Mandatory. Example: 1 for Philippines 5 for UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoId() {
        return colCoId;
    }

    /**
     * Setter for ColCoId.
     * Collecting Company Id (in GFN) of the selected payer. Optional if ColCoCode is passed else
     * Mandatory. Example: 1 for Philippines 5 for UK
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = colCoId;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory Example:
     * GB000000123
     * @return Returns the String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPayerNumber() {
        return payerNumber;
    }

    /**
     * Setter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory Example:
     * GB000000123
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = payerNumber;
    }

    /**
     * Getter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     * @return Returns the Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPayerId() {
        return payerId;
    }

    /**
     * Setter for PayerId.
     * Payer Id of the selected payer. Optional if PayerNumber is passed else Mandatory Example:
     * 123456
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = payerId;
    }

    /**
     * Getter for Accounts.
     * @return Returns the Accounts
     */
    @JsonGetter("Accounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Accounts getAccounts() {
        return accounts;
    }

    /**
     * Setter for Accounts.
     * @param accounts Value for Accounts
     */
    @JsonSetter("Accounts")
    public void setAccounts(Accounts accounts) {
        this.accounts = accounts;
    }

    /**
     * Internal Getter for BundleId.
     * Identifier of the Card bundle in Gateway. Optional if cards list is given, else mandatory.
     * @return Returns the Internal String
     */
    @JsonGetter("BundleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBundleId() {
        return this.bundleId;
    }

    /**
     * Getter for BundleId.
     * Identifier of the Card bundle in Gateway. Optional if cards list is given, else mandatory.
     * @return Returns the String
     */
    public String getBundleId() {
        return OptionalNullable.getFrom(bundleId);
    }

    /**
     * Setter for BundleId.
     * Identifier of the Card bundle in Gateway. Optional if cards list is given, else mandatory.
     * @param bundleId Value for String
     */
    @JsonSetter("BundleId")
    public void setBundleId(String bundleId) {
        this.bundleId = OptionalNullable.of(bundleId);
    }

    /**
     * UnSetter for BundleId.
     * Identifier of the Card bundle in Gateway. Optional if cards list is given, else mandatory.
     */
    public void unsetBundleId() {
        bundleId = null;
    }

    /**
     * Getter for Cards.
     * @return Returns the List of RestrictionSearchCardRequestFiltersCardsItems
     */
    @JsonGetter("Cards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<RestrictionSearchCardRequestFiltersCardsItems> getCards() {
        return cards;
    }

    /**
     * Setter for Cards.
     * @param cards Value for List of RestrictionSearchCardRequestFiltersCardsItems
     */
    @JsonSetter("Cards")
    public void setCards(List<RestrictionSearchCardRequestFiltersCardsItems> cards) {
        this.cards = cards;
    }

    /**
     * Getter for IncludeLocationRestrictions.
     * Whether to include location restriction of the cards in the response
     * @return Returns the Boolean
     */
    @JsonGetter("IncludeLocationRestrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeLocationRestrictions() {
        return includeLocationRestrictions;
    }

    /**
     * Setter for IncludeLocationRestrictions.
     * Whether to include location restriction of the cards in the response
     * @param includeLocationRestrictions Value for Boolean
     */
    @JsonSetter("IncludeLocationRestrictions")
    public void setIncludeLocationRestrictions(Boolean includeLocationRestrictions) {
        this.includeLocationRestrictions = includeLocationRestrictions;
    }

    /**
     * Getter for IncludeInheritedLimits.
     * When True: service will return the inherited values for the usage limits (from card-program
     * or account as available) when it is not overridden on the card.
     * @return Returns the Boolean
     */
    @JsonGetter("IncludeInheritedLimits")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeInheritedLimits() {
        return includeInheritedLimits;
    }

    /**
     * Setter for IncludeInheritedLimits.
     * When True: service will return the inherited values for the usage limits (from card-program
     * or account as available) when it is not overridden on the card.
     * @param includeInheritedLimits Value for Boolean
     */
    @JsonSetter("IncludeInheritedLimits")
    public void setIncludeInheritedLimits(Boolean includeInheritedLimits) {
        this.includeInheritedLimits = includeInheritedLimits;
    }

    /**
     * Getter for IncludeBundleDetails.
     * When the value is True, API will return bundle Id associated with cards in the response, if
     * available. Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is
     * expected when set to ‘True’.
     * @return Returns the Boolean
     */
    @JsonGetter("IncludeBundleDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeBundleDetails() {
        return includeBundleDetails;
    }

    /**
     * Setter for IncludeBundleDetails.
     * When the value is True, API will return bundle Id associated with cards in the response, if
     * available. Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is
     * expected when set to ‘True’.
     * @param includeBundleDetails Value for Boolean
     */
    @JsonSetter("IncludeBundleDetails")
    public void setIncludeBundleDetails(Boolean includeBundleDetails) {
        this.includeBundleDetails = includeBundleDetails;
    }

    /**
     * Converts this RestrictionSearchCardRequestFilters into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RestrictionSearchCardRequestFilters [" + "colCoCode=" + colCoCode + ", colCoId="
                + colCoId + ", payerNumber=" + payerNumber + ", payerId=" + payerId + ", accounts="
                + accounts + ", bundleId=" + bundleId + ", cards=" + cards
                + ", includeLocationRestrictions=" + includeLocationRestrictions
                + ", includeInheritedLimits=" + includeInheritedLimits + ", includeBundleDetails="
                + includeBundleDetails + "]";
    }

    /**
     * Builds a new {@link RestrictionSearchCardRequestFilters.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RestrictionSearchCardRequestFilters.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .colCoCode(getColCoCode())
                .colCoId(getColCoId())
                .payerNumber(getPayerNumber())
                .payerId(getPayerId())
                .accounts(getAccounts())
                .cards(getCards())
                .includeLocationRestrictions(getIncludeLocationRestrictions())
                .includeInheritedLimits(getIncludeInheritedLimits())
                .includeBundleDetails(getIncludeBundleDetails());
        builder.bundleId = internalGetBundleId();
        return builder;
    }

    /**
     * Class to build instances of {@link RestrictionSearchCardRequestFilters}.
     */
    public static class Builder {
        private Integer colCoCode;
        private Integer colCoId;
        private String payerNumber;
        private Integer payerId;
        private Accounts accounts;
        private OptionalNullable<String> bundleId;
        private List<RestrictionSearchCardRequestFiltersCardsItems> cards;
        private Boolean includeLocationRestrictions = false;
        private Boolean includeInheritedLimits = false;
        private Boolean includeBundleDetails = false;



        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = colCoCode;
            return this;
        }

        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = colCoId;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = payerNumber;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = payerId;
            return this;
        }

        /**
         * Setter for accounts.
         * @param  accounts  Accounts value for accounts.
         * @return Builder
         */
        public Builder accounts(Accounts accounts) {
            this.accounts = accounts;
            return this;
        }

        /**
         * Setter for bundleId.
         * @param  bundleId  String value for bundleId.
         * @return Builder
         */
        public Builder bundleId(String bundleId) {
            this.bundleId = OptionalNullable.of(bundleId);
            return this;
        }

        /**
         * UnSetter for bundleId.
         * @return Builder
         */
        public Builder unsetBundleId() {
            bundleId = null;
            return this;
        }

        /**
         * Setter for cards.
         * @param  cards  List of RestrictionSearchCardRequestFiltersCardsItems value for cards.
         * @return Builder
         */
        public Builder cards(List<RestrictionSearchCardRequestFiltersCardsItems> cards) {
            this.cards = cards;
            return this;
        }

        /**
         * Setter for includeLocationRestrictions.
         * @param  includeLocationRestrictions  Boolean value for includeLocationRestrictions.
         * @return Builder
         */
        public Builder includeLocationRestrictions(Boolean includeLocationRestrictions) {
            this.includeLocationRestrictions = includeLocationRestrictions;
            return this;
        }

        /**
         * Setter for includeInheritedLimits.
         * @param  includeInheritedLimits  Boolean value for includeInheritedLimits.
         * @return Builder
         */
        public Builder includeInheritedLimits(Boolean includeInheritedLimits) {
            this.includeInheritedLimits = includeInheritedLimits;
            return this;
        }

        /**
         * Setter for includeBundleDetails.
         * @param  includeBundleDetails  Boolean value for includeBundleDetails.
         * @return Builder
         */
        public Builder includeBundleDetails(Boolean includeBundleDetails) {
            this.includeBundleDetails = includeBundleDetails;
            return this;
        }

        /**
         * Builds a new {@link RestrictionSearchCardRequestFilters} object using the set fields.
         * @return {@link RestrictionSearchCardRequestFilters}
         */
        public RestrictionSearchCardRequestFilters build() {
            return new RestrictionSearchCardRequestFilters(colCoCode, colCoId, payerNumber, payerId,
                    accounts, bundleId, cards, includeLocationRestrictions, includeInheritedLimits,
                    includeBundleDetails);
        }
    }
}
