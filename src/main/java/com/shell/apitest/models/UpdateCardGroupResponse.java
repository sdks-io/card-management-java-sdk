/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UpdateCardGroupResponse type.
 */
public class UpdateCardGroupResponse {
    private Integer mainReference;
    private Integer updateCardGroupReference;
    private Integer newCardGroupReference;
    private List<UpdateCardGroupResponseMoveCardReferencesItems> moveCardReferences;
    private ErrorStatus error;
    private String requestId;

    /**
     * Default constructor.
     */
    public UpdateCardGroupResponse() {
    }

    /**
     * Initialization constructor.
     * @param  mainReference  Integer value for mainReference.
     * @param  updateCardGroupReference  Integer value for updateCardGroupReference.
     * @param  newCardGroupReference  Integer value for newCardGroupReference.
     * @param  moveCardReferences  List of UpdateCardGroupResponseMoveCardReferencesItems value for
     *         moveCardReferences.
     * @param  error  ErrorStatus value for error.
     * @param  requestId  String value for requestId.
     */
    public UpdateCardGroupResponse(
            Integer mainReference,
            Integer updateCardGroupReference,
            Integer newCardGroupReference,
            List<UpdateCardGroupResponseMoveCardReferencesItems> moveCardReferences,
            ErrorStatus error,
            String requestId) {
        this.mainReference = mainReference;
        this.updateCardGroupReference = updateCardGroupReference;
        this.newCardGroupReference = newCardGroupReference;
        this.moveCardReferences = moveCardReferences;
        this.error = error;
        this.requestId = requestId;
    }

    /**
     * Getter for MainReference.
     * Reference number for tracking the overall request. The value will be null when the validation
     * fails.
     * @return Returns the Integer
     */
    @JsonGetter("MainReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMainReference() {
        return mainReference;
    }

    /**
     * Setter for MainReference.
     * Reference number for tracking the overall request. The value will be null when the validation
     * fails.
     * @param mainReference Value for Integer
     */
    @JsonSetter("MainReference")
    public void setMainReference(Integer mainReference) {
        this.mainReference = mainReference;
    }

    /**
     * Getter for UpdateCardGroupReference.
     * Reference number for tracking the execution of terminate card-group request. Reference number
     * will be null when the validations fail or TerminateCardGroup in the request object is false.
     * @return Returns the Integer
     */
    @JsonGetter("UpdateCardGroupReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUpdateCardGroupReference() {
        return updateCardGroupReference;
    }

    /**
     * Setter for UpdateCardGroupReference.
     * Reference number for tracking the execution of terminate card-group request. Reference number
     * will be null when the validations fail or TerminateCardGroup in the request object is false.
     * @param updateCardGroupReference Value for Integer
     */
    @JsonSetter("UpdateCardGroupReference")
    public void setUpdateCardGroupReference(Integer updateCardGroupReference) {
        this.updateCardGroupReference = updateCardGroupReference;
    }

    /**
     * Getter for NewCardGroupReference.
     * Reference number for tracking the execution of new card group creation in the case when the
     * cards in the terminating card-group have to be moved to a new card-group. Reference number
     * will be null when the validations fail or new card-group creation is not requested.
     * @return Returns the Integer
     */
    @JsonGetter("NewCardGroupReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNewCardGroupReference() {
        return newCardGroupReference;
    }

    /**
     * Setter for NewCardGroupReference.
     * Reference number for tracking the execution of new card group creation in the case when the
     * cards in the terminating card-group have to be moved to a new card-group. Reference number
     * will be null when the validations fail or new card-group creation is not requested.
     * @param newCardGroupReference Value for Integer
     */
    @JsonSetter("NewCardGroupReference")
    public void setNewCardGroupReference(Integer newCardGroupReference) {
        this.newCardGroupReference = newCardGroupReference;
    }

    /**
     * Getter for MoveCardReferences.
     * List of cards submitted successfully for processing the move to the target card-group or to
     * change card-group to null. This list will be empty when the validations fail or there are no
     * cards in the card-group that is getting terminated or MoveCards in the request object is
     * false
     * @return Returns the List of UpdateCardGroupResponseMoveCardReferencesItems
     */
    @JsonGetter("MoveCardReferences")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<UpdateCardGroupResponseMoveCardReferencesItems> getMoveCardReferences() {
        return moveCardReferences;
    }

    /**
     * Setter for MoveCardReferences.
     * List of cards submitted successfully for processing the move to the target card-group or to
     * change card-group to null. This list will be empty when the validations fail or there are no
     * cards in the card-group that is getting terminated or MoveCards in the request object is
     * false
     * @param moveCardReferences Value for List of UpdateCardGroupResponseMoveCardReferencesItems
     */
    @JsonSetter("MoveCardReferences")
    public void setMoveCardReferences(List<UpdateCardGroupResponseMoveCardReferencesItems> moveCardReferences) {
        this.moveCardReferences = moveCardReferences;
    }

    /**
     * Getter for Error.
     * @return Returns the ErrorStatus
     */
    @JsonGetter("Error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ErrorStatus getError() {
        return error;
    }

    /**
     * Setter for Error.
     * @param error Value for ErrorStatus
     */
    @JsonSetter("Error")
    public void setError(ErrorStatus error) {
        this.error = error;
    }

    /**
     * Getter for RequestId.
     * API Request ID
     * @return Returns the String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * API Request ID
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Converts this UpdateCardGroupResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdateCardGroupResponse [" + "mainReference=" + mainReference
                + ", updateCardGroupReference=" + updateCardGroupReference
                + ", newCardGroupReference=" + newCardGroupReference + ", moveCardReferences="
                + moveCardReferences + ", error=" + error + ", requestId=" + requestId + "]";
    }

    /**
     * Builds a new {@link UpdateCardGroupResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdateCardGroupResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .mainReference(getMainReference())
                .updateCardGroupReference(getUpdateCardGroupReference())
                .newCardGroupReference(getNewCardGroupReference())
                .moveCardReferences(getMoveCardReferences())
                .error(getError())
                .requestId(getRequestId());
        return builder;
    }

    /**
     * Class to build instances of {@link UpdateCardGroupResponse}.
     */
    public static class Builder {
        private Integer mainReference;
        private Integer updateCardGroupReference;
        private Integer newCardGroupReference;
        private List<UpdateCardGroupResponseMoveCardReferencesItems> moveCardReferences;
        private ErrorStatus error;
        private String requestId;



        /**
         * Setter for mainReference.
         * @param  mainReference  Integer value for mainReference.
         * @return Builder
         */
        public Builder mainReference(Integer mainReference) {
            this.mainReference = mainReference;
            return this;
        }

        /**
         * Setter for updateCardGroupReference.
         * @param  updateCardGroupReference  Integer value for updateCardGroupReference.
         * @return Builder
         */
        public Builder updateCardGroupReference(Integer updateCardGroupReference) {
            this.updateCardGroupReference = updateCardGroupReference;
            return this;
        }

        /**
         * Setter for newCardGroupReference.
         * @param  newCardGroupReference  Integer value for newCardGroupReference.
         * @return Builder
         */
        public Builder newCardGroupReference(Integer newCardGroupReference) {
            this.newCardGroupReference = newCardGroupReference;
            return this;
        }

        /**
         * Setter for moveCardReferences.
         * @param  moveCardReferences  List of UpdateCardGroupResponseMoveCardReferencesItems value
         *         for moveCardReferences.
         * @return Builder
         */
        public Builder moveCardReferences(
                List<UpdateCardGroupResponseMoveCardReferencesItems> moveCardReferences) {
            this.moveCardReferences = moveCardReferences;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  ErrorStatus value for error.
         * @return Builder
         */
        public Builder error(ErrorStatus error) {
            this.error = error;
            return this;
        }

        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Builds a new {@link UpdateCardGroupResponse} object using the set fields.
         * @return {@link UpdateCardGroupResponse}
         */
        public UpdateCardGroupResponse build() {
            return new UpdateCardGroupResponse(mainReference, updateCardGroupReference,
                    newCardGroupReference, moveCardReferences, error, requestId);
        }
    }
}
