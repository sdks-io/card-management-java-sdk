/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RestrictionSearchCardRequestFiltersCardsItems type.
 */
public class RestrictionSearchCardRequestFiltersCardsItems {
    private String pAN;
    private Integer cardId;

    /**
     * Default constructor.
     */
    public RestrictionSearchCardRequestFiltersCardsItems() {
    }

    /**
     * Initialization constructor.
     * @param  pAN  String value for pAN.
     * @param  cardId  Integer value for cardId.
     */
    public RestrictionSearchCardRequestFiltersCardsItems(
            String pAN,
            Integer cardId) {
        this.pAN = pAN;
        this.cardId = cardId;
    }

    /**
     * Getter for PAN.
     * Card PAN. Optional if CardId is given, else mandatory. Note: PAN is ignored if CardId is
     * given.
     * @return Returns the String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPAN() {
        return pAN;
    }

    /**
     * Setter for PAN.
     * Card PAN. Optional if CardId is given, else mandatory. Note: PAN is ignored if CardId is
     * given.
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = pAN;
    }

    /**
     * Getter for CardId.
     * Unique Card Id in GFN. Optional if PAN is given, else mandatory.
     * @return Returns the Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCardId() {
        return cardId;
    }

    /**
     * Setter for CardId.
     * Unique Card Id in GFN. Optional if PAN is given, else mandatory.
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = cardId;
    }

    /**
     * Converts this RestrictionSearchCardRequestFiltersCardsItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RestrictionSearchCardRequestFiltersCardsItems [" + "pAN=" + pAN + ", cardId="
                + cardId + "]";
    }

    /**
     * Builds a new {@link RestrictionSearchCardRequestFiltersCardsItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RestrictionSearchCardRequestFiltersCardsItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .pAN(getPAN())
                .cardId(getCardId());
        return builder;
    }

    /**
     * Class to build instances of {@link RestrictionSearchCardRequestFiltersCardsItems}.
     */
    public static class Builder {
        private String pAN;
        private Integer cardId;



        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = pAN;
            return this;
        }

        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = cardId;
            return this;
        }

        /**
         * Builds a new {@link RestrictionSearchCardRequestFiltersCardsItems} object using the set
         * fields.
         * @return {@link RestrictionSearchCardRequestFiltersCardsItems}
         */
        public RestrictionSearchCardRequestFiltersCardsItems build() {
            return new RestrictionSearchCardRequestFiltersCardsItems(pAN, cardId);
        }
    }
}
