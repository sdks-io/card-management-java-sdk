/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RestrictionCardList type.
 */
public class RestrictionCardList {
    private Integer cardId;
    private String pAN;
    private String expiryDate;
    private Integer statusId;
    private String statusDescription;
    private String driverName;
    private String vRN;
    private String issueDate;
    private Integer issueNumber;
    private Integer accountId;
    private String accountNumber;
    private String accountName;
    private String accountShortName;
    private String currencyCode;
    private String colCoCurrencyCode;
    private String colCoCurrencySymbol;
    private String restrictionCurrencyCode;
    private String restrictionCurrencySymbol;
    private String purchaseCategoryId;
    private String purchaseCategoryCode;
    private String purchaseCategoryName;
    private Boolean isSuperseded;
    private Boolean isVirtualCard;
    private Boolean isNational;
    private Boolean isInternational;
    private Boolean isCRT;
    private Boolean isFleet;
    private Boolean isShellSitesOnly;
    private Boolean isPartnerSitesIncluded;
    private Integer cardTypeId;
    private String cardTypeCode;
    private String cardTypeName;
    private String bundleId;
    private Integer mediumTypeID;
    private String mediumType;

    /**
     * Default constructor.
     */
    public RestrictionCardList() {
    }

    /**
     * Initialization constructor.
     * @param  cardId  Integer value for cardId.
     * @param  pAN  String value for pAN.
     * @param  expiryDate  String value for expiryDate.
     * @param  statusId  Integer value for statusId.
     * @param  statusDescription  String value for statusDescription.
     * @param  driverName  String value for driverName.
     * @param  vRN  String value for vRN.
     * @param  issueDate  String value for issueDate.
     * @param  issueNumber  Integer value for issueNumber.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountName  String value for accountName.
     * @param  accountShortName  String value for accountShortName.
     * @param  currencyCode  String value for currencyCode.
     * @param  colCoCurrencyCode  String value for colCoCurrencyCode.
     * @param  colCoCurrencySymbol  String value for colCoCurrencySymbol.
     * @param  restrictionCurrencyCode  String value for restrictionCurrencyCode.
     * @param  restrictionCurrencySymbol  String value for restrictionCurrencySymbol.
     * @param  purchaseCategoryId  String value for purchaseCategoryId.
     * @param  purchaseCategoryCode  String value for purchaseCategoryCode.
     * @param  purchaseCategoryName  String value for purchaseCategoryName.
     * @param  isSuperseded  Boolean value for isSuperseded.
     * @param  isVirtualCard  Boolean value for isVirtualCard.
     * @param  isNational  Boolean value for isNational.
     * @param  isInternational  Boolean value for isInternational.
     * @param  isCRT  Boolean value for isCRT.
     * @param  isFleet  Boolean value for isFleet.
     * @param  isShellSitesOnly  Boolean value for isShellSitesOnly.
     * @param  isPartnerSitesIncluded  Boolean value for isPartnerSitesIncluded.
     * @param  cardTypeId  Integer value for cardTypeId.
     * @param  cardTypeCode  String value for cardTypeCode.
     * @param  cardTypeName  String value for cardTypeName.
     * @param  bundleId  String value for bundleId.
     * @param  mediumTypeID  Integer value for mediumTypeID.
     * @param  mediumType  String value for mediumType.
     */
    public RestrictionCardList(
            Integer cardId,
            String pAN,
            String expiryDate,
            Integer statusId,
            String statusDescription,
            String driverName,
            String vRN,
            String issueDate,
            Integer issueNumber,
            Integer accountId,
            String accountNumber,
            String accountName,
            String accountShortName,
            String currencyCode,
            String colCoCurrencyCode,
            String colCoCurrencySymbol,
            String restrictionCurrencyCode,
            String restrictionCurrencySymbol,
            String purchaseCategoryId,
            String purchaseCategoryCode,
            String purchaseCategoryName,
            Boolean isSuperseded,
            Boolean isVirtualCard,
            Boolean isNational,
            Boolean isInternational,
            Boolean isCRT,
            Boolean isFleet,
            Boolean isShellSitesOnly,
            Boolean isPartnerSitesIncluded,
            Integer cardTypeId,
            String cardTypeCode,
            String cardTypeName,
            String bundleId,
            Integer mediumTypeID,
            String mediumType) {
        this.cardId = cardId;
        this.pAN = pAN;
        this.expiryDate = expiryDate;
        this.statusId = statusId;
        this.statusDescription = statusDescription;
        this.driverName = driverName;
        this.vRN = vRN;
        this.issueDate = issueDate;
        this.issueNumber = issueNumber;
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.accountName = accountName;
        this.accountShortName = accountShortName;
        this.currencyCode = currencyCode;
        this.colCoCurrencyCode = colCoCurrencyCode;
        this.colCoCurrencySymbol = colCoCurrencySymbol;
        this.restrictionCurrencyCode = restrictionCurrencyCode;
        this.restrictionCurrencySymbol = restrictionCurrencySymbol;
        this.purchaseCategoryId = purchaseCategoryId;
        this.purchaseCategoryCode = purchaseCategoryCode;
        this.purchaseCategoryName = purchaseCategoryName;
        this.isSuperseded = isSuperseded;
        this.isVirtualCard = isVirtualCard;
        this.isNational = isNational;
        this.isInternational = isInternational;
        this.isCRT = isCRT;
        this.isFleet = isFleet;
        this.isShellSitesOnly = isShellSitesOnly;
        this.isPartnerSitesIncluded = isPartnerSitesIncluded;
        this.cardTypeId = cardTypeId;
        this.cardTypeCode = cardTypeCode;
        this.cardTypeName = cardTypeName;
        this.bundleId = bundleId;
        this.mediumTypeID = mediumTypeID;
        this.mediumType = mediumType;
    }

    /**
     * Getter for CardId.
     * Unique Card Id
     * @return Returns the Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCardId() {
        return cardId;
    }

    /**
     * Setter for CardId.
     * Unique Card Id
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = cardId;
    }

    /**
     * Getter for PAN.
     * Card PAN
     * @return Returns the String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPAN() {
        return pAN;
    }

    /**
     * Setter for PAN.
     * Card PAN
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = pAN;
    }

    /**
     * Getter for ExpiryDate.
     * Expiry date of the card Format: yyyyMMdd Note: Clients to convert this to appropriate
     * DateTime type.
     * @return Returns the String
     */
    @JsonGetter("ExpiryDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExpiryDate() {
        return expiryDate;
    }

    /**
     * Setter for ExpiryDate.
     * Expiry date of the card Format: yyyyMMdd Note: Clients to convert this to appropriate
     * DateTime type.
     * @param expiryDate Value for String
     */
    @JsonSetter("ExpiryDate")
    public void setExpiryDate(String expiryDate) {
        this.expiryDate = expiryDate;
    }

    /**
     * Getter for StatusId.
     * Card Status id
     * @return Returns the Integer
     */
    @JsonGetter("StatusId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getStatusId() {
        return statusId;
    }

    /**
     * Setter for StatusId.
     * Card Status id
     * @param statusId Value for Integer
     */
    @JsonSetter("StatusId")
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
    }

    /**
     * Getter for StatusDescription.
     * Status Description (Active, Temporarily Blocked, etc.,)
     * @return Returns the String
     */
    @JsonGetter("StatusDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatusDescription() {
        return statusDescription;
    }

    /**
     * Setter for StatusDescription.
     * Status Description (Active, Temporarily Blocked, etc.,)
     * @param statusDescription Value for String
     */
    @JsonSetter("StatusDescription")
    public void setStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
    }

    /**
     * Getter for DriverName.
     * Driver name Example: ANDREW GILBERRY
     * @return Returns the String
     */
    @JsonGetter("DriverName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDriverName() {
        return driverName;
    }

    /**
     * Setter for DriverName.
     * Driver name Example: ANDREW GILBERRY
     * @param driverName Value for String
     */
    @JsonSetter("DriverName")
    public void setDriverName(String driverName) {
        this.driverName = driverName;
    }

    /**
     * Getter for VRN.
     * Vehicle registration number Example: MV65YLH
     * @return Returns the String
     */
    @JsonGetter("VRN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVRN() {
        return vRN;
    }

    /**
     * Setter for VRN.
     * Vehicle registration number Example: MV65YLH
     * @param vRN Value for String
     */
    @JsonSetter("VRN")
    public void setVRN(String vRN) {
        this.vRN = vRN;
    }

    /**
     * Getter for IssueDate.
     * Issue date Format: yyyyMMdd Note: Clients to convert this to appropriate DateTime type.
     * @return Returns the String
     */
    @JsonGetter("IssueDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssueDate() {
        return issueDate;
    }

    /**
     * Setter for IssueDate.
     * Issue date Format: yyyyMMdd Note: Clients to convert this to appropriate DateTime type.
     * @param issueDate Value for String
     */
    @JsonSetter("IssueDate")
    public void setIssueDate(String issueDate) {
        this.issueDate = issueDate;
    }

    /**
     * Getter for IssueNumber.
     * Issue Number
     * @return Returns the Integer
     */
    @JsonGetter("IssueNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIssueNumber() {
        return issueNumber;
    }

    /**
     * Setter for IssueNumber.
     * Issue Number
     * @param issueNumber Value for Integer
     */
    @JsonSetter("IssueNumber")
    public void setIssueNumber(Integer issueNumber) {
        this.issueNumber = issueNumber;
    }

    /**
     * Getter for AccountId.
     * Account ID Example: 29484
     * @return Returns the Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * Account ID Example: 29484
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for AccountNumber.
     * Account Number Example: GB99215176
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account Number Example: GB99215176
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountName.
     * Account Name Example: MATTHEW ALGIE &amp; COMPANY LIMITED
     * @return Returns the String
     */
    @JsonGetter("AccountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account Name Example: MATTHEW ALGIE &amp; COMPANY LIMITED
     * @param accountName Value for String
     */
    @JsonSetter("AccountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for AccountShortName.
     * Account Short Name
     * @return Returns the String
     */
    @JsonGetter("AccountShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountShortName() {
        return accountShortName;
    }

    /**
     * Setter for AccountShortName.
     * Account Short Name
     * @param accountShortName Value for String
     */
    @JsonSetter("AccountShortName")
    public void setAccountShortName(String accountShortName) {
        this.accountShortName = accountShortName;
    }

    /**
     * Getter for CurrencyCode.
     * ISO currency code of the Customer Currency Example: GBP
     * @return Returns the String
     */
    @JsonGetter("CurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrencyCode() {
        return currencyCode;
    }

    /**
     * Setter for CurrencyCode.
     * ISO currency code of the Customer Currency Example: GBP
     * @param currencyCode Value for String
     */
    @JsonSetter("CurrencyCode")
    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    /**
     * Getter for ColCoCurrencyCode.
     * ISO currency code of the country. Example: GBP
     * @return Returns the String
     */
    @JsonGetter("ColCoCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getColCoCurrencyCode() {
        return colCoCurrencyCode;
    }

    /**
     * Setter for ColCoCurrencyCode.
     * ISO currency code of the country. Example: GBP
     * @param colCoCurrencyCode Value for String
     */
    @JsonSetter("ColCoCurrencyCode")
    public void setColCoCurrencyCode(String colCoCurrencyCode) {
        this.colCoCurrencyCode = colCoCurrencyCode;
    }

    /**
     * Getter for ColCoCurrencySymbol.
     * Currency symbol of the country. Example: £, $
     * @return Returns the String
     */
    @JsonGetter("ColCoCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getColCoCurrencySymbol() {
        return colCoCurrencySymbol;
    }

    /**
     * Setter for ColCoCurrencySymbol.
     * Currency symbol of the country. Example: £, $
     * @param colCoCurrencySymbol Value for String
     */
    @JsonSetter("ColCoCurrencySymbol")
    public void setColCoCurrencySymbol(String colCoCurrencySymbol) {
        this.colCoCurrencySymbol = colCoCurrencySymbol;
    }

    /**
     * Getter for RestrictionCurrencyCode.
     * ISO currency code of the country. Example: GBP
     * @return Returns the String
     */
    @JsonGetter("RestrictionCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRestrictionCurrencyCode() {
        return restrictionCurrencyCode;
    }

    /**
     * Setter for RestrictionCurrencyCode.
     * ISO currency code of the country. Example: GBP
     * @param restrictionCurrencyCode Value for String
     */
    @JsonSetter("RestrictionCurrencyCode")
    public void setRestrictionCurrencyCode(String restrictionCurrencyCode) {
        this.restrictionCurrencyCode = restrictionCurrencyCode;
    }

    /**
     * Getter for RestrictionCurrencySymbol.
     * Currency symbol of the country. Example: £, $
     * @return Returns the String
     */
    @JsonGetter("RestrictionCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRestrictionCurrencySymbol() {
        return restrictionCurrencySymbol;
    }

    /**
     * Setter for RestrictionCurrencySymbol.
     * Currency symbol of the country. Example: £, $
     * @param restrictionCurrencySymbol Value for String
     */
    @JsonSetter("RestrictionCurrencySymbol")
    public void setRestrictionCurrencySymbol(String restrictionCurrencySymbol) {
        this.restrictionCurrencySymbol = restrictionCurrencySymbol;
    }

    /**
     * Getter for PurchaseCategoryId.
     * Purchase category Id Example: 123, 124, etc.,
     * @return Returns the String
     */
    @JsonGetter("PurchaseCategoryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPurchaseCategoryId() {
        return purchaseCategoryId;
    }

    /**
     * Setter for PurchaseCategoryId.
     * Purchase category Id Example: 123, 124, etc.,
     * @param purchaseCategoryId Value for String
     */
    @JsonSetter("PurchaseCategoryId")
    public void setPurchaseCategoryId(String purchaseCategoryId) {
        this.purchaseCategoryId = purchaseCategoryId;
    }

    /**
     * Getter for PurchaseCategoryCode.
     * Purchase category code Example: 0 - All Fuels (without VP) and Lubricants 1 - FuelSave only 2
     * - FuelSave and Lubricants 3 - No Restrictions 4 - VP and FuelSave 5 - Diesel ONLY 6 - Diesel
     * and Lubricants 7 - VP and Lubricants 8 - VP and FuelSave and Lubricants
     * @return Returns the String
     */
    @JsonGetter("PurchaseCategoryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPurchaseCategoryCode() {
        return purchaseCategoryCode;
    }

    /**
     * Setter for PurchaseCategoryCode.
     * Purchase category code Example: 0 - All Fuels (without VP) and Lubricants 1 - FuelSave only 2
     * - FuelSave and Lubricants 3 - No Restrictions 4 - VP and FuelSave 5 - Diesel ONLY 6 - Diesel
     * and Lubricants 7 - VP and Lubricants 8 - VP and FuelSave and Lubricants
     * @param purchaseCategoryCode Value for String
     */
    @JsonSetter("PurchaseCategoryCode")
    public void setPurchaseCategoryCode(String purchaseCategoryCode) {
        this.purchaseCategoryCode = purchaseCategoryCode;
    }

    /**
     * Getter for PurchaseCategoryName.
     * Purchase category name Example: 0 - All Fuels (without VP) and Lubricants 1 - FuelSave only 2
     * - FuelSave and Lubricants 3 - No Restrictions 4 - VP and FuelSave 5 - Diesel ONLY 6 - Diesel
     * and Lubricants 7 - VP and Lubricants 8 - VP and FuelSave and Lubricants
     * @return Returns the String
     */
    @JsonGetter("PurchaseCategoryName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPurchaseCategoryName() {
        return purchaseCategoryName;
    }

    /**
     * Setter for PurchaseCategoryName.
     * Purchase category name Example: 0 - All Fuels (without VP) and Lubricants 1 - FuelSave only 2
     * - FuelSave and Lubricants 3 - No Restrictions 4 - VP and FuelSave 5 - Diesel ONLY 6 - Diesel
     * and Lubricants 7 - VP and Lubricants 8 - VP and FuelSave and Lubricants
     * @param purchaseCategoryName Value for String
     */
    @JsonSetter("PurchaseCategoryName")
    public void setPurchaseCategoryName(String purchaseCategoryName) {
        this.purchaseCategoryName = purchaseCategoryName;
    }

    /**
     * Getter for IsSuperseded.
     * True/False True if a new card is issued with the same PAN, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsSuperseded")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsSuperseded() {
        return isSuperseded;
    }

    /**
     * Setter for IsSuperseded.
     * True/False True if a new card is issued with the same PAN, else false
     * @param isSuperseded Value for Boolean
     */
    @JsonSetter("IsSuperseded")
    public void setIsSuperseded(Boolean isSuperseded) {
        this.isSuperseded = isSuperseded;
    }

    /**
     * Getter for IsVirtualCard.
     * True/False True if it is a virtual card, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsVirtualCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsVirtualCard() {
        return isVirtualCard;
    }

    /**
     * Setter for IsVirtualCard.
     * True/False True if it is a virtual card, else false
     * @param isVirtualCard Value for Boolean
     */
    @JsonSetter("IsVirtualCard")
    public void setIsVirtualCard(Boolean isVirtualCard) {
        this.isVirtualCard = isVirtualCard;
    }

    /**
     * Getter for IsNational.
     * True/False True if it is a national card, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsNational")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsNational() {
        return isNational;
    }

    /**
     * Setter for IsNational.
     * True/False True if it is a national card, else false
     * @param isNational Value for Boolean
     */
    @JsonSetter("IsNational")
    public void setIsNational(Boolean isNational) {
        this.isNational = isNational;
    }

    /**
     * Getter for IsInternational.
     * True/False True if it is an international card, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsInternational")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsInternational() {
        return isInternational;
    }

    /**
     * Setter for IsInternational.
     * True/False True if it is an international card, else false
     * @param isInternational Value for Boolean
     */
    @JsonSetter("IsInternational")
    public void setIsInternational(Boolean isInternational) {
        this.isInternational = isInternational;
    }

    /**
     * Getter for IsCRT.
     * True/False True if it is a CRT type card, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsCRT")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsCRT() {
        return isCRT;
    }

    /**
     * Setter for IsCRT.
     * True/False True if it is a CRT type card, else false
     * @param isCRT Value for Boolean
     */
    @JsonSetter("IsCRT")
    public void setIsCRT(Boolean isCRT) {
        this.isCRT = isCRT;
    }

    /**
     * Getter for IsFleet.
     * True/False True if it is a Fleet type card, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsFleet")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsFleet() {
        return isFleet;
    }

    /**
     * Setter for IsFleet.
     * True/False True if it is a Fleet type card, else false
     * @param isFleet Value for Boolean
     */
    @JsonSetter("IsFleet")
    public void setIsFleet(Boolean isFleet) {
        this.isFleet = isFleet;
    }

    /**
     * Getter for IsShellSitesOnly.
     * True/False True if it is only allowed at Shell sites, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsShellSitesOnly")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsShellSitesOnly() {
        return isShellSitesOnly;
    }

    /**
     * Setter for IsShellSitesOnly.
     * True/False True if it is only allowed at Shell sites, else false
     * @param isShellSitesOnly Value for Boolean
     */
    @JsonSetter("IsShellSitesOnly")
    public void setIsShellSitesOnly(Boolean isShellSitesOnly) {
        this.isShellSitesOnly = isShellSitesOnly;
    }

    /**
     * Getter for IsPartnerSitesIncluded.
     * True/False True if it is allowed at all partner sites, else false
     * @return Returns the Boolean
     */
    @JsonGetter("IsPartnerSitesIncluded")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsPartnerSitesIncluded() {
        return isPartnerSitesIncluded;
    }

    /**
     * Setter for IsPartnerSitesIncluded.
     * True/False True if it is allowed at all partner sites, else false
     * @param isPartnerSitesIncluded Value for Boolean
     */
    @JsonSetter("IsPartnerSitesIncluded")
    public void setIsPartnerSitesIncluded(Boolean isPartnerSitesIncluded) {
        this.isPartnerSitesIncluded = isPartnerSitesIncluded;
    }

    /**
     * Getter for CardTypeId.
     * Card Type ID Example Id &amp; Description: 1 - Philippines CRT 7077861 2- Philippines Fleet
     * 7002861 5-SHELL FLEET- HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL CRT- HONG
     * KONG 7077821
     * @return Returns the Integer
     */
    @JsonGetter("CardTypeId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCardTypeId() {
        return cardTypeId;
    }

    /**
     * Setter for CardTypeId.
     * Card Type ID Example Id &amp; Description: 1 - Philippines CRT 7077861 2- Philippines Fleet
     * 7002861 5-SHELL FLEET- HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL CRT- HONG
     * KONG 7077821
     * @param cardTypeId Value for Integer
     */
    @JsonSetter("CardTypeId")
    public void setCardTypeId(Integer cardTypeId) {
        this.cardTypeId = cardTypeId;
    }

    /**
     * Getter for CardTypeCode.
     * ISO code of the card i.e. first 7 digits of the PAN
     * @return Returns the String
     */
    @JsonGetter("CardTypeCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCardTypeCode() {
        return cardTypeCode;
    }

    /**
     * Setter for CardTypeCode.
     * ISO code of the card i.e. first 7 digits of the PAN
     * @param cardTypeCode Value for String
     */
    @JsonSetter("CardTypeCode")
    public void setCardTypeCode(String cardTypeCode) {
        this.cardTypeCode = cardTypeCode;
    }

    /**
     * Getter for CardTypeName.
     * Card Type Name Example Id &amp; Description: 1 - Philippines CRT 7077861 2- Philippines Fleet
     * 7002861 5-SHELL FLEET- HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL CRT- HONG
     * KONG 7077821
     * @return Returns the String
     */
    @JsonGetter("CardTypeName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCardTypeName() {
        return cardTypeName;
    }

    /**
     * Setter for CardTypeName.
     * Card Type Name Example Id &amp; Description: 1 - Philippines CRT 7077861 2- Philippines Fleet
     * 7002861 5-SHELL FLEET- HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL CRT- HONG
     * KONG 7077821
     * @param cardTypeName Value for String
     */
    @JsonSetter("CardTypeName")
    public void setCardTypeName(String cardTypeName) {
        this.cardTypeName = cardTypeName;
    }

    /**
     * Getter for BundleId.
     * Bundle Id associated with card in the Gateway. This field will have a null value if the card
     * is not associated with any bundle of IncludeBundleDetails in request is false. If the search
     * is based on a bundle Id, the same will be returned.
     * @return Returns the String
     */
    @JsonGetter("BundleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBundleId() {
        return bundleId;
    }

    /**
     * Setter for BundleId.
     * Bundle Id associated with card in the Gateway. This field will have a null value if the card
     * is not associated with any bundle of IncludeBundleDetails in request is false. If the search
     * is based on a bundle Id, the same will be returned.
     * @param bundleId Value for String
     */
    @JsonSetter("BundleId")
    public void setBundleId(String bundleId) {
        this.bundleId = bundleId;
    }

    /**
     * Getter for MediumTypeID.
     * Id of the medium type identifier. Example: 1,2,4 Full list below: 1 - Fuel Card 2 - Fuel Card
     * with EV 4 - Fuel Card and Key fob Card 5 - Key fob 6 - Virtual Card 7 - NPII Token 8 –
     * Smartpay
     * @return Returns the Integer
     */
    @JsonGetter("MediumTypeID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMediumTypeID() {
        return mediumTypeID;
    }

    /**
     * Setter for MediumTypeID.
     * Id of the medium type identifier. Example: 1,2,4 Full list below: 1 - Fuel Card 2 - Fuel Card
     * with EV 4 - Fuel Card and Key fob Card 5 - Key fob 6 - Virtual Card 7 - NPII Token 8 –
     * Smartpay
     * @param mediumTypeID Value for Integer
     */
    @JsonSetter("MediumTypeID")
    public void setMediumTypeID(Integer mediumTypeID) {
        this.mediumTypeID = mediumTypeID;
    }

    /**
     * Getter for MediumType.
     * Name of the medium type identifier. Example: Fuel Card, Fuel Card with EV, Key fob Full list
     * below: 1 - Fuel Card 2 - Fuel Card with EV 4 - Fuel Card and Key fob Card 5 - Key fob 6 -
     * Virtual Card 7 - NPII Token 8 - Smartpay
     * @return Returns the String
     */
    @JsonGetter("MediumType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMediumType() {
        return mediumType;
    }

    /**
     * Setter for MediumType.
     * Name of the medium type identifier. Example: Fuel Card, Fuel Card with EV, Key fob Full list
     * below: 1 - Fuel Card 2 - Fuel Card with EV 4 - Fuel Card and Key fob Card 5 - Key fob 6 -
     * Virtual Card 7 - NPII Token 8 - Smartpay
     * @param mediumType Value for String
     */
    @JsonSetter("MediumType")
    public void setMediumType(String mediumType) {
        this.mediumType = mediumType;
    }

    /**
     * Converts this RestrictionCardList into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RestrictionCardList [" + "cardId=" + cardId + ", pAN=" + pAN + ", expiryDate="
                + expiryDate + ", statusId=" + statusId + ", statusDescription=" + statusDescription
                + ", driverName=" + driverName + ", vRN=" + vRN + ", issueDate=" + issueDate
                + ", issueNumber=" + issueNumber + ", accountId=" + accountId + ", accountNumber="
                + accountNumber + ", accountName=" + accountName + ", accountShortName="
                + accountShortName + ", currencyCode=" + currencyCode + ", colCoCurrencyCode="
                + colCoCurrencyCode + ", colCoCurrencySymbol=" + colCoCurrencySymbol
                + ", restrictionCurrencyCode=" + restrictionCurrencyCode
                + ", restrictionCurrencySymbol=" + restrictionCurrencySymbol
                + ", purchaseCategoryId=" + purchaseCategoryId + ", purchaseCategoryCode="
                + purchaseCategoryCode + ", purchaseCategoryName=" + purchaseCategoryName
                + ", isSuperseded=" + isSuperseded + ", isVirtualCard=" + isVirtualCard
                + ", isNational=" + isNational + ", isInternational=" + isInternational + ", isCRT="
                + isCRT + ", isFleet=" + isFleet + ", isShellSitesOnly=" + isShellSitesOnly
                + ", isPartnerSitesIncluded=" + isPartnerSitesIncluded + ", cardTypeId="
                + cardTypeId + ", cardTypeCode=" + cardTypeCode + ", cardTypeName=" + cardTypeName
                + ", bundleId=" + bundleId + ", mediumTypeID=" + mediumTypeID + ", mediumType="
                + mediumType + "]";
    }

    /**
     * Builds a new {@link RestrictionCardList.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RestrictionCardList.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .cardId(getCardId())
                .pAN(getPAN())
                .expiryDate(getExpiryDate())
                .statusId(getStatusId())
                .statusDescription(getStatusDescription())
                .driverName(getDriverName())
                .vRN(getVRN())
                .issueDate(getIssueDate())
                .issueNumber(getIssueNumber())
                .accountId(getAccountId())
                .accountNumber(getAccountNumber())
                .accountName(getAccountName())
                .accountShortName(getAccountShortName())
                .currencyCode(getCurrencyCode())
                .colCoCurrencyCode(getColCoCurrencyCode())
                .colCoCurrencySymbol(getColCoCurrencySymbol())
                .restrictionCurrencyCode(getRestrictionCurrencyCode())
                .restrictionCurrencySymbol(getRestrictionCurrencySymbol())
                .purchaseCategoryId(getPurchaseCategoryId())
                .purchaseCategoryCode(getPurchaseCategoryCode())
                .purchaseCategoryName(getPurchaseCategoryName())
                .isSuperseded(getIsSuperseded())
                .isVirtualCard(getIsVirtualCard())
                .isNational(getIsNational())
                .isInternational(getIsInternational())
                .isCRT(getIsCRT())
                .isFleet(getIsFleet())
                .isShellSitesOnly(getIsShellSitesOnly())
                .isPartnerSitesIncluded(getIsPartnerSitesIncluded())
                .cardTypeId(getCardTypeId())
                .cardTypeCode(getCardTypeCode())
                .cardTypeName(getCardTypeName())
                .bundleId(getBundleId())
                .mediumTypeID(getMediumTypeID())
                .mediumType(getMediumType());
        return builder;
    }

    /**
     * Class to build instances of {@link RestrictionCardList}.
     */
    public static class Builder {
        private Integer cardId;
        private String pAN;
        private String expiryDate;
        private Integer statusId;
        private String statusDescription;
        private String driverName;
        private String vRN;
        private String issueDate;
        private Integer issueNumber;
        private Integer accountId;
        private String accountNumber;
        private String accountName;
        private String accountShortName;
        private String currencyCode;
        private String colCoCurrencyCode;
        private String colCoCurrencySymbol;
        private String restrictionCurrencyCode;
        private String restrictionCurrencySymbol;
        private String purchaseCategoryId;
        private String purchaseCategoryCode;
        private String purchaseCategoryName;
        private Boolean isSuperseded;
        private Boolean isVirtualCard;
        private Boolean isNational;
        private Boolean isInternational;
        private Boolean isCRT;
        private Boolean isFleet;
        private Boolean isShellSitesOnly;
        private Boolean isPartnerSitesIncluded;
        private Integer cardTypeId;
        private String cardTypeCode;
        private String cardTypeName;
        private String bundleId;
        private Integer mediumTypeID;
        private String mediumType;



        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = cardId;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = pAN;
            return this;
        }

        /**
         * Setter for expiryDate.
         * @param  expiryDate  String value for expiryDate.
         * @return Builder
         */
        public Builder expiryDate(String expiryDate) {
            this.expiryDate = expiryDate;
            return this;
        }

        /**
         * Setter for statusId.
         * @param  statusId  Integer value for statusId.
         * @return Builder
         */
        public Builder statusId(Integer statusId) {
            this.statusId = statusId;
            return this;
        }

        /**
         * Setter for statusDescription.
         * @param  statusDescription  String value for statusDescription.
         * @return Builder
         */
        public Builder statusDescription(String statusDescription) {
            this.statusDescription = statusDescription;
            return this;
        }

        /**
         * Setter for driverName.
         * @param  driverName  String value for driverName.
         * @return Builder
         */
        public Builder driverName(String driverName) {
            this.driverName = driverName;
            return this;
        }

        /**
         * Setter for vRN.
         * @param  vRN  String value for vRN.
         * @return Builder
         */
        public Builder vRN(String vRN) {
            this.vRN = vRN;
            return this;
        }

        /**
         * Setter for issueDate.
         * @param  issueDate  String value for issueDate.
         * @return Builder
         */
        public Builder issueDate(String issueDate) {
            this.issueDate = issueDate;
            return this;
        }

        /**
         * Setter for issueNumber.
         * @param  issueNumber  Integer value for issueNumber.
         * @return Builder
         */
        public Builder issueNumber(Integer issueNumber) {
            this.issueNumber = issueNumber;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for accountShortName.
         * @param  accountShortName  String value for accountShortName.
         * @return Builder
         */
        public Builder accountShortName(String accountShortName) {
            this.accountShortName = accountShortName;
            return this;
        }

        /**
         * Setter for currencyCode.
         * @param  currencyCode  String value for currencyCode.
         * @return Builder
         */
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = currencyCode;
            return this;
        }

        /**
         * Setter for colCoCurrencyCode.
         * @param  colCoCurrencyCode  String value for colCoCurrencyCode.
         * @return Builder
         */
        public Builder colCoCurrencyCode(String colCoCurrencyCode) {
            this.colCoCurrencyCode = colCoCurrencyCode;
            return this;
        }

        /**
         * Setter for colCoCurrencySymbol.
         * @param  colCoCurrencySymbol  String value for colCoCurrencySymbol.
         * @return Builder
         */
        public Builder colCoCurrencySymbol(String colCoCurrencySymbol) {
            this.colCoCurrencySymbol = colCoCurrencySymbol;
            return this;
        }

        /**
         * Setter for restrictionCurrencyCode.
         * @param  restrictionCurrencyCode  String value for restrictionCurrencyCode.
         * @return Builder
         */
        public Builder restrictionCurrencyCode(String restrictionCurrencyCode) {
            this.restrictionCurrencyCode = restrictionCurrencyCode;
            return this;
        }

        /**
         * Setter for restrictionCurrencySymbol.
         * @param  restrictionCurrencySymbol  String value for restrictionCurrencySymbol.
         * @return Builder
         */
        public Builder restrictionCurrencySymbol(String restrictionCurrencySymbol) {
            this.restrictionCurrencySymbol = restrictionCurrencySymbol;
            return this;
        }

        /**
         * Setter for purchaseCategoryId.
         * @param  purchaseCategoryId  String value for purchaseCategoryId.
         * @return Builder
         */
        public Builder purchaseCategoryId(String purchaseCategoryId) {
            this.purchaseCategoryId = purchaseCategoryId;
            return this;
        }

        /**
         * Setter for purchaseCategoryCode.
         * @param  purchaseCategoryCode  String value for purchaseCategoryCode.
         * @return Builder
         */
        public Builder purchaseCategoryCode(String purchaseCategoryCode) {
            this.purchaseCategoryCode = purchaseCategoryCode;
            return this;
        }

        /**
         * Setter for purchaseCategoryName.
         * @param  purchaseCategoryName  String value for purchaseCategoryName.
         * @return Builder
         */
        public Builder purchaseCategoryName(String purchaseCategoryName) {
            this.purchaseCategoryName = purchaseCategoryName;
            return this;
        }

        /**
         * Setter for isSuperseded.
         * @param  isSuperseded  Boolean value for isSuperseded.
         * @return Builder
         */
        public Builder isSuperseded(Boolean isSuperseded) {
            this.isSuperseded = isSuperseded;
            return this;
        }

        /**
         * Setter for isVirtualCard.
         * @param  isVirtualCard  Boolean value for isVirtualCard.
         * @return Builder
         */
        public Builder isVirtualCard(Boolean isVirtualCard) {
            this.isVirtualCard = isVirtualCard;
            return this;
        }

        /**
         * Setter for isNational.
         * @param  isNational  Boolean value for isNational.
         * @return Builder
         */
        public Builder isNational(Boolean isNational) {
            this.isNational = isNational;
            return this;
        }

        /**
         * Setter for isInternational.
         * @param  isInternational  Boolean value for isInternational.
         * @return Builder
         */
        public Builder isInternational(Boolean isInternational) {
            this.isInternational = isInternational;
            return this;
        }

        /**
         * Setter for isCRT.
         * @param  isCRT  Boolean value for isCRT.
         * @return Builder
         */
        public Builder isCRT(Boolean isCRT) {
            this.isCRT = isCRT;
            return this;
        }

        /**
         * Setter for isFleet.
         * @param  isFleet  Boolean value for isFleet.
         * @return Builder
         */
        public Builder isFleet(Boolean isFleet) {
            this.isFleet = isFleet;
            return this;
        }

        /**
         * Setter for isShellSitesOnly.
         * @param  isShellSitesOnly  Boolean value for isShellSitesOnly.
         * @return Builder
         */
        public Builder isShellSitesOnly(Boolean isShellSitesOnly) {
            this.isShellSitesOnly = isShellSitesOnly;
            return this;
        }

        /**
         * Setter for isPartnerSitesIncluded.
         * @param  isPartnerSitesIncluded  Boolean value for isPartnerSitesIncluded.
         * @return Builder
         */
        public Builder isPartnerSitesIncluded(Boolean isPartnerSitesIncluded) {
            this.isPartnerSitesIncluded = isPartnerSitesIncluded;
            return this;
        }

        /**
         * Setter for cardTypeId.
         * @param  cardTypeId  Integer value for cardTypeId.
         * @return Builder
         */
        public Builder cardTypeId(Integer cardTypeId) {
            this.cardTypeId = cardTypeId;
            return this;
        }

        /**
         * Setter for cardTypeCode.
         * @param  cardTypeCode  String value for cardTypeCode.
         * @return Builder
         */
        public Builder cardTypeCode(String cardTypeCode) {
            this.cardTypeCode = cardTypeCode;
            return this;
        }

        /**
         * Setter for cardTypeName.
         * @param  cardTypeName  String value for cardTypeName.
         * @return Builder
         */
        public Builder cardTypeName(String cardTypeName) {
            this.cardTypeName = cardTypeName;
            return this;
        }

        /**
         * Setter for bundleId.
         * @param  bundleId  String value for bundleId.
         * @return Builder
         */
        public Builder bundleId(String bundleId) {
            this.bundleId = bundleId;
            return this;
        }

        /**
         * Setter for mediumTypeID.
         * @param  mediumTypeID  Integer value for mediumTypeID.
         * @return Builder
         */
        public Builder mediumTypeID(Integer mediumTypeID) {
            this.mediumTypeID = mediumTypeID;
            return this;
        }

        /**
         * Setter for mediumType.
         * @param  mediumType  String value for mediumType.
         * @return Builder
         */
        public Builder mediumType(String mediumType) {
            this.mediumType = mediumType;
            return this;
        }

        /**
         * Builds a new {@link RestrictionCardList} object using the set fields.
         * @return {@link RestrictionCardList}
         */
        public RestrictionCardList build() {
            return new RestrictionCardList(cardId, pAN, expiryDate, statusId, statusDescription,
                    driverName, vRN, issueDate, issueNumber, accountId, accountNumber, accountName,
                    accountShortName, currencyCode, colCoCurrencyCode, colCoCurrencySymbol,
                    restrictionCurrencyCode, restrictionCurrencySymbol, purchaseCategoryId,
                    purchaseCategoryCode, purchaseCategoryName, isSuperseded, isVirtualCard,
                    isNational, isInternational, isCRT, isFleet, isShellSitesOnly,
                    isPartnerSitesIncluded, cardTypeId, cardTypeCode, cardTypeName, bundleId,
                    mediumTypeID, mediumType);
        }
    }
}
