/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for CreateCardGroupRequest type.
 */
public class CreateCardGroupRequest {
    private Integer colCoCode;
    private Integer colCoId;
    private String payerNumber;
    private Integer payerId;
    private Integer accountId;
    private String accountNumber;
    private Boolean printOnCard;
    private OptionalNullable<String> cardGroupName;
    private List<CreateCardGroupRequestCardsItems> cards;

    /**
     * Default constructor.
     */
    public CreateCardGroupRequest() {
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  printOnCard  Boolean value for printOnCard.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  cards  List of CreateCardGroupRequestCardsItems value for cards.
     */
    public CreateCardGroupRequest(
            Integer colCoCode,
            Integer colCoId,
            String payerNumber,
            Integer payerId,
            Integer accountId,
            String accountNumber,
            Boolean printOnCard,
            String cardGroupName,
            List<CreateCardGroupRequestCardsItems> cards) {
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.payerNumber = payerNumber;
        this.payerId = payerId;
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.printOnCard = printOnCard;
        this.cardGroupName = OptionalNullable.of(cardGroupName);
        this.cards = cards;
    }

    /**
     * Initialization constructor.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerId  Integer value for payerId.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  printOnCard  Boolean value for printOnCard.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  cards  List of CreateCardGroupRequestCardsItems value for cards.
     */

    protected CreateCardGroupRequest(Integer colCoCode, Integer colCoId, String payerNumber,
            Integer payerId, Integer accountId, String accountNumber, Boolean printOnCard,
            OptionalNullable<String> cardGroupName,
            List<CreateCardGroupRequestCardsItems> cards) {
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.payerNumber = payerNumber;
        this.payerId = payerId;
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.printOnCard = printOnCard;
        this.cardGroupName = cardGroupName;
        this.cards = cards;
    }

    /**
     * Getter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86-Philippines 5-UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoCode() {
        return colCoCode;
    }

    /**
     * Setter for ColCoCode.
     * Collecting Company Code (Shell Code) of the selected payer. Mandatory for serviced OUs such
     * as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if
     * ColCoID is provided. Example: 86-Philippines 5-UK
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = colCoCode;
    }

    /**
     * Getter for ColCoId.
     * Collecting Company Id of the selected payer. Optional if ColCoCode is passed else Mandatory.
     * Example: 1-Philippines 5-UK
     * @return Returns the Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColCoId() {
        return colCoId;
    }

    /**
     * Setter for ColCoId.
     * Collecting Company Id of the selected payer. Optional if ColCoCode is passed else Mandatory.
     * Example: 1-Philippines 5-UK
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = colCoId;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory
     * @return Returns the String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPayerNumber() {
        return payerNumber;
    }

    /**
     * Setter for PayerNumber.
     * Payer Number of the selected payer. Optional if PayerId is passed else Mandatory
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = payerNumber;
    }

    /**
     * Getter for PayerId.
     * Payer Id (i.e., Customer Id of the Payment Customer in H3 Cards Platform) of the selected
     * payer. Optional if PayerNumber is passed else Mandatory
     * @return Returns the Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPayerId() {
        return payerId;
    }

    /**
     * Setter for PayerId.
     * Payer Id (i.e., Customer Id of the Payment Customer in H3 Cards Platform) of the selected
     * payer. Optional if PayerNumber is passed else Mandatory
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = payerId;
    }

    /**
     * Getter for AccountId.
     * Account ID of the customer. Optional if AccountNumber is passed else Mandatory.
     * @return Returns the Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * Account ID of the customer. Optional if AccountNumber is passed else Mandatory.
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for AccountNumber.
     * Account Number of the customer. Optional if AccountId is passed else Mandatory.
     * @return Returns the String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account Number of the customer. Optional if AccountId is passed else Mandatory.
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for PrintOnCard.
     * Whether card group name to be embossed on the cards or not.
     * @return Returns the Boolean
     */
    @JsonGetter("PrintOnCard")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPrintOnCard() {
        return printOnCard;
    }

    /**
     * Setter for PrintOnCard.
     * Whether card group name to be embossed on the cards or not.
     * @param printOnCard Value for Boolean
     */
    @JsonSetter("PrintOnCard")
    public void setPrintOnCard(Boolean printOnCard) {
        this.printOnCard = printOnCard;
    }

    /**
     * Internal Getter for CardGroupName.
     * @return Returns the Internal String
     */
    @JsonGetter("CardGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCardGroupName() {
        return this.cardGroupName;
    }

    /**
     * Getter for CardGroupName.
     * @return Returns the String
     */
    public String getCardGroupName() {
        return OptionalNullable.getFrom(cardGroupName);
    }

    /**
     * Setter for CardGroupName.
     * @param cardGroupName Value for String
     */
    @JsonSetter("CardGroupName")
    public void setCardGroupName(String cardGroupName) {
        this.cardGroupName = OptionalNullable.of(cardGroupName);
    }

    /**
     * UnSetter for CardGroupName.
     */
    public void unsetCardGroupName() {
        cardGroupName = null;
    }

    /**
     * Getter for Cards.
     * List of cards to be moved to the new card group. This list is optional â€“ no card will be
     * moved to the new card group when the list is empty. The fields of Card entity are described
     * in the below rows. The maximum number of cards allowed to be moved in a request is 500
     * (configurable). The whole request including the card group creation will be rejected when the
     * limit is exceeded.
     * @return Returns the List of CreateCardGroupRequestCardsItems
     */
    @JsonGetter("Cards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CreateCardGroupRequestCardsItems> getCards() {
        return cards;
    }

    /**
     * Setter for Cards.
     * List of cards to be moved to the new card group. This list is optional â€“ no card will be
     * moved to the new card group when the list is empty. The fields of Card entity are described
     * in the below rows. The maximum number of cards allowed to be moved in a request is 500
     * (configurable). The whole request including the card group creation will be rejected when the
     * limit is exceeded.
     * @param cards Value for List of CreateCardGroupRequestCardsItems
     */
    @JsonSetter("Cards")
    public void setCards(List<CreateCardGroupRequestCardsItems> cards) {
        this.cards = cards;
    }

    /**
     * Converts this CreateCardGroupRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateCardGroupRequest [" + "colCoCode=" + colCoCode + ", colCoId=" + colCoId
                + ", payerNumber=" + payerNumber + ", payerId=" + payerId + ", accountId="
                + accountId + ", accountNumber=" + accountNumber + ", printOnCard=" + printOnCard
                + ", cardGroupName=" + cardGroupName + ", cards=" + cards + "]";
    }

    /**
     * Builds a new {@link CreateCardGroupRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateCardGroupRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .colCoCode(getColCoCode())
                .colCoId(getColCoId())
                .payerNumber(getPayerNumber())
                .payerId(getPayerId())
                .accountId(getAccountId())
                .accountNumber(getAccountNumber())
                .printOnCard(getPrintOnCard())
                .cards(getCards());
        builder.cardGroupName = internalGetCardGroupName();
        return builder;
    }

    /**
     * Class to build instances of {@link CreateCardGroupRequest}.
     */
    public static class Builder {
        private Integer colCoCode;
        private Integer colCoId;
        private String payerNumber;
        private Integer payerId;
        private Integer accountId;
        private String accountNumber;
        private Boolean printOnCard;
        private OptionalNullable<String> cardGroupName;
        private List<CreateCardGroupRequestCardsItems> cards;



        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = colCoCode;
            return this;
        }

        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = colCoId;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = payerNumber;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = payerId;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for printOnCard.
         * @param  printOnCard  Boolean value for printOnCard.
         * @return Builder
         */
        public Builder printOnCard(Boolean printOnCard) {
            this.printOnCard = printOnCard;
            return this;
        }

        /**
         * Setter for cardGroupName.
         * @param  cardGroupName  String value for cardGroupName.
         * @return Builder
         */
        public Builder cardGroupName(String cardGroupName) {
            this.cardGroupName = OptionalNullable.of(cardGroupName);
            return this;
        }

        /**
         * UnSetter for cardGroupName.
         * @return Builder
         */
        public Builder unsetCardGroupName() {
            cardGroupName = null;
            return this;
        }

        /**
         * Setter for cards.
         * @param  cards  List of CreateCardGroupRequestCardsItems value for cards.
         * @return Builder
         */
        public Builder cards(List<CreateCardGroupRequestCardsItems> cards) {
            this.cards = cards;
            return this;
        }

        /**
         * Builds a new {@link CreateCardGroupRequest} object using the set fields.
         * @return {@link CreateCardGroupRequest}
         */
        public CreateCardGroupRequest build() {
            return new CreateCardGroupRequest(colCoCode, colCoId, payerNumber, payerId, accountId,
                    accountNumber, printOnCard, cardGroupName, cards);
        }
    }
}
