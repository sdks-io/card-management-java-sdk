/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * CardDetailsResponseInternationalPOSLanguageCodeEnum to be used.
 */
public enum CardDetailsResponseInternationalPOSLanguageCodeEnum {
    DEU,

    FRA,

    BUL,

    HRV,

    CES,

    DAN,

    FIN,

    ENG,

    ELL,

    ZHO,

    HUN,

    ITA,

    LTZ,

    MSA,

    NLD,

    NOB,

    URD,

    POL,

    POR,

    RON,

    RUS,

    SLK,

    SLV,

    SPA,

    SWE,

    TUR,

    THA,

    FIL,

    EST,

    LAV,

    LIT;


    private static TreeMap<String, CardDetailsResponseInternationalPOSLanguageCodeEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        DEU.value = "deu";
        FRA.value = "fra";
        BUL.value = "bul";
        HRV.value = "hrv";
        CES.value = "ces";
        DAN.value = "dan";
        FIN.value = "fin";
        ENG.value = "eng";
        ELL.value = "ell";
        ZHO.value = "zho";
        HUN.value = "hun";
        ITA.value = "ita";
        LTZ.value = "ltz";
        MSA.value = "msa";
        NLD.value = "nld";
        NOB.value = "nob";
        URD.value = "urd";
        POL.value = "pol";
        POR.value = "por";
        RON.value = "ron";
        RUS.value = "rus";
        SLK.value = "slk";
        SLV.value = "slv";
        SPA.value = "spa";
        SWE.value = "swe";
        TUR.value = "tur";
        THA.value = "tha";
        FIL.value = "fil";
        EST.value = "est";
        LAV.value = "lav";
        LIT.value = "lit";

        valueMap.put("deu", DEU);
        valueMap.put("fra", FRA);
        valueMap.put("bul", BUL);
        valueMap.put("hrv", HRV);
        valueMap.put("ces", CES);
        valueMap.put("dan", DAN);
        valueMap.put("fin", FIN);
        valueMap.put("eng", ENG);
        valueMap.put("ell", ELL);
        valueMap.put("zho", ZHO);
        valueMap.put("hun", HUN);
        valueMap.put("ita", ITA);
        valueMap.put("ltz", LTZ);
        valueMap.put("msa", MSA);
        valueMap.put("nld", NLD);
        valueMap.put("nob", NOB);
        valueMap.put("urd", URD);
        valueMap.put("pol", POL);
        valueMap.put("por", POR);
        valueMap.put("ron", RON);
        valueMap.put("rus", RUS);
        valueMap.put("slk", SLK);
        valueMap.put("slv", SLV);
        valueMap.put("spa", SPA);
        valueMap.put("swe", SWE);
        valueMap.put("tur", TUR);
        valueMap.put("tha", THA);
        valueMap.put("fil", FIL);
        valueMap.put("est", EST);
        valueMap.put("lav", LAV);
        valueMap.put("lit", LIT);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static CardDetailsResponseInternationalPOSLanguageCodeEnum constructFromString(String toConvert) throws IOException {
        CardDetailsResponseInternationalPOSLanguageCodeEnum enumValue = fromString(toConvert);
        if (enumValue == null) {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static CardDetailsResponseInternationalPOSLanguageCodeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of CardDetailsResponseInternationalPOSLanguageCodeEnum values to list of string values.
     * @param toConvert The list of CardDetailsResponseInternationalPOSLanguageCodeEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<CardDetailsResponseInternationalPOSLanguageCodeEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (CardDetailsResponseInternationalPOSLanguageCodeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 